"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/cborg";
exports.ids = ["vendor-chunks/cborg"];
exports.modules = {

/***/ "(ssr)/../node_modules/cborg/cborg.js":
/*!**************************************!*\
  !*** ../node_modules/cborg/cborg.js ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Token: () => (/* reexport safe */ _lib_token_js__WEBPACK_IMPORTED_MODULE_2__.Token),\n/* harmony export */   Tokenizer: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.Tokeniser),\n/* harmony export */   Type: () => (/* reexport safe */ _lib_token_js__WEBPACK_IMPORTED_MODULE_2__.Type),\n/* harmony export */   decode: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.decode),\n/* harmony export */   decodeFirst: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.decodeFirst),\n/* harmony export */   encode: () => (/* reexport safe */ _lib_encode_js__WEBPACK_IMPORTED_MODULE_0__.encode),\n/* harmony export */   tokensToObject: () => (/* reexport safe */ _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__.tokensToObject)\n/* harmony export */ });\n/* harmony import */ var _lib_encode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/encode.js */ \"(ssr)/../node_modules/cborg/lib/encode.js\");\n/* harmony import */ var _lib_decode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/decode.js */ \"(ssr)/../node_modules/cborg/lib/decode.js\");\n/* harmony import */ var _lib_token_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/token.js */ \"(ssr)/../node_modules/cborg/lib/token.js\");\n\n\n\n\n/**\n * Export the types that were present in the original manual cborg.d.ts\n * @typedef {import('./interface').TagDecoder} TagDecoder\n * There was originally just `TypeEncoder` so don't break types by renaming or not exporting\n * @typedef {import('./interface').OptionalTypeEncoder} TypeEncoder\n * @typedef {import('./interface').DecodeOptions} DecodeOptions\n * @typedef {import('./interface').EncodeOptions} EncodeOptions\n */\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL2Nib3JnL2Nib3JnLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBd0M7QUFDd0M7QUFDcEM7O0FBRTVDO0FBQ0E7QUFDQSxhQUFhLGtDQUFrQztBQUMvQztBQUNBLGFBQWEsMkNBQTJDO0FBQ3hELGFBQWEscUNBQXFDO0FBQ2xELGFBQWEscUNBQXFDO0FBQ2xEOztBQVVDIiwic291cmNlcyI6WyJEOlxcRnVuZFJhaXNlclxcbm9kZV9tb2R1bGVzXFxjYm9yZ1xcY2JvcmcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZW5jb2RlIH0gZnJvbSAnLi9saWIvZW5jb2RlLmpzJ1xuaW1wb3J0IHsgZGVjb2RlLCBkZWNvZGVGaXJzdCwgVG9rZW5pc2VyLCB0b2tlbnNUb09iamVjdCB9IGZyb20gJy4vbGliL2RlY29kZS5qcydcbmltcG9ydCB7IFRva2VuLCBUeXBlIH0gZnJvbSAnLi9saWIvdG9rZW4uanMnXG5cbi8qKlxuICogRXhwb3J0IHRoZSB0eXBlcyB0aGF0IHdlcmUgcHJlc2VudCBpbiB0aGUgb3JpZ2luYWwgbWFudWFsIGNib3JnLmQudHNcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vaW50ZXJmYWNlJykuVGFnRGVjb2Rlcn0gVGFnRGVjb2RlclxuICogVGhlcmUgd2FzIG9yaWdpbmFsbHkganVzdCBgVHlwZUVuY29kZXJgIHNvIGRvbid0IGJyZWFrIHR5cGVzIGJ5IHJlbmFtaW5nIG9yIG5vdCBleHBvcnRpbmdcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vaW50ZXJmYWNlJykuT3B0aW9uYWxUeXBlRW5jb2Rlcn0gVHlwZUVuY29kZXJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vaW50ZXJmYWNlJykuRGVjb2RlT3B0aW9uc30gRGVjb2RlT3B0aW9uc1xuICogQHR5cGVkZWYge2ltcG9ydCgnLi9pbnRlcmZhY2UnKS5FbmNvZGVPcHRpb25zfSBFbmNvZGVPcHRpb25zXG4gKi9cblxuZXhwb3J0IHtcbiAgZGVjb2RlLFxuICBkZWNvZGVGaXJzdCxcbiAgVG9rZW5pc2VyIGFzIFRva2VuaXplcixcbiAgdG9rZW5zVG9PYmplY3QsXG4gIGVuY29kZSxcbiAgVG9rZW4sXG4gIFR5cGVcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/cborg/cborg.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/cborg/lib/0uint.js":
/*!******************************************!*\
  !*** ../node_modules/cborg/lib/0uint.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeUint16: () => (/* binding */ decodeUint16),\n/* harmony export */   decodeUint32: () => (/* binding */ decodeUint32),\n/* harmony export */   decodeUint64: () => (/* binding */ decodeUint64),\n/* harmony export */   decodeUint8: () => (/* binding */ decodeUint8),\n/* harmony export */   encodeUint: () => (/* binding */ encodeUint),\n/* harmony export */   encodeUintValue: () => (/* binding */ encodeUintValue),\n/* harmony export */   readUint16: () => (/* binding */ readUint16),\n/* harmony export */   readUint32: () => (/* binding */ readUint32),\n/* harmony export */   readUint64: () => (/* binding */ readUint64),\n/* harmony export */   readUint8: () => (/* binding */ readUint8),\n/* harmony export */   uintBoundaries: () => (/* binding */ uintBoundaries)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/../node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/../node_modules/cborg/lib/common.js\");\n/* globals BigInt */\n\n\n\n\nconst uintBoundaries = [24, 256, 65536, 4294967296, BigInt('18446744073709551616')]\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nfunction readUint8 (data, offset, options) {\n  ;(0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 1)\n  const value = data[offset]\n  if (options.strict === true && value < uintBoundaries[0]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nfunction readUint16 (data, offset, options) {\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 2)\n  const value = (data[offset] << 8) | data[offset + 1]\n  if (options.strict === true && value < uintBoundaries[1]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nfunction readUint32 (data, offset, options) {\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 4)\n  const value = (data[offset] * 16777216 /* 2 ** 24 */) + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3]\n  if (options.strict === true && value < uintBoundaries[2]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number|bigint}\n */\nfunction readUint64 (data, offset, options) {\n  // assume BigInt, convert back to Number if within safe range\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, offset, 8)\n  const hi = (data[offset] * 16777216 /* 2 ** 24 */) + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3]\n  const lo = (data[offset + 4] * 16777216 /* 2 ** 24 */) + (data[offset + 5] << 16) + (data[offset + 6] << 8) + data[offset + 7]\n  const value = (BigInt(hi) << BigInt(32)) + BigInt(lo)\n  if (options.strict === true && value < uintBoundaries[3]) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  if (value <= Number.MAX_SAFE_INTEGER) {\n    return Number(value)\n  }\n  if (options.allowBigInt === true) {\n    return value\n  }\n  throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} integers outside of the safe integer range are not supported`)\n}\n\n/* not required thanks to quick[] list\nconst oneByteTokens = new Array(24).fill(0).map((v, i) => new Token(Type.uint, i, 1))\nexport function decodeUintCompact (data, pos, minor, options) {\n  return oneByteTokens[minor]\n}\n*/\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint8 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint16 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint32 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint32(data, pos + 1, options), 5)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUint64 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, readUint64(data, pos + 1, options), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeUint (buf, token) {\n  return encodeUintValue(buf, 0, token.value)\n}\n\n/**\n * @param {Bl} buf\n * @param {number} major\n * @param {number|bigint} uint\n */\nfunction encodeUintValue (buf, major, uint) {\n  if (uint < uintBoundaries[0]) {\n    const nuint = Number(uint)\n    // pack into one byte, minor=0, additional=value\n    buf.push([major | nuint])\n  } else if (uint < uintBoundaries[1]) {\n    const nuint = Number(uint)\n    // pack into two byte, minor=0, additional=24\n    buf.push([major | 24, nuint])\n  } else if (uint < uintBoundaries[2]) {\n    const nuint = Number(uint)\n    // pack into three byte, minor=0, additional=25\n    buf.push([major | 25, nuint >>> 8, nuint & 0xff])\n  } else if (uint < uintBoundaries[3]) {\n    const nuint = Number(uint)\n    // pack into five byte, minor=0, additional=26\n    buf.push([major | 26, (nuint >>> 24) & 0xff, (nuint >>> 16) & 0xff, (nuint >>> 8) & 0xff, nuint & 0xff])\n  } else {\n    const buint = BigInt(uint)\n    if (buint < uintBoundaries[4]) {\n      // pack into nine byte, minor=0, additional=27\n      const set = [major | 27, 0, 0, 0, 0, 0, 0, 0]\n      // simulate bitwise above 32 bits\n      let lo = Number(buint & BigInt(0xffffffff))\n      let hi = Number(buint >> BigInt(32) & BigInt(0xffffffff))\n      set[8] = lo & 0xff\n      lo = lo >> 8\n      set[7] = lo & 0xff\n      lo = lo >> 8\n      set[6] = lo & 0xff\n      lo = lo >> 8\n      set[5] = lo & 0xff\n      set[4] = hi & 0xff\n      hi = hi >> 8\n      set[3] = hi & 0xff\n      hi = hi >> 8\n      set[2] = hi & 0xff\n      hi = hi >> 8\n      set[1] = hi & 0xff\n      buf.push(set)\n    } else {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} encountered BigInt larger than allowable range`)\n    }\n  }\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeUint.encodedSize = function encodedSize (token) {\n  return encodeUintValue.encodedSize(token.value)\n}\n\n/**\n * @param {number} uint\n * @returns {number}\n */\nencodeUintValue.encodedSize = function encodedSize (uint) {\n  if (uint < uintBoundaries[0]) {\n    return 1\n  }\n  if (uint < uintBoundaries[1]) {\n    return 2\n  }\n  if (uint < uintBoundaries[2]) {\n    return 3\n  }\n  if (uint < uintBoundaries[3]) {\n    return 5\n  }\n  return 9\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeUint.compareTokens = function compareTokens (tok1, tok2) {\n  return tok1.value < tok2.value ? -1 : tok1.value > tok2.value ? 1 : /* c8 ignore next */ 0\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/cborg/lib/0uint.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/cborg/lib/1negint.js":
/*!********************************************!*\
  !*** ../node_modules/cborg/lib/1negint.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeNegint16: () => (/* binding */ decodeNegint16),\n/* harmony export */   decodeNegint32: () => (/* binding */ decodeNegint32),\n/* harmony export */   decodeNegint64: () => (/* binding */ decodeNegint64),\n/* harmony export */   decodeNegint8: () => (/* binding */ decodeNegint8),\n/* harmony export */   encodeNegint: () => (/* binding */ encodeNegint)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/../node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/../node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ \"(ssr)/../node_modules/cborg/lib/common.js\");\n/* eslint-env es2020 */\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint8 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, -1 - _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint16 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, -1 - _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint32 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, -1 - _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options), 5)\n}\n\nconst neg1b = BigInt(-1)\nconst pos1b = BigInt(1)\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeNegint64 (data, pos, _minor, options) {\n  const int = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options)\n  if (typeof int !== 'bigint') {\n    const value = -1 - int\n    if (value >= Number.MIN_SAFE_INTEGER) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, value, 9)\n    }\n  }\n  if (options.allowBigInt !== true) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} integers outside of the safe integer range are not supported`)\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, neg1b - BigInt(int), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeNegint (buf, token) {\n  const negint = token.value\n  const unsigned = (typeof negint === 'bigint' ? (negint * neg1b - pos1b) : (negint * -1 - 1))\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, token.type.majorEncoded, unsigned)\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeNegint.encodedSize = function encodedSize (token) {\n  const negint = token.value\n  const unsigned = (typeof negint === 'bigint' ? (negint * neg1b - pos1b) : (negint * -1 - 1))\n  /* c8 ignore next 4 */\n  // handled by quickEncode, we shouldn't get here but it's included for completeness\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[0]) {\n    return 1\n  }\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[1]) {\n    return 2\n  }\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[2]) {\n    return 3\n  }\n  if (unsigned < _0uint_js__WEBPACK_IMPORTED_MODULE_1__.uintBoundaries[3]) {\n    return 5\n  }\n  return 9\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeNegint.compareTokens = function compareTokens (tok1, tok2) {\n  // opposite of the uint comparison since we store the uint version in bytes\n  return tok1.value < tok2.value ? 1 : tok1.value > tok2.value ? -1 : /* c8 ignore next */ 0\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi8xbmVnaW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7O0FBRXdDO0FBQ047QUFDVzs7QUFFN0M7QUFDQSxhQUFhLHNCQUFzQjtBQUNuQyxhQUFhLHNDQUFzQztBQUNuRDs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLGFBQWEsNENBQUssQ0FBQywyQ0FBSSxjQUFjLGdEQUFjO0FBQ25EOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJLGNBQWMsaURBQWU7QUFDcEQ7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxhQUFhLDRDQUFLLENBQUMsMkNBQUksY0FBYyxpREFBZTtBQUNwRDs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsY0FBYyxpREFBZTtBQUM3QjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsNENBQUssQ0FBQywyQ0FBSTtBQUMzQjtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsdURBQWUsRUFBRTtBQUN4QztBQUNBLGFBQWEsNENBQUssQ0FBQywyQ0FBSTtBQUN2Qjs7QUFFQTtBQUNBLFdBQVcsSUFBSTtBQUNmLFdBQVcsT0FBTztBQUNsQjtBQUNPO0FBQ1A7QUFDQTtBQUNBLEVBQUUsc0RBQW9CO0FBQ3RCOztBQUVBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIscURBQW1CO0FBQ3BDO0FBQ0E7QUFDQSxpQkFBaUIscURBQW1CO0FBQ3BDO0FBQ0E7QUFDQSxpQkFBaUIscURBQW1CO0FBQ3BDO0FBQ0E7QUFDQSxpQkFBaUIscURBQW1CO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiRDpcXEZ1bmRSYWlzZXJcXG5vZGVfbW9kdWxlc1xcY2JvcmdcXGxpYlxcMW5lZ2ludC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZW52IGVzMjAyMCAqL1xuXG5pbXBvcnQgeyBUb2tlbiwgVHlwZSB9IGZyb20gJy4vdG9rZW4uanMnXG5pbXBvcnQgKiBhcyB1aW50IGZyb20gJy4vMHVpbnQuanMnXG5pbXBvcnQgeyBkZWNvZGVFcnJQcmVmaXggfSBmcm9tICcuL2NvbW1vbi5qcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2JsLmpzJykuQmx9IEJsXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9pbnRlcmZhY2UnKS5EZWNvZGVPcHRpb25zfSBEZWNvZGVPcHRpb25zXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlTmVnaW50OCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLm5lZ2ludCwgLTEgLSB1aW50LnJlYWRVaW50OChkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSwgMilcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlTmVnaW50MTYgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiBuZXcgVG9rZW4oVHlwZS5uZWdpbnQsIC0xIC0gdWludC5yZWFkVWludDE2KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpLCAzKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVOZWdpbnQzMiAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLm5lZ2ludCwgLTEgLSB1aW50LnJlYWRVaW50MzIoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIDUpXG59XG5cbmNvbnN0IG5lZzFiID0gQmlnSW50KC0xKVxuY29uc3QgcG9zMWIgPSBCaWdJbnQoMSlcblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlTmVnaW50NjQgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIGNvbnN0IGludCA9IHVpbnQucmVhZFVpbnQ2NChkYXRhLCBwb3MgKyAxLCBvcHRpb25zKVxuICBpZiAodHlwZW9mIGludCAhPT0gJ2JpZ2ludCcpIHtcbiAgICBjb25zdCB2YWx1ZSA9IC0xIC0gaW50XG4gICAgaWYgKHZhbHVlID49IE51bWJlci5NSU5fU0FGRV9JTlRFR0VSKSB7XG4gICAgICByZXR1cm4gbmV3IFRva2VuKFR5cGUubmVnaW50LCB2YWx1ZSwgOSlcbiAgICB9XG4gIH1cbiAgaWYgKG9wdGlvbnMuYWxsb3dCaWdJbnQgIT09IHRydWUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSBpbnRlZ2VycyBvdXRzaWRlIG9mIHRoZSBzYWZlIGludGVnZXIgcmFuZ2UgYXJlIG5vdCBzdXBwb3J0ZWRgKVxuICB9XG4gIHJldHVybiBuZXcgVG9rZW4oVHlwZS5uZWdpbnQsIG5lZzFiIC0gQmlnSW50KGludCksIDkpXG59XG5cbi8qKlxuICogQHBhcmFtIHtCbH0gYnVmXG4gKiBAcGFyYW0ge1Rva2VufSB0b2tlblxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlTmVnaW50IChidWYsIHRva2VuKSB7XG4gIGNvbnN0IG5lZ2ludCA9IHRva2VuLnZhbHVlXG4gIGNvbnN0IHVuc2lnbmVkID0gKHR5cGVvZiBuZWdpbnQgPT09ICdiaWdpbnQnID8gKG5lZ2ludCAqIG5lZzFiIC0gcG9zMWIpIDogKG5lZ2ludCAqIC0xIC0gMSkpXG4gIHVpbnQuZW5jb2RlVWludFZhbHVlKGJ1ZiwgdG9rZW4udHlwZS5tYWpvckVuY29kZWQsIHVuc2lnbmVkKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5lbmNvZGVOZWdpbnQuZW5jb2RlZFNpemUgPSBmdW5jdGlvbiBlbmNvZGVkU2l6ZSAodG9rZW4pIHtcbiAgY29uc3QgbmVnaW50ID0gdG9rZW4udmFsdWVcbiAgY29uc3QgdW5zaWduZWQgPSAodHlwZW9mIG5lZ2ludCA9PT0gJ2JpZ2ludCcgPyAobmVnaW50ICogbmVnMWIgLSBwb3MxYikgOiAobmVnaW50ICogLTEgLSAxKSlcbiAgLyogYzggaWdub3JlIG5leHQgNCAqL1xuICAvLyBoYW5kbGVkIGJ5IHF1aWNrRW5jb2RlLCB3ZSBzaG91bGRuJ3QgZ2V0IGhlcmUgYnV0IGl0J3MgaW5jbHVkZWQgZm9yIGNvbXBsZXRlbmVzc1xuICBpZiAodW5zaWduZWQgPCB1aW50LnVpbnRCb3VuZGFyaWVzWzBdKSB7XG4gICAgcmV0dXJuIDFcbiAgfVxuICBpZiAodW5zaWduZWQgPCB1aW50LnVpbnRCb3VuZGFyaWVzWzFdKSB7XG4gICAgcmV0dXJuIDJcbiAgfVxuICBpZiAodW5zaWduZWQgPCB1aW50LnVpbnRCb3VuZGFyaWVzWzJdKSB7XG4gICAgcmV0dXJuIDNcbiAgfVxuICBpZiAodW5zaWduZWQgPCB1aW50LnVpbnRCb3VuZGFyaWVzWzNdKSB7XG4gICAgcmV0dXJuIDVcbiAgfVxuICByZXR1cm4gOVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VG9rZW59IHRvazFcbiAqIEBwYXJhbSB7VG9rZW59IHRvazJcbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmVuY29kZU5lZ2ludC5jb21wYXJlVG9rZW5zID0gZnVuY3Rpb24gY29tcGFyZVRva2VucyAodG9rMSwgdG9rMikge1xuICAvLyBvcHBvc2l0ZSBvZiB0aGUgdWludCBjb21wYXJpc29uIHNpbmNlIHdlIHN0b3JlIHRoZSB1aW50IHZlcnNpb24gaW4gYnl0ZXNcbiAgcmV0dXJuIHRvazEudmFsdWUgPCB0b2syLnZhbHVlID8gMSA6IHRvazEudmFsdWUgPiB0b2syLnZhbHVlID8gLTEgOiAvKiBjOCBpZ25vcmUgbmV4dCAqLyAwXG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/cborg/lib/1negint.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/cborg/lib/2bytes.js":
/*!*******************************************!*\
  !*** ../node_modules/cborg/lib/2bytes.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compareBytes: () => (/* binding */ compareBytes),\n/* harmony export */   decodeBytes16: () => (/* binding */ decodeBytes16),\n/* harmony export */   decodeBytes32: () => (/* binding */ decodeBytes32),\n/* harmony export */   decodeBytes64: () => (/* binding */ decodeBytes64),\n/* harmony export */   decodeBytes8: () => (/* binding */ decodeBytes8),\n/* harmony export */   decodeBytesCompact: () => (/* binding */ decodeBytesCompact),\n/* harmony export */   encodeBytes: () => (/* binding */ encodeBytes)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/../node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/../node_modules/cborg/lib/common.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/../node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/../node_modules/cborg/lib/byte-utils.js\");\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (data, pos, prefix, length) {\n  (0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, pos, prefix + length)\n  const buf = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_3__.slice)(data, pos + prefix, pos + prefix + length)\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.bytes, buf, prefix + length)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeBytesCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBytes64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} 64-bit integer bytes lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * `encodedBytes` allows for caching when we do a byte version of a string\n * for key sorting purposes\n * @param {Token} token\n * @returns {Uint8Array}\n */\nfunction tokenBytes (token) {\n  if (token.encodedBytes === undefined) {\n    token.encodedBytes = token.type === _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string ? (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_3__.fromString)(token.value) : token.value\n  }\n  // @ts-ignore c'mon\n  return token.encodedBytes\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeBytes (buf, token) {\n  const bytes = tokenBytes(token)\n  _0uint_js__WEBPACK_IMPORTED_MODULE_2__.encodeUintValue(buf, token.type.majorEncoded, bytes.length)\n  buf.push(bytes)\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeBytes.encodedSize = function encodedSize (token) {\n  const bytes = tokenBytes(token)\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_2__.encodeUintValue.encodedSize(bytes.length) + bytes.length\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeBytes.compareTokens = function compareTokens (tok1, tok2) {\n  return compareBytes(tokenBytes(tok1), tokenBytes(tok2))\n}\n\n/**\n * @param {Uint8Array} b1\n * @param {Uint8Array} b2\n * @returns {number}\n */\nfunction compareBytes (b1, b2) {\n  return b1.length < b2.length ? -1 : b1.length > b2.length ? 1 : (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_3__.compare)(b1, b2)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi8yYnl0ZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBd0M7QUFDdUI7QUFDN0I7QUFDMEI7O0FBRTVEO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSxzQ0FBc0M7QUFDbkQ7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ0E7QUFDQSxFQUFFLDREQUFnQjtBQUNsQixjQUFjLHFEQUFLO0FBQ25CLGFBQWEsNENBQUssQ0FBQywyQ0FBSTtBQUN2Qjs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsZ0RBQWM7QUFDN0M7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsaURBQWU7QUFDOUM7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCwrQkFBK0IsaURBQWU7QUFDOUM7O0FBRUE7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLFlBQVksaURBQWU7QUFDM0I7QUFDQSx1QkFBdUIsdURBQWUsRUFBRTtBQUN4QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsMkNBQUksVUFBVSwwREFBVTtBQUNoRTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsSUFBSTtBQUNmLFdBQVcsT0FBTztBQUNsQjtBQUNPO0FBQ1A7QUFDQSxFQUFFLHNEQUFvQjtBQUN0QjtBQUNBOztBQUVBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxTQUFTLHNEQUFvQjtBQUM3Qjs7QUFFQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsWUFBWTtBQUN2QixhQUFhO0FBQ2I7QUFDTztBQUNQLGtFQUFrRSx1REFBTztBQUN6RSIsInNvdXJjZXMiOlsiRDpcXEZ1bmRSYWlzZXJcXG5vZGVfbW9kdWxlc1xcY2JvcmdcXGxpYlxcMmJ5dGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRva2VuLCBUeXBlIH0gZnJvbSAnLi90b2tlbi5qcydcbmltcG9ydCB7IGFzc2VydEVub3VnaERhdGEsIGRlY29kZUVyclByZWZpeCB9IGZyb20gJy4vY29tbW9uLmpzJ1xuaW1wb3J0ICogYXMgdWludCBmcm9tICcuLzB1aW50LmpzJ1xuaW1wb3J0IHsgY29tcGFyZSwgZnJvbVN0cmluZywgc2xpY2UgfSBmcm9tICcuL2J5dGUtdXRpbHMuanMnXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9ibC5qcycpLkJsfSBCbFxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vaW50ZXJmYWNlJykuRGVjb2RlT3B0aW9uc30gRGVjb2RlT3B0aW9uc1xuICovXG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gcHJlZml4XG4gKiBAcGFyYW0ge251bWJlcn0gbGVuZ3RoXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmZ1bmN0aW9uIHRvVG9rZW4gKGRhdGEsIHBvcywgcHJlZml4LCBsZW5ndGgpIHtcbiAgYXNzZXJ0RW5vdWdoRGF0YShkYXRhLCBwb3MsIHByZWZpeCArIGxlbmd0aClcbiAgY29uc3QgYnVmID0gc2xpY2UoZGF0YSwgcG9zICsgcHJlZml4LCBwb3MgKyBwcmVmaXggKyBsZW5ndGgpXG4gIHJldHVybiBuZXcgVG9rZW4oVHlwZS5ieXRlcywgYnVmLCBwcmVmaXggKyBsZW5ndGgpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gX29wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUJ5dGVzQ29tcGFjdCAoZGF0YSwgcG9zLCBtaW5vciwgX29wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAxLCBtaW5vcilcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQnl0ZXM4IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDIsIHVpbnQucmVhZFVpbnQ4KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVCeXRlczE2IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDMsIHVpbnQucmVhZFVpbnQxNihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQnl0ZXMzMiAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCA1LCB1aW50LnJlYWRVaW50MzIoZGF0YSwgcG9zICsgMSwgb3B0aW9ucykpXG59XG5cbi8vIFRPRE86IG1heWJlIHdlIHNob3VsZG4ndCBzdXBwb3J0IHRoaXMgLi5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUJ5dGVzNjQgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIGNvbnN0IGwgPSB1aW50LnJlYWRVaW50NjQoZGF0YSwgcG9zICsgMSwgb3B0aW9ucylcbiAgaWYgKHR5cGVvZiBsID09PSAnYmlnaW50Jykge1xuICAgIHRocm93IG5ldyBFcnJvcihgJHtkZWNvZGVFcnJQcmVmaXh9IDY0LWJpdCBpbnRlZ2VyIGJ5dGVzIGxlbmd0aHMgbm90IHN1cHBvcnRlZGApXG4gIH1cbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCA5LCBsKVxufVxuXG4vKipcbiAqIGBlbmNvZGVkQnl0ZXNgIGFsbG93cyBmb3IgY2FjaGluZyB3aGVuIHdlIGRvIGEgYnl0ZSB2ZXJzaW9uIG9mIGEgc3RyaW5nXG4gKiBmb3Iga2V5IHNvcnRpbmcgcHVycG9zZXNcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKiBAcmV0dXJucyB7VWludDhBcnJheX1cbiAqL1xuZnVuY3Rpb24gdG9rZW5CeXRlcyAodG9rZW4pIHtcbiAgaWYgKHRva2VuLmVuY29kZWRCeXRlcyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdG9rZW4uZW5jb2RlZEJ5dGVzID0gdG9rZW4udHlwZSA9PT0gVHlwZS5zdHJpbmcgPyBmcm9tU3RyaW5nKHRva2VuLnZhbHVlKSA6IHRva2VuLnZhbHVlXG4gIH1cbiAgLy8gQHRzLWlnbm9yZSBjJ21vblxuICByZXR1cm4gdG9rZW4uZW5jb2RlZEJ5dGVzXG59XG5cbi8qKlxuICogQHBhcmFtIHtCbH0gYnVmXG4gKiBAcGFyYW0ge1Rva2VufSB0b2tlblxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlQnl0ZXMgKGJ1ZiwgdG9rZW4pIHtcbiAgY29uc3QgYnl0ZXMgPSB0b2tlbkJ5dGVzKHRva2VuKVxuICB1aW50LmVuY29kZVVpbnRWYWx1ZShidWYsIHRva2VuLnR5cGUubWFqb3JFbmNvZGVkLCBieXRlcy5sZW5ndGgpXG4gIGJ1Zi5wdXNoKGJ5dGVzKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5lbmNvZGVCeXRlcy5lbmNvZGVkU2l6ZSA9IGZ1bmN0aW9uIGVuY29kZWRTaXplICh0b2tlbikge1xuICBjb25zdCBieXRlcyA9IHRva2VuQnl0ZXModG9rZW4pXG4gIHJldHVybiB1aW50LmVuY29kZVVpbnRWYWx1ZS5lbmNvZGVkU2l6ZShieXRlcy5sZW5ndGgpICsgYnl0ZXMubGVuZ3RoXG59XG5cbi8qKlxuICogQHBhcmFtIHtUb2tlbn0gdG9rMVxuICogQHBhcmFtIHtUb2tlbn0gdG9rMlxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZW5jb2RlQnl0ZXMuY29tcGFyZVRva2VucyA9IGZ1bmN0aW9uIGNvbXBhcmVUb2tlbnMgKHRvazEsIHRvazIpIHtcbiAgcmV0dXJuIGNvbXBhcmVCeXRlcyh0b2tlbkJ5dGVzKHRvazEpLCB0b2tlbkJ5dGVzKHRvazIpKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gYjFcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gYjJcbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb21wYXJlQnl0ZXMgKGIxLCBiMikge1xuICByZXR1cm4gYjEubGVuZ3RoIDwgYjIubGVuZ3RoID8gLTEgOiBiMS5sZW5ndGggPiBiMi5sZW5ndGggPyAxIDogY29tcGFyZShiMSwgYjIpXG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/cborg/lib/2bytes.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/cborg/lib/3string.js":
/*!********************************************!*\
  !*** ../node_modules/cborg/lib/3string.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeString16: () => (/* binding */ decodeString16),\n/* harmony export */   decodeString32: () => (/* binding */ decodeString32),\n/* harmony export */   decodeString64: () => (/* binding */ decodeString64),\n/* harmony export */   decodeString8: () => (/* binding */ decodeString8),\n/* harmony export */   decodeStringCompact: () => (/* binding */ decodeStringCompact),\n/* harmony export */   encodeString: () => (/* binding */ encodeString)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/../node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/../node_modules/cborg/lib/common.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/../node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _2bytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./2bytes.js */ \"(ssr)/../node_modules/cborg/lib/2bytes.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/../node_modules/cborg/lib/byte-utils.js\");\n\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} prefix\n * @param {number} length\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction toToken (data, pos, prefix, length, options) {\n  const totLength = prefix + length\n  ;(0,_common_js__WEBPACK_IMPORTED_MODULE_1__.assertEnoughData)(data, pos, totLength)\n  const tok = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string, (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_4__.toString)(data, pos + prefix, pos + totLength), totLength)\n  if (options.retainStringBytes === true) {\n    tok.byteValue = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_4__.slice)(data, pos + prefix, pos + totLength)\n  }\n  return tok\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeStringCompact (data, pos, minor, options) {\n  return toToken(data, pos, 1, minor, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint8(data, pos + 1, options), options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint16(data, pos + 1, options), options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint32(data, pos + 1, options), options)\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeString64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_2__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} 64-bit integer string lengths not supported`)\n  }\n  return toToken(data, pos, 9, l, options)\n}\n\nconst encodeString = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.encodeBytes\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi8zc3RyaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQXdDO0FBQ3VCO0FBQzdCO0FBQ087QUFDUTs7QUFFakQ7QUFDQSxhQUFhLHNCQUFzQjtBQUNuQyxhQUFhLHNDQUFzQztBQUNuRDs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLEVBQUUsNkRBQWdCO0FBQ2xCLGtCQUFrQiw0Q0FBSyxDQUFDLDJDQUFJLFNBQVMsd0RBQVE7QUFDN0M7QUFDQSxvQkFBb0IscURBQUs7QUFDekI7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixnREFBYztBQUM3Qzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixpREFBZTtBQUM5Qzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixpREFBZTtBQUM5Qzs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsWUFBWSxpREFBZTtBQUMzQjtBQUNBLHVCQUF1Qix1REFBZSxFQUFFO0FBQ3hDO0FBQ0E7QUFDQTs7QUFFTyxxQkFBcUIsbURBQVciLCJzb3VyY2VzIjpbIkQ6XFxGdW5kUmFpc2VyXFxub2RlX21vZHVsZXNcXGNib3JnXFxsaWJcXDNzdHJpbmcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVG9rZW4sIFR5cGUgfSBmcm9tICcuL3Rva2VuLmpzJ1xuaW1wb3J0IHsgYXNzZXJ0RW5vdWdoRGF0YSwgZGVjb2RlRXJyUHJlZml4IH0gZnJvbSAnLi9jb21tb24uanMnXG5pbXBvcnQgKiBhcyB1aW50IGZyb20gJy4vMHVpbnQuanMnXG5pbXBvcnQgeyBlbmNvZGVCeXRlcyB9IGZyb20gJy4vMmJ5dGVzLmpzJ1xuaW1wb3J0IHsgdG9TdHJpbmcsIHNsaWNlIH0gZnJvbSAnLi9ieXRlLXV0aWxzLmpzJ1xuXG4vKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vYmwuanMnKS5CbH0gQmxcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL2ludGVyZmFjZScpLkRlY29kZU9wdGlvbnN9IERlY29kZU9wdGlvbnNcbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IHByZWZpeFxuICogQHBhcmFtIHtudW1iZXJ9IGxlbmd0aFxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmZ1bmN0aW9uIHRvVG9rZW4gKGRhdGEsIHBvcywgcHJlZml4LCBsZW5ndGgsIG9wdGlvbnMpIHtcbiAgY29uc3QgdG90TGVuZ3RoID0gcHJlZml4ICsgbGVuZ3RoXG4gIGFzc2VydEVub3VnaERhdGEoZGF0YSwgcG9zLCB0b3RMZW5ndGgpXG4gIGNvbnN0IHRvayA9IG5ldyBUb2tlbihUeXBlLnN0cmluZywgdG9TdHJpbmcoZGF0YSwgcG9zICsgcHJlZml4LCBwb3MgKyB0b3RMZW5ndGgpLCB0b3RMZW5ndGgpXG4gIGlmIChvcHRpb25zLnJldGFpblN0cmluZ0J5dGVzID09PSB0cnVlKSB7XG4gICAgdG9rLmJ5dGVWYWx1ZSA9IHNsaWNlKGRhdGEsIHBvcyArIHByZWZpeCwgcG9zICsgdG90TGVuZ3RoKVxuICB9XG4gIHJldHVybiB0b2tcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBtaW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVTdHJpbmdDb21wYWN0IChkYXRhLCBwb3MsIG1pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMSwgbWlub3IsIG9wdGlvbnMpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVN0cmluZzggKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMiwgdWludC5yZWFkVWludDgoZGF0YSwgcG9zICsgMSwgb3B0aW9ucyksIG9wdGlvbnMpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVN0cmluZzE2IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDMsIHVpbnQucmVhZFVpbnQxNihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSwgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlU3RyaW5nMzIgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgNSwgdWludC5yZWFkVWludDMyKGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpLCBvcHRpb25zKVxufVxuXG4vLyBUT0RPOiBtYXliZSB3ZSBzaG91bGRuJ3Qgc3VwcG9ydCB0aGlzIC4uXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVTdHJpbmc2NCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgY29uc3QgbCA9IHVpbnQucmVhZFVpbnQ2NChkYXRhLCBwb3MgKyAxLCBvcHRpb25zKVxuICBpZiAodHlwZW9mIGwgPT09ICdiaWdpbnQnKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke2RlY29kZUVyclByZWZpeH0gNjQtYml0IGludGVnZXIgc3RyaW5nIGxlbmd0aHMgbm90IHN1cHBvcnRlZGApXG4gIH1cbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCA5LCBsLCBvcHRpb25zKVxufVxuXG5leHBvcnQgY29uc3QgZW5jb2RlU3RyaW5nID0gZW5jb2RlQnl0ZXNcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/cborg/lib/3string.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/cborg/lib/4array.js":
/*!*******************************************!*\
  !*** ../node_modules/cborg/lib/4array.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeArray16: () => (/* binding */ decodeArray16),\n/* harmony export */   decodeArray32: () => (/* binding */ decodeArray32),\n/* harmony export */   decodeArray64: () => (/* binding */ decodeArray64),\n/* harmony export */   decodeArray8: () => (/* binding */ decodeArray8),\n/* harmony export */   decodeArrayCompact: () => (/* binding */ decodeArrayCompact),\n/* harmony export */   decodeArrayIndefinite: () => (/* binding */ decodeArrayIndefinite),\n/* harmony export */   encodeArray: () => (/* binding */ encodeArray)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/../node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/../node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ \"(ssr)/../node_modules/cborg/lib/common.js\");\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (_data, _pos, prefix, length) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array, length, prefix)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeArrayCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArray64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} 64-bit integer array lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeArrayIndefinite (data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return toToken(data, pos, 1, Infinity)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeArray (buf, token) {\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array.majorEncoded, token.value)\n}\n\n// using an array as a map key, are you sure about this? we can only sort\n// by map length here, it's up to the encoder to decide to look deeper\nencodeArray.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeArray.encodedSize = function encodedSize (token) {\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue.encodedSize(token.value)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi80YXJyYXkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUF3QztBQUNOO0FBQ1c7O0FBRTdDO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSxzQ0FBc0M7QUFDbkQ7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhLDRDQUFLLENBQUMsMkNBQUk7QUFDdkI7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsK0JBQStCLGdEQUFjO0FBQzdDOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsK0JBQStCLGlEQUFlO0FBQzlDOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsK0JBQStCLGlEQUFlO0FBQzlDOztBQUVBO0FBQ0E7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxZQUFZLGlEQUFlO0FBQzNCO0FBQ0EsdUJBQXVCLHVEQUFlLEVBQUU7QUFDeEM7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQSx1QkFBdUIsdURBQWUsRUFBRTtBQUN4QztBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLElBQUk7QUFDZixXQUFXLE9BQU87QUFDbEI7QUFDTztBQUNQLEVBQUUsc0RBQW9CLE1BQU0sMkNBQUk7QUFDaEM7O0FBRUE7QUFDQTtBQUNBLDRCQUE0QixpREFBZTs7QUFFM0M7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYTtBQUNiO0FBQ0E7QUFDQSxTQUFTLHNEQUFvQjtBQUM3QiIsInNvdXJjZXMiOlsiRDpcXEZ1bmRSYWlzZXJcXG5vZGVfbW9kdWxlc1xcY2JvcmdcXGxpYlxcNGFycmF5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRva2VuLCBUeXBlIH0gZnJvbSAnLi90b2tlbi5qcydcbmltcG9ydCAqIGFzIHVpbnQgZnJvbSAnLi8wdWludC5qcydcbmltcG9ydCB7IGRlY29kZUVyclByZWZpeCB9IGZyb20gJy4vY29tbW9uLmpzJ1xuXG4vKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vYmwuanMnKS5CbH0gQmxcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL2ludGVyZmFjZScpLkRlY29kZU9wdGlvbnN9IERlY29kZU9wdGlvbnNcbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gX2RhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBfcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gcHJlZml4XG4gKiBAcGFyYW0ge251bWJlcn0gbGVuZ3RoXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmZ1bmN0aW9uIHRvVG9rZW4gKF9kYXRhLCBfcG9zLCBwcmVmaXgsIGxlbmd0aCkge1xuICByZXR1cm4gbmV3IFRva2VuKFR5cGUuYXJyYXksIGxlbmd0aCwgcHJlZml4KVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IG1pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IF9vcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVBcnJheUNvbXBhY3QgKGRhdGEsIHBvcywgbWlub3IsIF9vcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMSwgbWlub3IpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUFycmF5OCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAyLCB1aW50LnJlYWRVaW50OChkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSlcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQXJyYXkxNiAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAzLCB1aW50LnJlYWRVaW50MTYoZGF0YSwgcG9zICsgMSwgb3B0aW9ucykpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUFycmF5MzIgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgNSwgdWludC5yZWFkVWludDMyKGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpKVxufVxuXG4vLyBUT0RPOiBtYXliZSB3ZSBzaG91bGRuJ3Qgc3VwcG9ydCB0aGlzIC4uXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVBcnJheTY0IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICBjb25zdCBsID0gdWludC5yZWFkVWludDY0KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpXG4gIGlmICh0eXBlb2YgbCA9PT0gJ2JpZ2ludCcpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZGVjb2RlRXJyUHJlZml4fSA2NC1iaXQgaW50ZWdlciBhcnJheSBsZW5ndGhzIG5vdCBzdXBwb3J0ZWRgKVxuICB9XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgOSwgbClcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQXJyYXlJbmRlZmluaXRlIChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICBpZiAob3B0aW9ucy5hbGxvd0luZGVmaW5pdGUgPT09IGZhbHNlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke2RlY29kZUVyclByZWZpeH0gaW5kZWZpbml0ZSBsZW5ndGggaXRlbXMgbm90IGFsbG93ZWRgKVxuICB9XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgMSwgSW5maW5pdHkpXG59XG5cbi8qKlxuICogQHBhcmFtIHtCbH0gYnVmXG4gKiBAcGFyYW0ge1Rva2VufSB0b2tlblxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlQXJyYXkgKGJ1ZiwgdG9rZW4pIHtcbiAgdWludC5lbmNvZGVVaW50VmFsdWUoYnVmLCBUeXBlLmFycmF5Lm1ham9yRW5jb2RlZCwgdG9rZW4udmFsdWUpXG59XG5cbi8vIHVzaW5nIGFuIGFycmF5IGFzIGEgbWFwIGtleSwgYXJlIHlvdSBzdXJlIGFib3V0IHRoaXM/IHdlIGNhbiBvbmx5IHNvcnRcbi8vIGJ5IG1hcCBsZW5ndGggaGVyZSwgaXQncyB1cCB0byB0aGUgZW5jb2RlciB0byBkZWNpZGUgdG8gbG9vayBkZWVwZXJcbmVuY29kZUFycmF5LmNvbXBhcmVUb2tlbnMgPSB1aW50LmVuY29kZVVpbnQuY29tcGFyZVRva2Vuc1xuXG4vKipcbiAqIEBwYXJhbSB7VG9rZW59IHRva2VuXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5lbmNvZGVBcnJheS5lbmNvZGVkU2l6ZSA9IGZ1bmN0aW9uIGVuY29kZWRTaXplICh0b2tlbikge1xuICByZXR1cm4gdWludC5lbmNvZGVVaW50VmFsdWUuZW5jb2RlZFNpemUodG9rZW4udmFsdWUpXG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/cborg/lib/4array.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/cborg/lib/5map.js":
/*!*****************************************!*\
  !*** ../node_modules/cborg/lib/5map.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeMap16: () => (/* binding */ decodeMap16),\n/* harmony export */   decodeMap32: () => (/* binding */ decodeMap32),\n/* harmony export */   decodeMap64: () => (/* binding */ decodeMap64),\n/* harmony export */   decodeMap8: () => (/* binding */ decodeMap8),\n/* harmony export */   decodeMapCompact: () => (/* binding */ decodeMapCompact),\n/* harmony export */   decodeMapIndefinite: () => (/* binding */ decodeMapIndefinite),\n/* harmony export */   encodeMap: () => (/* binding */ encodeMap)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/../node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/../node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.js */ \"(ssr)/../node_modules/cborg/lib/common.js\");\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (_data, _pos, prefix, length) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map, length, prefix)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeMapCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMap64 (data, pos, _minor, options) {\n  const l = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} 64-bit integer map lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeMapIndefinite (data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return toToken(data, pos, 1, Infinity)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeMap (buf, token) {\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map.majorEncoded, token.value)\n}\n\n// using a map as a map key, are you sure about this? we can only sort\n// by map length here, it's up to the encoder to decide to look deeper\nencodeMap.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeMap.encodedSize = function encodedSize (token) {\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue.encodedSize(token.value)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi81bWFwLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBd0M7QUFDTjtBQUNXOztBQUU3QztBQUNBLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsc0NBQXNDO0FBQ25EOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJO0FBQ3ZCOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixnREFBYztBQUM3Qzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixpREFBZTtBQUM5Qzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLCtCQUErQixpREFBZTtBQUM5Qzs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsWUFBWSxpREFBZTtBQUMzQjtBQUNBLHVCQUF1Qix1REFBZSxFQUFFO0FBQ3hDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0EsdUJBQXVCLHVEQUFlLEVBQUU7QUFDeEM7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxJQUFJO0FBQ2YsV0FBVyxPQUFPO0FBQ2xCO0FBQ087QUFDUCxFQUFFLHNEQUFvQixNQUFNLDJDQUFJO0FBQ2hDOztBQUVBO0FBQ0E7QUFDQSwwQkFBMEIsaURBQWU7O0FBRXpDO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0EsU0FBUyxzREFBb0I7QUFDN0IiLCJzb3VyY2VzIjpbIkQ6XFxGdW5kUmFpc2VyXFxub2RlX21vZHVsZXNcXGNib3JnXFxsaWJcXDVtYXAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVG9rZW4sIFR5cGUgfSBmcm9tICcuL3Rva2VuLmpzJ1xuaW1wb3J0ICogYXMgdWludCBmcm9tICcuLzB1aW50LmpzJ1xuaW1wb3J0IHsgZGVjb2RlRXJyUHJlZml4IH0gZnJvbSAnLi9jb21tb24uanMnXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9ibC5qcycpLkJsfSBCbFxuICogQHR5cGVkZWYge2ltcG9ydCgnLi4vaW50ZXJmYWNlJykuRGVjb2RlT3B0aW9uc30gRGVjb2RlT3B0aW9uc1xuICovXG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBfZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IF9wb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBwcmVmaXhcbiAqIEBwYXJhbSB7bnVtYmVyfSBsZW5ndGhcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZnVuY3Rpb24gdG9Ub2tlbiAoX2RhdGEsIF9wb3MsIHByZWZpeCwgbGVuZ3RoKSB7XG4gIHJldHVybiBuZXcgVG9rZW4oVHlwZS5tYXAsIGxlbmd0aCwgcHJlZml4KVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IG1pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IF9vcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVNYXBDb21wYWN0IChkYXRhLCBwb3MsIG1pbm9yLCBfb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDEsIG1pbm9yKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVNYXA4IChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDIsIHVpbnQucmVhZFVpbnQ4KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVNYXAxNiAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvVG9rZW4oZGF0YSwgcG9zLCAzLCB1aW50LnJlYWRVaW50MTYoZGF0YSwgcG9zICsgMSwgb3B0aW9ucykpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZU1hcDMyIChkYXRhLCBwb3MsIF9taW5vciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDUsIHVpbnQucmVhZFVpbnQzMihkYXRhLCBwb3MgKyAxLCBvcHRpb25zKSlcbn1cblxuLy8gVE9ETzogbWF5YmUgd2Ugc2hvdWxkbid0IHN1cHBvcnQgdGhpcyAuLlxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlTWFwNjQgKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIGNvbnN0IGwgPSB1aW50LnJlYWRVaW50NjQoZGF0YSwgcG9zICsgMSwgb3B0aW9ucylcbiAgaWYgKHR5cGVvZiBsID09PSAnYmlnaW50Jykge1xuICAgIHRocm93IG5ldyBFcnJvcihgJHtkZWNvZGVFcnJQcmVmaXh9IDY0LWJpdCBpbnRlZ2VyIG1hcCBsZW5ndGhzIG5vdCBzdXBwb3J0ZWRgKVxuICB9XG4gIHJldHVybiB0b1Rva2VuKGRhdGEsIHBvcywgOSwgbClcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBfbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gb3B0aW9uc1xuICogQHJldHVybnMge1Rva2VufVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlTWFwSW5kZWZpbml0ZSAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMuYWxsb3dJbmRlZmluaXRlID09PSBmYWxzZSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgJHtkZWNvZGVFcnJQcmVmaXh9IGluZGVmaW5pdGUgbGVuZ3RoIGl0ZW1zIG5vdCBhbGxvd2VkYClcbiAgfVxuICByZXR1cm4gdG9Ub2tlbihkYXRhLCBwb3MsIDEsIEluZmluaXR5KVxufVxuXG4vKipcbiAqIEBwYXJhbSB7Qmx9IGJ1ZlxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZU1hcCAoYnVmLCB0b2tlbikge1xuICB1aW50LmVuY29kZVVpbnRWYWx1ZShidWYsIFR5cGUubWFwLm1ham9yRW5jb2RlZCwgdG9rZW4udmFsdWUpXG59XG5cbi8vIHVzaW5nIGEgbWFwIGFzIGEgbWFwIGtleSwgYXJlIHlvdSBzdXJlIGFib3V0IHRoaXM/IHdlIGNhbiBvbmx5IHNvcnRcbi8vIGJ5IG1hcCBsZW5ndGggaGVyZSwgaXQncyB1cCB0byB0aGUgZW5jb2RlciB0byBkZWNpZGUgdG8gbG9vayBkZWVwZXJcbmVuY29kZU1hcC5jb21wYXJlVG9rZW5zID0gdWludC5lbmNvZGVVaW50LmNvbXBhcmVUb2tlbnNcblxuLyoqXG4gKiBAcGFyYW0ge1Rva2VufSB0b2tlblxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZW5jb2RlTWFwLmVuY29kZWRTaXplID0gZnVuY3Rpb24gZW5jb2RlZFNpemUgKHRva2VuKSB7XG4gIHJldHVybiB1aW50LmVuY29kZVVpbnRWYWx1ZS5lbmNvZGVkU2l6ZSh0b2tlbi52YWx1ZSlcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/cborg/lib/5map.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/cborg/lib/6tag.js":
/*!*****************************************!*\
  !*** ../node_modules/cborg/lib/6tag.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeTag16: () => (/* binding */ decodeTag16),\n/* harmony export */   decodeTag32: () => (/* binding */ decodeTag32),\n/* harmony export */   decodeTag64: () => (/* binding */ decodeTag64),\n/* harmony export */   decodeTag8: () => (/* binding */ decodeTag8),\n/* harmony export */   decodeTagCompact: () => (/* binding */ decodeTagCompact),\n/* harmony export */   encodeTag: () => (/* binding */ encodeTag)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/../node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/../node_modules/cborg/lib/0uint.js\");\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nfunction decodeTagCompact (_data, _pos, minor, _options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, minor, 1)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag8 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag16 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag32 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint32(data, pos + 1, options), 5)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeTag64 (data, pos, _minor, options) {\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag, _0uint_js__WEBPACK_IMPORTED_MODULE_1__.readUint64(data, pos + 1, options), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nfunction encodeTag (buf, token) {\n  _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue(buf, _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag.majorEncoded, token.value)\n}\n\nencodeTag.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeTag.encodedSize = function encodedSize (token) {\n  return _0uint_js__WEBPACK_IMPORTED_MODULE_1__.encodeUintValue.encodedSize(token.value)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi82dGFnLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXdDO0FBQ047O0FBRWxDO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSxzQ0FBc0M7QUFDbkQ7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxhQUFhLDRDQUFLLENBQUMsMkNBQUk7QUFDdkI7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxhQUFhLDRDQUFLLENBQUMsMkNBQUksTUFBTSxnREFBYztBQUMzQzs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDTztBQUNQLGFBQWEsNENBQUssQ0FBQywyQ0FBSSxNQUFNLGlEQUFlO0FBQzVDOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNPO0FBQ1AsYUFBYSw0Q0FBSyxDQUFDLDJDQUFJLE1BQU0saURBQWU7QUFDNUM7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ087QUFDUCxhQUFhLDRDQUFLLENBQUMsMkNBQUksTUFBTSxpREFBZTtBQUM1Qzs7QUFFQTtBQUNBLFdBQVcsSUFBSTtBQUNmLFdBQVcsT0FBTztBQUNsQjtBQUNPO0FBQ1AsRUFBRSxzREFBb0IsTUFBTSwyQ0FBSTtBQUNoQzs7QUFFQSwwQkFBMEIsaURBQWU7O0FBRXpDO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0EsU0FBUyxzREFBb0I7QUFDN0IiLCJzb3VyY2VzIjpbIkQ6XFxGdW5kUmFpc2VyXFxub2RlX21vZHVsZXNcXGNib3JnXFxsaWJcXDZ0YWcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVG9rZW4sIFR5cGUgfSBmcm9tICcuL3Rva2VuLmpzJ1xuaW1wb3J0ICogYXMgdWludCBmcm9tICcuLzB1aW50LmpzJ1xuXG4vKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vYmwuanMnKS5CbH0gQmxcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4uL2ludGVyZmFjZScpLkRlY29kZU9wdGlvbnN9IERlY29kZU9wdGlvbnNcbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gX2RhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBfcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gbWlub3JcbiAqIEBwYXJhbSB7RGVjb2RlT3B0aW9uc30gX29wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVRhZ0NvbXBhY3QgKF9kYXRhLCBfcG9zLCBtaW5vciwgX29wdGlvbnMpIHtcbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLnRhZywgbWlub3IsIDEpXG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gcG9zXG4gKiBAcGFyYW0ge251bWJlcn0gX21pbm9yXG4gKiBAcGFyYW0ge0RlY29kZU9wdGlvbnN9IG9wdGlvbnNcbiAqIEByZXR1cm5zIHtUb2tlbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVRhZzggKGRhdGEsIHBvcywgX21pbm9yLCBvcHRpb25zKSB7XG4gIHJldHVybiBuZXcgVG9rZW4oVHlwZS50YWcsIHVpbnQucmVhZFVpbnQ4KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpLCAyKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVUYWcxNiAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLnRhZywgdWludC5yZWFkVWludDE2KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpLCAzKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVUYWczMiAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLnRhZywgdWludC5yZWFkVWludDMyKGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpLCA1KVxufVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGF0YVxuICogQHBhcmFtIHtudW1iZXJ9IHBvc1xuICogQHBhcmFtIHtudW1iZXJ9IF9taW5vclxuICogQHBhcmFtIHtEZWNvZGVPcHRpb25zfSBvcHRpb25zXG4gKiBAcmV0dXJucyB7VG9rZW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVUYWc2NCAoZGF0YSwgcG9zLCBfbWlub3IsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIG5ldyBUb2tlbihUeXBlLnRhZywgdWludC5yZWFkVWludDY0KGRhdGEsIHBvcyArIDEsIG9wdGlvbnMpLCA5KVxufVxuXG4vKipcbiAqIEBwYXJhbSB7Qmx9IGJ1ZlxuICogQHBhcmFtIHtUb2tlbn0gdG9rZW5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZVRhZyAoYnVmLCB0b2tlbikge1xuICB1aW50LmVuY29kZVVpbnRWYWx1ZShidWYsIFR5cGUudGFnLm1ham9yRW5jb2RlZCwgdG9rZW4udmFsdWUpXG59XG5cbmVuY29kZVRhZy5jb21wYXJlVG9rZW5zID0gdWludC5lbmNvZGVVaW50LmNvbXBhcmVUb2tlbnNcblxuLyoqXG4gKiBAcGFyYW0ge1Rva2VufSB0b2tlblxuICogQHJldHVybnMge251bWJlcn1cbiAqL1xuZW5jb2RlVGFnLmVuY29kZWRTaXplID0gZnVuY3Rpb24gZW5jb2RlZFNpemUgKHRva2VuKSB7XG4gIHJldHVybiB1aW50LmVuY29kZVVpbnRWYWx1ZS5lbmNvZGVkU2l6ZSh0b2tlbi52YWx1ZSlcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/cborg/lib/6tag.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/cborg/lib/7float.js":
/*!*******************************************!*\
  !*** ../node_modules/cborg/lib/7float.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeBreak: () => (/* binding */ decodeBreak),\n/* harmony export */   decodeFloat16: () => (/* binding */ decodeFloat16),\n/* harmony export */   decodeFloat32: () => (/* binding */ decodeFloat32),\n/* harmony export */   decodeFloat64: () => (/* binding */ decodeFloat64),\n/* harmony export */   decodeUndefined: () => (/* binding */ decodeUndefined),\n/* harmony export */   encodeFloat: () => (/* binding */ encodeFloat)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/../node_modules/cborg/lib/token.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common.js */ \"(ssr)/../node_modules/cborg/lib/common.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/../node_modules/cborg/lib/0uint.js\");\n// TODO: shift some of the bytes logic to bytes-utils so we can use Buffer\n// where possible\n\n\n\n\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n * @typedef {import('../interface').EncodeOptions} EncodeOptions\n */\n\nconst MINOR_FALSE = 20\nconst MINOR_TRUE = 21\nconst MINOR_NULL = 22\nconst MINOR_UNDEFINED = 23\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeUndefined (_data, _pos, _minor, options) {\n  if (options.allowUndefined === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} undefined values are not supported`)\n  } else if (options.coerceUndefinedToNull === true) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.null, null, 1)\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.undefined, undefined, 1)\n}\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeBreak (_data, _pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.break, undefined, 1)\n}\n\n/**\n * @param {number} value\n * @param {number} bytes\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction createToken (value, bytes, options) {\n  if (options) {\n    if (options.allowNaN === false && Number.isNaN(value)) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} NaN values are not supported`)\n    }\n    if (options.allowInfinity === false && (value === Infinity || value === -Infinity)) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} Infinity values are not supported`)\n    }\n  }\n  return new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float, value, bytes)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeFloat16 (data, pos, _minor, options) {\n  return createToken(readFloat16(data, pos + 1), 3, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeFloat32 (data, pos, _minor, options) {\n  return createToken(readFloat32(data, pos + 1), 5, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction decodeFloat64 (data, pos, _minor, options) {\n  return createToken(readFloat64(data, pos + 1), 9, options)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n * @param {EncodeOptions} options\n */\nfunction encodeFloat (buf, token, options) {\n  const float = token.value\n\n  if (float === false) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_FALSE])\n  } else if (float === true) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_TRUE])\n  } else if (float === null) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_NULL])\n  } else if (float === undefined) {\n    buf.push([_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.majorEncoded | MINOR_UNDEFINED])\n  } else {\n    let decoded\n    let success = false\n    if (!options || options.float64 !== true) {\n      encodeFloat16(float)\n      decoded = readFloat16(ui8a, 1)\n      if (float === decoded || Number.isNaN(float)) {\n        ui8a[0] = 0xf9\n        buf.push(ui8a.slice(0, 3))\n        success = true\n      } else {\n        encodeFloat32(float)\n        decoded = readFloat32(ui8a, 1)\n        if (float === decoded) {\n          ui8a[0] = 0xfa\n          buf.push(ui8a.slice(0, 5))\n          success = true\n        }\n      }\n    }\n    if (!success) {\n      encodeFloat64(float)\n      decoded = readFloat64(ui8a, 1)\n      ui8a[0] = 0xfb\n      buf.push(ui8a.slice(0, 9))\n    }\n  }\n}\n\n/**\n * @param {Token} token\n * @param {EncodeOptions} options\n * @returns {number}\n */\nencodeFloat.encodedSize = function encodedSize (token, options) {\n  const float = token.value\n\n  if (float === false || float === true || float === null || float === undefined) {\n    return 1\n  }\n\n  if (!options || options.float64 !== true) {\n    encodeFloat16(float)\n    let decoded = readFloat16(ui8a, 1)\n    if (float === decoded || Number.isNaN(float)) {\n      return 3\n    }\n    encodeFloat32(float)\n    decoded = readFloat32(ui8a, 1)\n    if (float === decoded) {\n      return 5\n    }\n  }\n  return 9\n}\n\nconst buffer = new ArrayBuffer(9)\nconst dataView = new DataView(buffer, 1)\nconst ui8a = new Uint8Array(buffer, 0)\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat16 (inp) {\n  if (inp === Infinity) {\n    dataView.setUint16(0, 0x7c00, false)\n  } else if (inp === -Infinity) {\n    dataView.setUint16(0, 0xfc00, false)\n  } else if (Number.isNaN(inp)) {\n    dataView.setUint16(0, 0x7e00, false)\n  } else {\n    dataView.setFloat32(0, inp)\n    const valu32 = dataView.getUint32(0)\n    const exponent = (valu32 & 0x7f800000) >> 23\n    const mantissa = valu32 & 0x7fffff\n\n    /* c8 ignore next 6 */\n    if (exponent === 0xff) {\n      // too big, Infinity, but this should be hard (impossible?) to trigger\n      dataView.setUint16(0, 0x7c00, false)\n    } else if (exponent === 0x00) {\n      // 0.0, -0.0 and subnormals, shouldn't be possible to get here because 0.0 should be counted as an int\n      dataView.setUint16(0, ((inp & 0x80000000) >> 16) | (mantissa >> 13), false)\n    } else { // standard numbers\n      // chunks of logic here borrowed from https://github.com/PJK/libcbor/blob/c78f437182533e3efa8d963ff4b945bb635c2284/src/cbor/encoding.c#L127\n      const logicalExponent = exponent - 127\n      // Now we know that 2^exponent <= 0 logically\n      /* c8 ignore next 6 */\n      if (logicalExponent < -24) {\n        /* No unambiguous representation exists, this float is not a half float\n          and is too small to be represented using a half, round off to zero.\n          Consistent with the reference implementation. */\n        // should be difficult (impossible?) to get here in JS\n        dataView.setUint16(0, 0)\n      } else if (logicalExponent < -14) {\n        /* Offset the remaining decimal places by shifting the significand, the\n          value is lost. This is an implementation decision that works around the\n          absence of standard half-float in the language. */\n        dataView.setUint16(0, ((valu32 & 0x80000000) >> 16) | /* sign bit */ (1 << (24 + logicalExponent)), false)\n      } else {\n        dataView.setUint16(0, ((valu32 & 0x80000000) >> 16) | ((logicalExponent + 15) << 10) | (mantissa >> 13), false)\n      }\n    }\n  }\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat16 (ui8a, pos) {\n  if (ui8a.length - pos < 2) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} not enough data for float16`)\n  }\n\n  const half = (ui8a[pos] << 8) + ui8a[pos + 1]\n  if (half === 0x7c00) {\n    return Infinity\n  }\n  if (half === 0xfc00) {\n    return -Infinity\n  }\n  if (half === 0x7e00) {\n    return NaN\n  }\n  const exp = (half >> 10) & 0x1f\n  const mant = half & 0x3ff\n  let val\n  if (exp === 0) {\n    val = mant * (2 ** -24)\n  } else if (exp !== 31) {\n    val = (mant + 1024) * (2 ** (exp - 25))\n  /* c8 ignore next 4 */\n  } else {\n    // may not be possible to get here\n    val = mant === 0 ? Infinity : NaN\n  }\n  return (half & 0x8000) ? -val : val\n}\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat32 (inp) {\n  dataView.setFloat32(0, inp, false)\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat32 (ui8a, pos) {\n  if (ui8a.length - pos < 4) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} not enough data for float32`)\n  }\n  const offset = (ui8a.byteOffset || 0) + pos\n  return new DataView(ui8a.buffer, offset, 4).getFloat32(0, false)\n}\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat64 (inp) {\n  dataView.setFloat64(0, inp, false)\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat64 (ui8a, pos) {\n  if (ui8a.length - pos < 8) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_1__.decodeErrPrefix} not enough data for float64`)\n  }\n  const offset = (ui8a.byteOffset || 0) + pos\n  return new DataView(ui8a.buffer, offset, 8).getFloat64(0, false)\n}\n\n/**\n * @param {Token} _tok1\n * @param {Token} _tok2\n * @returns {number}\n */\nencodeFloat.compareTokens = _0uint_js__WEBPACK_IMPORTED_MODULE_2__.encodeUint.compareTokens\n/*\nencodeFloat.compareTokens = function compareTokens (_tok1, _tok2) {\n  return _tok1\n  throw new Error(`${encodeErrPrefix} cannot use floats as map keys`)\n}\n*/\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/cborg/lib/7float.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/cborg/lib/bl.js":
/*!***************************************!*\
  !*** ../node_modules/cborg/lib/bl.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Bl: () => (/* binding */ Bl)\n/* harmony export */ });\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/../node_modules/cborg/lib/byte-utils.js\");\n/**\n * Bl is a list of byte chunks, similar to https://github.com/rvagg/bl but for\n * writing rather than reading.\n * A Bl object accepts set() operations for individual bytes and copyTo() for\n * inserting byte arrays. These write operations don't automatically increment\n * the internal cursor so its \"length\" won't be changed. Instead, increment()\n * must be called to extend its length to cover the inserted data.\n * The toBytes() call will convert all internal memory to a single Uint8Array of\n * the correct length, truncating any data that is stored but hasn't been\n * included by an increment().\n * get() can retrieve a single byte.\n * All operations (except toBytes()) take an \"offset\" argument that will perform\n * the write at the offset _from the current cursor_. For most operations this\n * will be `0` to write at the current cursor position but it can be ahead of\n * the current cursor. Negative offsets probably work but are untested.\n */\n\n// TODO: ipjs doesn't support this, only for test files: https://github.com/mikeal/ipjs/blob/master/src/package/testFile.js#L39\n\n\n// the ts-ignores in this file are almost all for the `Uint8Array|number[]` duality that exists\n// for perf reasons. Consider better approaches to this or removing it entirely, it is quite\n// risky because of some assumptions about small chunks === number[] and everything else === Uint8Array.\n\nconst defaultChunkSize = 256\n\nclass Bl {\n  /**\n   * @param {number} [chunkSize]\n   */\n  constructor (chunkSize = defaultChunkSize) {\n    this.chunkSize = chunkSize\n    /** @type {number} */\n    this.cursor = 0\n    /** @type {number} */\n    this.maxCursor = -1\n    /** @type {(Uint8Array|number[])[]} */\n    this.chunks = []\n    // keep the first chunk around if we can to save allocations for future encodes\n    /** @type {Uint8Array|number[]|null} */\n    this._initReuseChunk = null\n  }\n\n  reset () {\n    this.cursor = 0\n    this.maxCursor = -1\n    if (this.chunks.length) {\n      this.chunks = []\n    }\n    if (this._initReuseChunk !== null) {\n      this.chunks.push(this._initReuseChunk)\n      this.maxCursor = this._initReuseChunk.length - 1\n    }\n  }\n\n  /**\n   * @param {Uint8Array|number[]} bytes\n   */\n  push (bytes) {\n    let topChunk = this.chunks[this.chunks.length - 1]\n    const newMax = this.cursor + bytes.length\n    if (newMax <= this.maxCursor + 1) {\n      // we have at least one chunk and we can fit these bytes into that chunk\n      const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1\n      // @ts-ignore\n      topChunk.set(bytes, chunkPos)\n    } else {\n      // can't fit it in\n      if (topChunk) {\n        // trip the last chunk to `cursor` if we need to\n        const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1\n        if (chunkPos < topChunk.length) {\n          // @ts-ignore\n          this.chunks[this.chunks.length - 1] = topChunk.subarray(0, chunkPos)\n          this.maxCursor = this.cursor - 1\n        }\n      }\n      if (bytes.length < 64 && bytes.length < this.chunkSize) {\n        // make a new chunk and copy the new one into it\n        topChunk = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_0__.alloc)(this.chunkSize)\n        this.chunks.push(topChunk)\n        this.maxCursor += topChunk.length\n        if (this._initReuseChunk === null) {\n          this._initReuseChunk = topChunk\n        }\n        // @ts-ignore\n        topChunk.set(bytes, 0)\n      } else {\n        // push the new bytes in as its own chunk\n        this.chunks.push(bytes)\n        this.maxCursor += bytes.length\n      }\n    }\n    this.cursor += bytes.length\n  }\n\n  /**\n   * @param {boolean} [reset]\n   * @returns {Uint8Array}\n   */\n  toBytes (reset = false) {\n    let byts\n    if (this.chunks.length === 1) {\n      const chunk = this.chunks[0]\n      if (reset && this.cursor > chunk.length / 2) {\n        /* c8 ignore next 2 */\n        // @ts-ignore\n        byts = this.cursor === chunk.length ? chunk : chunk.subarray(0, this.cursor)\n        this._initReuseChunk = null\n        this.chunks = []\n      } else {\n        // @ts-ignore\n        byts = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_0__.slice)(chunk, 0, this.cursor)\n      }\n    } else {\n      // @ts-ignore\n      byts = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_0__.concat)(this.chunks, this.cursor)\n    }\n    if (reset) {\n      this.reset()\n    }\n    return byts\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9ibC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ3NEOztBQUV0RDtBQUNBO0FBQ0E7O0FBRUE7O0FBRU87QUFDUDtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQSxlQUFlLHlCQUF5QjtBQUN4QztBQUNBO0FBQ0EsZUFBZSwwQkFBMEI7QUFDekM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsYUFBYSxxQkFBcUI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixxREFBSztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGFBQWEsU0FBUztBQUN0QixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBLGVBQWUscURBQUs7QUFDcEI7QUFDQSxNQUFNO0FBQ047QUFDQSxhQUFhLHNEQUFNO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJEOlxcRnVuZFJhaXNlclxcbm9kZV9tb2R1bGVzXFxjYm9yZ1xcbGliXFxibC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEJsIGlzIGEgbGlzdCBvZiBieXRlIGNodW5rcywgc2ltaWxhciB0byBodHRwczovL2dpdGh1Yi5jb20vcnZhZ2cvYmwgYnV0IGZvclxuICogd3JpdGluZyByYXRoZXIgdGhhbiByZWFkaW5nLlxuICogQSBCbCBvYmplY3QgYWNjZXB0cyBzZXQoKSBvcGVyYXRpb25zIGZvciBpbmRpdmlkdWFsIGJ5dGVzIGFuZCBjb3B5VG8oKSBmb3JcbiAqIGluc2VydGluZyBieXRlIGFycmF5cy4gVGhlc2Ugd3JpdGUgb3BlcmF0aW9ucyBkb24ndCBhdXRvbWF0aWNhbGx5IGluY3JlbWVudFxuICogdGhlIGludGVybmFsIGN1cnNvciBzbyBpdHMgXCJsZW5ndGhcIiB3b24ndCBiZSBjaGFuZ2VkLiBJbnN0ZWFkLCBpbmNyZW1lbnQoKVxuICogbXVzdCBiZSBjYWxsZWQgdG8gZXh0ZW5kIGl0cyBsZW5ndGggdG8gY292ZXIgdGhlIGluc2VydGVkIGRhdGEuXG4gKiBUaGUgdG9CeXRlcygpIGNhbGwgd2lsbCBjb252ZXJ0IGFsbCBpbnRlcm5hbCBtZW1vcnkgdG8gYSBzaW5nbGUgVWludDhBcnJheSBvZlxuICogdGhlIGNvcnJlY3QgbGVuZ3RoLCB0cnVuY2F0aW5nIGFueSBkYXRhIHRoYXQgaXMgc3RvcmVkIGJ1dCBoYXNuJ3QgYmVlblxuICogaW5jbHVkZWQgYnkgYW4gaW5jcmVtZW50KCkuXG4gKiBnZXQoKSBjYW4gcmV0cmlldmUgYSBzaW5nbGUgYnl0ZS5cbiAqIEFsbCBvcGVyYXRpb25zIChleGNlcHQgdG9CeXRlcygpKSB0YWtlIGFuIFwib2Zmc2V0XCIgYXJndW1lbnQgdGhhdCB3aWxsIHBlcmZvcm1cbiAqIHRoZSB3cml0ZSBhdCB0aGUgb2Zmc2V0IF9mcm9tIHRoZSBjdXJyZW50IGN1cnNvcl8uIEZvciBtb3N0IG9wZXJhdGlvbnMgdGhpc1xuICogd2lsbCBiZSBgMGAgdG8gd3JpdGUgYXQgdGhlIGN1cnJlbnQgY3Vyc29yIHBvc2l0aW9uIGJ1dCBpdCBjYW4gYmUgYWhlYWQgb2ZcbiAqIHRoZSBjdXJyZW50IGN1cnNvci4gTmVnYXRpdmUgb2Zmc2V0cyBwcm9iYWJseSB3b3JrIGJ1dCBhcmUgdW50ZXN0ZWQuXG4gKi9cblxuLy8gVE9ETzogaXBqcyBkb2Vzbid0IHN1cHBvcnQgdGhpcywgb25seSBmb3IgdGVzdCBmaWxlczogaHR0cHM6Ly9naXRodWIuY29tL21pa2VhbC9pcGpzL2Jsb2IvbWFzdGVyL3NyYy9wYWNrYWdlL3Rlc3RGaWxlLmpzI0wzOVxuaW1wb3J0IHsgYWxsb2MsIGNvbmNhdCwgc2xpY2UgfSBmcm9tICcuL2J5dGUtdXRpbHMuanMnXG5cbi8vIHRoZSB0cy1pZ25vcmVzIGluIHRoaXMgZmlsZSBhcmUgYWxtb3N0IGFsbCBmb3IgdGhlIGBVaW50OEFycmF5fG51bWJlcltdYCBkdWFsaXR5IHRoYXQgZXhpc3RzXG4vLyBmb3IgcGVyZiByZWFzb25zLiBDb25zaWRlciBiZXR0ZXIgYXBwcm9hY2hlcyB0byB0aGlzIG9yIHJlbW92aW5nIGl0IGVudGlyZWx5LCBpdCBpcyBxdWl0ZVxuLy8gcmlza3kgYmVjYXVzZSBvZiBzb21lIGFzc3VtcHRpb25zIGFib3V0IHNtYWxsIGNodW5rcyA9PT0gbnVtYmVyW10gYW5kIGV2ZXJ5dGhpbmcgZWxzZSA9PT0gVWludDhBcnJheS5cblxuY29uc3QgZGVmYXVsdENodW5rU2l6ZSA9IDI1NlxuXG5leHBvcnQgY2xhc3MgQmwge1xuICAvKipcbiAgICogQHBhcmFtIHtudW1iZXJ9IFtjaHVua1NpemVdXG4gICAqL1xuICBjb25zdHJ1Y3RvciAoY2h1bmtTaXplID0gZGVmYXVsdENodW5rU2l6ZSkge1xuICAgIHRoaXMuY2h1bmtTaXplID0gY2h1bmtTaXplXG4gICAgLyoqIEB0eXBlIHtudW1iZXJ9ICovXG4gICAgdGhpcy5jdXJzb3IgPSAwXG4gICAgLyoqIEB0eXBlIHtudW1iZXJ9ICovXG4gICAgdGhpcy5tYXhDdXJzb3IgPSAtMVxuICAgIC8qKiBAdHlwZSB7KFVpbnQ4QXJyYXl8bnVtYmVyW10pW119ICovXG4gICAgdGhpcy5jaHVua3MgPSBbXVxuICAgIC8vIGtlZXAgdGhlIGZpcnN0IGNodW5rIGFyb3VuZCBpZiB3ZSBjYW4gdG8gc2F2ZSBhbGxvY2F0aW9ucyBmb3IgZnV0dXJlIGVuY29kZXNcbiAgICAvKiogQHR5cGUge1VpbnQ4QXJyYXl8bnVtYmVyW118bnVsbH0gKi9cbiAgICB0aGlzLl9pbml0UmV1c2VDaHVuayA9IG51bGxcbiAgfVxuXG4gIHJlc2V0ICgpIHtcbiAgICB0aGlzLmN1cnNvciA9IDBcbiAgICB0aGlzLm1heEN1cnNvciA9IC0xXG4gICAgaWYgKHRoaXMuY2h1bmtzLmxlbmd0aCkge1xuICAgICAgdGhpcy5jaHVua3MgPSBbXVxuICAgIH1cbiAgICBpZiAodGhpcy5faW5pdFJldXNlQ2h1bmsgIT09IG51bGwpIHtcbiAgICAgIHRoaXMuY2h1bmtzLnB1c2godGhpcy5faW5pdFJldXNlQ2h1bmspXG4gICAgICB0aGlzLm1heEN1cnNvciA9IHRoaXMuX2luaXRSZXVzZUNodW5rLmxlbmd0aCAtIDFcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtVaW50OEFycmF5fG51bWJlcltdfSBieXRlc1xuICAgKi9cbiAgcHVzaCAoYnl0ZXMpIHtcbiAgICBsZXQgdG9wQ2h1bmsgPSB0aGlzLmNodW5rc1t0aGlzLmNodW5rcy5sZW5ndGggLSAxXVxuICAgIGNvbnN0IG5ld01heCA9IHRoaXMuY3Vyc29yICsgYnl0ZXMubGVuZ3RoXG4gICAgaWYgKG5ld01heCA8PSB0aGlzLm1heEN1cnNvciArIDEpIHtcbiAgICAgIC8vIHdlIGhhdmUgYXQgbGVhc3Qgb25lIGNodW5rIGFuZCB3ZSBjYW4gZml0IHRoZXNlIGJ5dGVzIGludG8gdGhhdCBjaHVua1xuICAgICAgY29uc3QgY2h1bmtQb3MgPSB0b3BDaHVuay5sZW5ndGggLSAodGhpcy5tYXhDdXJzb3IgLSB0aGlzLmN1cnNvcikgLSAxXG4gICAgICAvLyBAdHMtaWdub3JlXG4gICAgICB0b3BDaHVuay5zZXQoYnl0ZXMsIGNodW5rUG9zKVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBjYW4ndCBmaXQgaXQgaW5cbiAgICAgIGlmICh0b3BDaHVuaykge1xuICAgICAgICAvLyB0cmlwIHRoZSBsYXN0IGNodW5rIHRvIGBjdXJzb3JgIGlmIHdlIG5lZWQgdG9cbiAgICAgICAgY29uc3QgY2h1bmtQb3MgPSB0b3BDaHVuay5sZW5ndGggLSAodGhpcy5tYXhDdXJzb3IgLSB0aGlzLmN1cnNvcikgLSAxXG4gICAgICAgIGlmIChjaHVua1BvcyA8IHRvcENodW5rLmxlbmd0aCkge1xuICAgICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgICB0aGlzLmNodW5rc1t0aGlzLmNodW5rcy5sZW5ndGggLSAxXSA9IHRvcENodW5rLnN1YmFycmF5KDAsIGNodW5rUG9zKVxuICAgICAgICAgIHRoaXMubWF4Q3Vyc29yID0gdGhpcy5jdXJzb3IgLSAxXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChieXRlcy5sZW5ndGggPCA2NCAmJiBieXRlcy5sZW5ndGggPCB0aGlzLmNodW5rU2l6ZSkge1xuICAgICAgICAvLyBtYWtlIGEgbmV3IGNodW5rIGFuZCBjb3B5IHRoZSBuZXcgb25lIGludG8gaXRcbiAgICAgICAgdG9wQ2h1bmsgPSBhbGxvYyh0aGlzLmNodW5rU2l6ZSlcbiAgICAgICAgdGhpcy5jaHVua3MucHVzaCh0b3BDaHVuaylcbiAgICAgICAgdGhpcy5tYXhDdXJzb3IgKz0gdG9wQ2h1bmsubGVuZ3RoXG4gICAgICAgIGlmICh0aGlzLl9pbml0UmV1c2VDaHVuayA9PT0gbnVsbCkge1xuICAgICAgICAgIHRoaXMuX2luaXRSZXVzZUNodW5rID0gdG9wQ2h1bmtcbiAgICAgICAgfVxuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIHRvcENodW5rLnNldChieXRlcywgMClcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIHB1c2ggdGhlIG5ldyBieXRlcyBpbiBhcyBpdHMgb3duIGNodW5rXG4gICAgICAgIHRoaXMuY2h1bmtzLnB1c2goYnl0ZXMpXG4gICAgICAgIHRoaXMubWF4Q3Vyc29yICs9IGJ5dGVzLmxlbmd0aFxuICAgICAgfVxuICAgIH1cbiAgICB0aGlzLmN1cnNvciArPSBieXRlcy5sZW5ndGhcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IFtyZXNldF1cbiAgICogQHJldHVybnMge1VpbnQ4QXJyYXl9XG4gICAqL1xuICB0b0J5dGVzIChyZXNldCA9IGZhbHNlKSB7XG4gICAgbGV0IGJ5dHNcbiAgICBpZiAodGhpcy5jaHVua3MubGVuZ3RoID09PSAxKSB7XG4gICAgICBjb25zdCBjaHVuayA9IHRoaXMuY2h1bmtzWzBdXG4gICAgICBpZiAocmVzZXQgJiYgdGhpcy5jdXJzb3IgPiBjaHVuay5sZW5ndGggLyAyKSB7XG4gICAgICAgIC8qIGM4IGlnbm9yZSBuZXh0IDIgKi9cbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICBieXRzID0gdGhpcy5jdXJzb3IgPT09IGNodW5rLmxlbmd0aCA/IGNodW5rIDogY2h1bmsuc3ViYXJyYXkoMCwgdGhpcy5jdXJzb3IpXG4gICAgICAgIHRoaXMuX2luaXRSZXVzZUNodW5rID0gbnVsbFxuICAgICAgICB0aGlzLmNodW5rcyA9IFtdXG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIGJ5dHMgPSBzbGljZShjaHVuaywgMCwgdGhpcy5jdXJzb3IpXG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIGJ5dHMgPSBjb25jYXQodGhpcy5jaHVua3MsIHRoaXMuY3Vyc29yKVxuICAgIH1cbiAgICBpZiAocmVzZXQpIHtcbiAgICAgIHRoaXMucmVzZXQoKVxuICAgIH1cbiAgICByZXR1cm4gYnl0c1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/cborg/lib/bl.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/cborg/lib/byte-utils.js":
/*!***********************************************!*\
  !*** ../node_modules/cborg/lib/byte-utils.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   alloc: () => (/* binding */ alloc),\n/* harmony export */   asU8A: () => (/* binding */ asU8A),\n/* harmony export */   compare: () => (/* binding */ compare),\n/* harmony export */   concat: () => (/* binding */ concat),\n/* harmony export */   decodeCodePointsArray: () => (/* binding */ decodeCodePointsArray),\n/* harmony export */   fromArray: () => (/* binding */ fromArray),\n/* harmony export */   fromHex: () => (/* binding */ fromHex),\n/* harmony export */   fromString: () => (/* binding */ fromString),\n/* harmony export */   slice: () => (/* binding */ slice),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toString: () => (/* binding */ toString),\n/* harmony export */   useBuffer: () => (/* binding */ useBuffer)\n/* harmony export */ });\n// Use Uint8Array directly in the browser, use Buffer in Node.js but don't\n// speak its name directly to avoid bundlers pulling in the `Buffer` polyfill\n\n// @ts-ignore\nconst useBuffer = globalThis.process &&\n  // @ts-ignore\n  !globalThis.process.browser &&\n  // @ts-ignore\n  globalThis.Buffer &&\n  // @ts-ignore\n  typeof globalThis.Buffer.isBuffer === 'function'\n\nconst textDecoder = new TextDecoder()\nconst textEncoder = new TextEncoder()\n\n/**\n * @param {Uint8Array} buf\n * @returns {boolean}\n */\nfunction isBuffer (buf) {\n  // @ts-ignore\n  return useBuffer && globalThis.Buffer.isBuffer(buf)\n}\n\n/**\n * @param {Uint8Array|number[]} buf\n * @returns {Uint8Array}\n */\nfunction asU8A (buf) {\n  /* c8 ignore next */\n  if (!(buf instanceof Uint8Array)) {\n    return Uint8Array.from(buf)\n  }\n  return isBuffer(buf) ? new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength) : buf\n}\n\nconst toString = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return end - start > 64\n        ? // eslint-disable-line operator-linebreak\n      // @ts-ignore\n        globalThis.Buffer.from(bytes.subarray(start, end)).toString('utf8')\n        : utf8Slice(bytes, start, end)\n    }\n  /* c8 ignore next 11 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return end - start > 64\n        ? textDecoder.decode(bytes.subarray(start, end))\n        : utf8Slice(bytes, start, end)\n    }\n\nconst fromString = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {string} string\n     */\n    (string) => {\n      return string.length > 64\n        ? // eslint-disable-line operator-linebreak\n      // @ts-ignore\n        globalThis.Buffer.from(string)\n        : utf8ToBytes(string)\n    }\n  /* c8 ignore next 7 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {string} string\n     */\n    (string) => {\n      return string.length > 64 ? textEncoder.encode(string) : utf8ToBytes(string)\n    }\n\n/**\n * Buffer variant not fast enough for what we need\n * @param {number[]} arr\n * @returns {Uint8Array}\n */\nconst fromArray = (arr) => {\n  return Uint8Array.from(arr)\n}\n\nconst slice = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      if (isBuffer(bytes)) {\n        return new Uint8Array(bytes.subarray(start, end))\n      }\n      return bytes.slice(start, end)\n    }\n  /* c8 ignore next 9 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return bytes.slice(start, end)\n    }\n\nconst concat = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array[]} chunks\n     * @param {number} length\n     * @returns {Uint8Array}\n     */\n    (chunks, length) => {\n      // might get a stray plain Array here\n      /* c8 ignore next 1 */\n      chunks = chunks.map((c) => c instanceof Uint8Array\n        ? c\n        // this case is occasionally missed during test runs so becomes coverage-flaky\n        /* c8 ignore next 4 */\n        : // eslint-disable-line operator-linebreak\n        // @ts-ignore\n        globalThis.Buffer.from(c))\n      // @ts-ignore\n      return asU8A(globalThis.Buffer.concat(chunks, length))\n    }\n  /* c8 ignore next 19 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array[]} chunks\n     * @param {number} length\n     * @returns {Uint8Array}\n     */\n    (chunks, length) => {\n      const out = new Uint8Array(length)\n      let off = 0\n      for (let b of chunks) {\n        if (off + b.length > out.length) {\n          // final chunk that's bigger than we need\n          b = b.subarray(0, out.length - off)\n        }\n        out.set(b, off)\n        off += b.length\n      }\n      return out\n    }\n\nconst alloc = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {number} size\n     * @returns {Uint8Array}\n     */\n    (size) => {\n      // we always write over the contents we expose so this should be safe\n      // @ts-ignore\n      return globalThis.Buffer.allocUnsafe(size)\n    }\n  /* c8 ignore next 8 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {number} size\n     * @returns {Uint8Array}\n     */\n    (size) => {\n      return new Uint8Array(size)\n    }\n\nconst toHex = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} d\n     * @returns {string}\n     */\n    (d) => {\n      if (typeof d === 'string') {\n        return d\n      }\n      // @ts-ignore\n      return globalThis.Buffer.from(toBytes(d)).toString('hex')\n    }\n  /* c8 ignore next 12 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} d\n     * @returns {string}\n     */\n    (d) => {\n      if (typeof d === 'string') {\n        return d\n      }\n      // @ts-ignore not smart enough to figure this out\n      return Array.prototype.reduce.call(toBytes(d), (p, c) => `${p}${c.toString(16).padStart(2, '0')}`, '')\n    }\n\nconst fromHex = useBuffer\n  ? // eslint-disable-line operator-linebreak\n  /**\n   * @param {string|Uint8Array} hex\n   * @returns {Uint8Array}\n   */\n    (hex) => {\n      if (hex instanceof Uint8Array) {\n        return hex\n      }\n      // @ts-ignore\n      return globalThis.Buffer.from(hex, 'hex')\n    }\n  /* c8 ignore next 17 */\n  : // eslint-disable-line operator-linebreak\n  /**\n   * @param {string|Uint8Array} hex\n   * @returns {Uint8Array}\n   */\n    (hex) => {\n      if (hex instanceof Uint8Array) {\n        return hex\n      }\n      if (!hex.length) {\n        return new Uint8Array(0)\n      }\n      return new Uint8Array(hex.split('')\n        .map((/** @type {string} */ c, /** @type {number} */ i, /** @type {string[]} */ d) => i % 2 === 0 ? `0x${c}${d[i + 1]}` : '')\n        .filter(Boolean)\n        .map((/** @type {string} */ e) => parseInt(e, 16)))\n    }\n\n/**\n * @param {Uint8Array|ArrayBuffer|ArrayBufferView} obj\n * @returns {Uint8Array}\n */\nfunction toBytes (obj) {\n  if (obj instanceof Uint8Array && obj.constructor.name === 'Uint8Array') {\n    return obj\n  }\n  if (obj instanceof ArrayBuffer) {\n    return new Uint8Array(obj)\n  }\n  if (ArrayBuffer.isView(obj)) {\n    return new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength)\n  }\n  /* c8 ignore next */\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {Uint8Array} b1\n * @param {Uint8Array} b2\n * @returns {number}\n */\nfunction compare (b1, b2) {\n  /* c8 ignore next 5 */\n  if (isBuffer(b1) && isBuffer(b2)) {\n    // probably not possible to get here in the current API\n    // @ts-ignore Buffer\n    return b1.compare(b2)\n  }\n  for (let i = 0; i < b1.length; i++) {\n    if (b1[i] === b2[i]) {\n      continue\n    }\n    return b1[i] < b2[i] ? -1 : 1\n  } /* c8 ignore next 3 */\n  return 0\n}\n\n// The below code is taken from https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n// Licensed Apache-2.0.\n\n/**\n * @param {string} str\n * @returns {number[]}\n */\nfunction utf8ToBytes (str) {\n  const out = []\n  let p = 0\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i)\n    if (c < 128) {\n      out[p++] = c\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192\n      out[p++] = (c & 63) | 128\n    } else if (\n      ((c & 0xFC00) === 0xD800) && (i + 1) < str.length &&\n      ((str.charCodeAt(i + 1) & 0xFC00) === 0xDC00)) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03FF) << 10) + (str.charCodeAt(++i) & 0x03FF)\n      out[p++] = (c >> 18) | 240\n      out[p++] = ((c >> 12) & 63) | 128\n      out[p++] = ((c >> 6) & 63) | 128\n      out[p++] = (c & 63) | 128\n    } else {\n      out[p++] = (c >> 12) | 224\n      out[p++] = ((c >> 6) & 63) | 128\n      out[p++] = (c & 63) | 128\n    }\n  }\n  return out\n}\n\n// The below code is mostly taken from https://github.com/feross/buffer\n// Licensed MIT. Copyright (c) Feross Aboukhadijeh\n\n/**\n * @param {Uint8Array} buf\n * @param {number} offset\n * @param {number} end\n * @returns {string}\n */\nfunction utf8Slice (buf, offset, end) {\n  const res = []\n\n  while (offset < end) {\n    const firstByte = buf[offset]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xef) ? 4 : (firstByte > 0xdf) ? 3 : (firstByte > 0xbf) ? 2 : 1\n\n    if (offset + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[offset + 1]\n          if ((secondByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1f) << 0x6 | (secondByte & 0x3f)\n            if (tempCodePoint > 0x7f) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[offset + 1]\n          thirdByte = buf[offset + 2]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0xc | (secondByte & 0x3f) << 0x6 | (thirdByte & 0x3f)\n            /* c8 ignore next 3 */\n            if (tempCodePoint > 0x7ff && (tempCodePoint < 0xd800 || tempCodePoint > 0xdfff)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[offset + 1]\n          thirdByte = buf[offset + 2]\n          fourthByte = buf[offset + 3]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80 && (fourthByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0x12 | (secondByte & 0x3f) << 0xc | (thirdByte & 0x3f) << 0x6 | (fourthByte & 0x3f)\n            if (tempCodePoint > 0xffff && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    /* c8 ignore next 5 */\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xfffd\n      bytesPerSequence = 1\n    } else if (codePoint > 0xffff) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3ff | 0xd800)\n      codePoint = 0xdc00 | codePoint & 0x3ff\n    }\n\n    res.push(codePoint)\n    offset += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\n/**\n * @param {number[]} codePoints\n * @returns {string}\n */\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n  /* c8 ignore next 10 */\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/cborg/lib/byte-utils.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/cborg/lib/common.js":
/*!*******************************************!*\
  !*** ../node_modules/cborg/lib/common.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertEnoughData: () => (/* binding */ assertEnoughData),\n/* harmony export */   decodeErrPrefix: () => (/* binding */ decodeErrPrefix),\n/* harmony export */   encodeErrPrefix: () => (/* binding */ encodeErrPrefix),\n/* harmony export */   uintMinorPrefixBytes: () => (/* binding */ uintMinorPrefixBytes)\n/* harmony export */ });\nconst decodeErrPrefix = 'CBOR decode error:'\nconst encodeErrPrefix = 'CBOR encode error:'\n\nconst uintMinorPrefixBytes = []\nuintMinorPrefixBytes[23] = 1\nuintMinorPrefixBytes[24] = 2\nuintMinorPrefixBytes[25] = 3\nuintMinorPrefixBytes[26] = 5\nuintMinorPrefixBytes[27] = 9\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} need\n */\nfunction assertEnoughData (data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(`${decodeErrPrefix} not enough data for type`)\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9jb21tb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGlCQUFpQjtBQUN4QztBQUNBOztBQU9DIiwic291cmNlcyI6WyJEOlxcRnVuZFJhaXNlclxcbm9kZV9tb2R1bGVzXFxjYm9yZ1xcbGliXFxjb21tb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZGVjb2RlRXJyUHJlZml4ID0gJ0NCT1IgZGVjb2RlIGVycm9yOidcbmNvbnN0IGVuY29kZUVyclByZWZpeCA9ICdDQk9SIGVuY29kZSBlcnJvcjonXG5cbmNvbnN0IHVpbnRNaW5vclByZWZpeEJ5dGVzID0gW11cbnVpbnRNaW5vclByZWZpeEJ5dGVzWzIzXSA9IDFcbnVpbnRNaW5vclByZWZpeEJ5dGVzWzI0XSA9IDJcbnVpbnRNaW5vclByZWZpeEJ5dGVzWzI1XSA9IDNcbnVpbnRNaW5vclByZWZpeEJ5dGVzWzI2XSA9IDVcbnVpbnRNaW5vclByZWZpeEJ5dGVzWzI3XSA9IDlcblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7bnVtYmVyfSBwb3NcbiAqIEBwYXJhbSB7bnVtYmVyfSBuZWVkXG4gKi9cbmZ1bmN0aW9uIGFzc2VydEVub3VnaERhdGEgKGRhdGEsIHBvcywgbmVlZCkge1xuICBpZiAoZGF0YS5sZW5ndGggLSBwb3MgPCBuZWVkKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke2RlY29kZUVyclByZWZpeH0gbm90IGVub3VnaCBkYXRhIGZvciB0eXBlYClcbiAgfVxufVxuXG5leHBvcnQge1xuICBkZWNvZGVFcnJQcmVmaXgsXG4gIGVuY29kZUVyclByZWZpeCxcbiAgdWludE1pbm9yUHJlZml4Qnl0ZXMsXG4gIGFzc2VydEVub3VnaERhdGFcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/cborg/lib/common.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/cborg/lib/decode.js":
/*!*******************************************!*\
  !*** ../node_modules/cborg/lib/decode.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Tokeniser: () => (/* binding */ Tokeniser),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   decodeFirst: () => (/* binding */ decodeFirst),\n/* harmony export */   tokensToObject: () => (/* binding */ tokensToObject)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"(ssr)/../node_modules/cborg/lib/common.js\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./token.js */ \"(ssr)/../node_modules/cborg/lib/token.js\");\n/* harmony import */ var _jump_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./jump.js */ \"(ssr)/../node_modules/cborg/lib/jump.js\");\n\n\n\n\n/**\n * @typedef {import('./token.js').Token} Token\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n * @typedef {import('../interface').DecodeTokenizer} DecodeTokenizer\n */\n\nconst defaultDecodeOptions = {\n  strict: false,\n  allowIndefinite: true,\n  allowUndefined: true,\n  allowBigInt: true\n}\n\n/**\n * @implements {DecodeTokenizer}\n */\nclass Tokeniser {\n  /**\n   * @param {Uint8Array} data\n   * @param {DecodeOptions} options\n   */\n  constructor (data, options = {}) {\n    this._pos = 0\n    this.data = data\n    this.options = options\n  }\n\n  pos () {\n    return this._pos\n  }\n\n  done () {\n    return this._pos >= this.data.length\n  }\n\n  next () {\n    const byt = this.data[this._pos]\n    let token = _jump_js__WEBPACK_IMPORTED_MODULE_2__.quick[byt]\n    if (token === undefined) {\n      const decoder = _jump_js__WEBPACK_IMPORTED_MODULE_2__.jump[byt]\n      /* c8 ignore next 4 */\n      // if we're here then there's something wrong with our jump or quick lists!\n      if (!decoder) {\n        throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} no decoder for major type ${byt >>> 5} (byte 0x${byt.toString(16).padStart(2, '0')})`)\n      }\n      const minor = byt & 31\n      token = decoder(this.data, this._pos, minor, this.options)\n    }\n    // @ts-ignore we get to assume encodedLength is set (crossing fingers slightly)\n    this._pos += token.encodedLength\n    return token\n  }\n}\n\nconst DONE = Symbol.for('DONE')\nconst BREAK = Symbol.for('BREAK')\n\n/**\n * @param {Token} token\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokenToArray (token, tokeniser, options) {\n  const arr = []\n  for (let i = 0; i < token.value; i++) {\n    const value = tokensToObject(tokeniser, options)\n    if (value === BREAK) {\n      if (token.value === Infinity) {\n        // normal end to indefinite length array\n        break\n      }\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} got unexpected break to lengthed array`)\n    }\n    if (value === DONE) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found array but not enough entries (got ${i}, expected ${token.value})`)\n    }\n    arr[i] = value\n  }\n  return arr\n}\n\n/**\n * @param {Token} token\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokenToMap (token, tokeniser, options) {\n  const useMaps = options.useMaps === true\n  const obj = useMaps ? undefined : {}\n  const m = useMaps ? new Map() : undefined\n  for (let i = 0; i < token.value; i++) {\n    const key = tokensToObject(tokeniser, options)\n    if (key === BREAK) {\n      if (token.value === Infinity) {\n        // normal end to indefinite length map\n        break\n      }\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} got unexpected break to lengthed map`)\n    }\n    if (key === DONE) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found map but not enough entries (got ${i} [no key], expected ${token.value})`)\n    }\n    if (useMaps !== true && typeof key !== 'string') {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} non-string keys not supported (got ${typeof key})`)\n    }\n    if (options.rejectDuplicateMapKeys === true) {\n      // @ts-ignore\n      if ((useMaps && m.has(key)) || (!useMaps && (key in obj))) {\n        throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found repeat map key \"${key}\"`)\n      }\n    }\n    const value = tokensToObject(tokeniser, options)\n    if (value === DONE) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} found map but not enough entries (got ${i} [no value], expected ${token.value})`)\n    }\n    if (useMaps) {\n      // @ts-ignore TODO reconsider this .. maybe needs to be strict about key types\n      m.set(key, value)\n    } else {\n      // @ts-ignore TODO reconsider this .. maybe needs to be strict about key types\n      obj[key] = value\n    }\n  }\n  // @ts-ignore c'mon man\n  return useMaps ? m : obj\n}\n\n/**\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokensToObject (tokeniser, options) {\n  // should we support array as an argument?\n  // check for tokenIter[Symbol.iterator] and replace tokenIter with what that returns?\n  if (tokeniser.done()) {\n    return DONE\n  }\n\n  const token = tokeniser.next()\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break) {\n    return BREAK\n  }\n\n  if (token.type.terminal) {\n    return token.value\n  }\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array) {\n    return tokenToArray(token, tokeniser, options)\n  }\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map) {\n    return tokenToMap(token, tokeniser, options)\n  }\n\n  if (token.type === _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.tag) {\n    if (options.tags && typeof options.tags[token.value] === 'function') {\n      const tagged = tokensToObject(tokeniser, options)\n      return options.tags[token.value](tagged)\n    }\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} tag not supported (${token.value})`)\n  }\n  /* c8 ignore next */\n  throw new Error('unsupported')\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {[any, Uint8Array]}\n */\nfunction decodeFirst (data, options) {\n  if (!(data instanceof Uint8Array)) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} data to decode must be a Uint8Array`)\n  }\n  options = Object.assign({}, defaultDecodeOptions, options)\n  const tokeniser = options.tokenizer || new Tokeniser(data, options)\n  const decoded = tokensToObject(tokeniser, options)\n  if (decoded === DONE) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} did not find any content to decode`)\n  }\n  if (decoded === BREAK) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} got unexpected break`)\n  }\n  return [decoded, data.subarray(tokeniser.pos())]\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {any}\n */\nfunction decode (data, options) {\n  const [decoded, remainder] = decodeFirst(data, options)\n  if (remainder.length > 0) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_0__.decodeErrPrefix} too many terminals, data makes no sense`)\n  }\n  return decoded\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/cborg/lib/decode.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/cborg/lib/encode.js":
/*!*******************************************!*\
  !*** ../node_modules/cborg/lib/encode.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Ref: () => (/* binding */ Ref),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   encodeCustom: () => (/* binding */ encodeCustom),\n/* harmony export */   makeCborEncoders: () => (/* binding */ makeCborEncoders),\n/* harmony export */   objectToTokens: () => (/* binding */ objectToTokens)\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"(ssr)/../node_modules/cborg/lib/is.js\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./token.js */ \"(ssr)/../node_modules/cborg/lib/token.js\");\n/* harmony import */ var _bl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bl.js */ \"(ssr)/../node_modules/cborg/lib/bl.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common.js */ \"(ssr)/../node_modules/cborg/lib/common.js\");\n/* harmony import */ var _jump_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./jump.js */ \"(ssr)/../node_modules/cborg/lib/jump.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/../node_modules/cborg/lib/byte-utils.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/../node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _1negint_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./1negint.js */ \"(ssr)/../node_modules/cborg/lib/1negint.js\");\n/* harmony import */ var _2bytes_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./2bytes.js */ \"(ssr)/../node_modules/cborg/lib/2bytes.js\");\n/* harmony import */ var _3string_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./3string.js */ \"(ssr)/../node_modules/cborg/lib/3string.js\");\n/* harmony import */ var _4array_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./4array.js */ \"(ssr)/../node_modules/cborg/lib/4array.js\");\n/* harmony import */ var _5map_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./5map.js */ \"(ssr)/../node_modules/cborg/lib/5map.js\");\n/* harmony import */ var _6tag_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./6tag.js */ \"(ssr)/../node_modules/cborg/lib/6tag.js\");\n/* harmony import */ var _7float_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./7float.js */ \"(ssr)/../node_modules/cborg/lib/7float.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {import('../interface').EncodeOptions} EncodeOptions\n * @typedef {import('../interface').OptionalTypeEncoder} OptionalTypeEncoder\n * @typedef {import('../interface').Reference} Reference\n * @typedef {import('../interface').StrictTypeEncoder} StrictTypeEncoder\n * @typedef {import('../interface').TokenTypeEncoder} TokenTypeEncoder\n * @typedef {import('../interface').TokenOrNestedTokens} TokenOrNestedTokens\n */\n\n/** @type {EncodeOptions} */\nconst defaultEncodeOptions = {\n  float64: false,\n  mapSorter,\n  quickEncodeToken: _jump_js__WEBPACK_IMPORTED_MODULE_4__.quickEncodeToken\n}\n\n/** @returns {TokenTypeEncoder[]} */\nfunction makeCborEncoders () {\n  const encoders = []\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.uint.major] = _0uint_js__WEBPACK_IMPORTED_MODULE_6__.encodeUint\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.negint.major] = _1negint_js__WEBPACK_IMPORTED_MODULE_7__.encodeNegint\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes.major] = _2bytes_js__WEBPACK_IMPORTED_MODULE_8__.encodeBytes\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.string.major] = _3string_js__WEBPACK_IMPORTED_MODULE_9__.encodeString\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array.major] = _4array_js__WEBPACK_IMPORTED_MODULE_10__.encodeArray\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map.major] = _5map_js__WEBPACK_IMPORTED_MODULE_11__.encodeMap\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.tag.major] = _6tag_js__WEBPACK_IMPORTED_MODULE_12__.encodeTag\n  encoders[_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.float.major] = _7float_js__WEBPACK_IMPORTED_MODULE_13__.encodeFloat\n  return encoders\n}\n\nconst cborEncoders = makeCborEncoders()\n\nconst buf = new _bl_js__WEBPACK_IMPORTED_MODULE_2__.Bl()\n\n/** @implements {Reference} */\nclass Ref {\n  /**\n   * @param {object|any[]} obj\n   * @param {Reference|undefined} parent\n   */\n  constructor (obj, parent) {\n    this.obj = obj\n    this.parent = parent\n  }\n\n  /**\n   * @param {object|any[]} obj\n   * @returns {boolean}\n   */\n  includes (obj) {\n    /** @type {Reference|undefined} */\n    let p = this\n    do {\n      if (p.obj === obj) {\n        return true\n      }\n    } while (p = p.parent) // eslint-disable-line\n    return false\n  }\n\n  /**\n   * @param {Reference|undefined} stack\n   * @param {object|any[]} obj\n   * @returns {Reference}\n   */\n  static createCheck (stack, obj) {\n    if (stack && stack.includes(obj)) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.encodeErrPrefix} object contains circular references`)\n    }\n    return new Ref(obj, stack)\n  }\n}\n\nconst simpleTokens = {\n  null: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.null, null),\n  undefined: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.undefined, undefined),\n  true: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.true, true),\n  false: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.false, false),\n  emptyArray: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array, 0),\n  emptyMap: new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map, 0)\n}\n\n/** @type {{[typeName: string]: StrictTypeEncoder}} */\nconst typeEncoders = {\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  number (obj, _typ, _options, _refStack) {\n    if (!Number.isInteger(obj) || !Number.isSafeInteger(obj)) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.float, obj)\n    } else if (obj >= 0) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.uint, obj)\n    } else {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.negint, obj)\n    }\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  bigint (obj, _typ, _options, _refStack) {\n    if (obj >= BigInt(0)) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.uint, obj)\n    } else {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.negint, obj)\n    }\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Uint8Array (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes, obj)\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  string (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.string, obj)\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  boolean (obj, _typ, _options, _refStack) {\n    return obj ? simpleTokens.true : simpleTokens.false\n  },\n\n  /**\n   * @param {any} _obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  null (_obj, _typ, _options, _refStack) {\n    return simpleTokens.null\n  },\n\n  /**\n   * @param {any} _obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  undefined (_obj, _typ, _options, _refStack) {\n    return simpleTokens.undefined\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  ArrayBuffer (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes, new Uint8Array(obj))\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  DataView (obj, _typ, _options, _refStack) {\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.bytes, new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength))\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} options\n   * @param {Reference} [refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Array (obj, _typ, options, refStack) {\n    if (!obj.length) {\n      if (options.addBreakTokens === true) {\n        return [simpleTokens.emptyArray, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n      }\n      return simpleTokens.emptyArray\n    }\n    refStack = Ref.createCheck(refStack, obj)\n    const entries = []\n    let i = 0\n    for (const e of obj) {\n      entries[i++] = objectToTokens(e, options, refStack)\n    }\n    if (options.addBreakTokens) {\n      return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array, obj.length), entries, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n    }\n    return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array, obj.length), entries]\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} typ\n   * @param {EncodeOptions} options\n   * @param {Reference} [refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Object (obj, typ, options, refStack) {\n    // could be an Object or a Map\n    const isMap = typ !== 'Object'\n    // it's slightly quicker to use Object.keys() than Object.entries()\n    const keys = isMap ? obj.keys() : Object.keys(obj)\n    const length = isMap ? obj.size : keys.length\n    if (!length) {\n      if (options.addBreakTokens === true) {\n        return [simpleTokens.emptyMap, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n      }\n      return simpleTokens.emptyMap\n    }\n    refStack = Ref.createCheck(refStack, obj)\n    /** @type {TokenOrNestedTokens[]} */\n    const entries = []\n    let i = 0\n    for (const key of keys) {\n      entries[i++] = [\n        objectToTokens(key, options, refStack),\n        objectToTokens(isMap ? obj.get(key) : obj[key], options, refStack)\n      ]\n    }\n    sortMapEntries(entries, options)\n    if (options.addBreakTokens) {\n      return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map, length), entries, new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break)]\n    }\n    return [new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map, length), entries]\n  }\n}\n\ntypeEncoders.Map = typeEncoders.Object\ntypeEncoders.Buffer = typeEncoders.Uint8Array\nfor (const typ of 'Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64'.split(' ')) {\n  typeEncoders[`${typ}Array`] = typeEncoders.DataView\n}\n\n/**\n * @param {any} obj\n * @param {EncodeOptions} [options]\n * @param {Reference} [refStack]\n * @returns {TokenOrNestedTokens}\n */\nfunction objectToTokens (obj, options = {}, refStack) {\n  const typ = (0,_is_js__WEBPACK_IMPORTED_MODULE_0__.is)(obj)\n  const customTypeEncoder = (options && options.typeEncoders && /** @type {OptionalTypeEncoder} */ options.typeEncoders[typ]) || typeEncoders[typ]\n  if (typeof customTypeEncoder === 'function') {\n    const tokens = customTypeEncoder(obj, typ, options, refStack)\n    if (tokens != null) {\n      return tokens\n    }\n  }\n  const typeEncoder = typeEncoders[typ]\n  if (!typeEncoder) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.encodeErrPrefix} unsupported type: ${typ}`)\n  }\n  return typeEncoder(obj, typ, options, refStack)\n}\n\n/*\nCBOR key sorting is a mess.\n\nThe canonicalisation recommendation from https://tools.ietf.org/html/rfc7049#section-3.9\nincludes the wording:\n\n> The keys in every map must be sorted lowest value to highest.\n> Sorting is performed on the bytes of the representation of the key\n> data items without paying attention to the 3/5 bit splitting for\n> major types.\n> ...\n>  *  If two keys have different lengths, the shorter one sorts\n      earlier;\n>  *  If two keys have the same length, the one with the lower value\n      in (byte-wise) lexical order sorts earlier.\n\n1. It is not clear what \"bytes of the representation of the key\" means: is it\n   the CBOR representation, or the binary representation of the object itself?\n   Consider the int and uint difference here.\n2. It is not clear what \"without paying attention to\" means: do we include it\n   and compare on that? Or do we omit the special prefix byte, (mostly) treating\n   the key in its plain binary representation form.\n\nThe FIDO 2.0: Client To Authenticator Protocol spec takes the original CBOR\nwording and clarifies it according to their understanding.\nhttps://fidoalliance.org/specs/fido-v2.0-rd-20170927/fido-client-to-authenticator-protocol-v2.0-rd-20170927.html#message-encoding\n\n> The keys in every map must be sorted lowest value to highest. Sorting is\n> performed on the bytes of the representation of the key data items without\n> paying attention to the 3/5 bit splitting for major types. The sorting rules\n> are:\n>  * If the major types are different, the one with the lower value in numerical\n>    order sorts earlier.\n>  * If two keys have different lengths, the shorter one sorts earlier;\n>  * If two keys have the same length, the one with the lower value in\n>    (byte-wise) lexical order sorts earlier.\n\nSome other implementations, such as borc, do a full encode then do a\nlength-first, byte-wise-second comparison:\nhttps://github.com/dignifiedquire/borc/blob/b6bae8b0bcde7c3976b0f0f0957208095c392a36/src/encoder.js#L358\nhttps://github.com/dignifiedquire/borc/blob/b6bae8b0bcde7c3976b0f0f0957208095c392a36/src/utils.js#L143-L151\n\nThis has the benefit of being able to easily handle arbitrary keys, including\ncomplex types (maps and arrays).\n\nWe'll opt for the FIDO approach, since it affords some efficies since we don't\nneed a full encode of each key to determine order and can defer to the types\nto determine how to most efficiently order their values (i.e. int and uint\nordering can be done on the numbers, no need for byte-wise, for example).\n\nRecommendation: stick to single key types or you'll get into trouble, and prefer\nstring keys because it's much simpler that way.\n*/\n\n/*\n(UPDATE, Dec 2020)\nhttps://tools.ietf.org/html/rfc8949 is the updated CBOR spec and clarifies some\nof the questions above with a new recommendation for sorting order being much\ncloser to what would be expected in other environments (i.e. no length-first\nweirdness).\nThis new sorting order is not yet implemented here but could be added as an\noption. \"Determinism\" (canonicity) is system dependent and it's difficult to\nchange existing systems that are built with existing expectations. So if a new\nordering is introduced here, the old needs to be kept as well with the user\nhaving the option.\n*/\n\n/**\n * @param {TokenOrNestedTokens[]} entries\n * @param {EncodeOptions} options\n */\nfunction sortMapEntries (entries, options) {\n  if (options.mapSorter) {\n    entries.sort(options.mapSorter)\n  }\n}\n\n/**\n * @param {(Token|Token[])[]} e1\n * @param {(Token|Token[])[]} e2\n * @returns {number}\n */\nfunction mapSorter (e1, e2) {\n  // the key position ([0]) could have a single token or an array\n  // almost always it'll be a single token but complex key might get involved\n  /* c8 ignore next 2 */\n  const keyToken1 = Array.isArray(e1[0]) ? e1[0][0] : e1[0]\n  const keyToken2 = Array.isArray(e2[0]) ? e2[0][0] : e2[0]\n\n  // different key types\n  if (keyToken1.type !== keyToken2.type) {\n    return keyToken1.type.compare(keyToken2.type)\n  }\n\n  const major = keyToken1.type.major\n  // TODO: handle case where cmp === 0 but there are more keyToken e. complex type)\n  const tcmp = cborEncoders[major].compareTokens(keyToken1, keyToken2)\n  /* c8 ignore next 5 */\n  if (tcmp === 0) {\n    // duplicate key or complex type where the first token matched,\n    // i.e. a map or array and we're only comparing the opening token\n    console.warn('WARNING: complex key types used, CBOR key sorting guarantees are gone')\n  }\n  return tcmp\n}\n\n/**\n * @param {Bl} buf\n * @param {TokenOrNestedTokens} tokens\n * @param {TokenTypeEncoder[]} encoders\n * @param {EncodeOptions} options\n */\nfunction tokensToEncoded (buf, tokens, encoders, options) {\n  if (Array.isArray(tokens)) {\n    for (const token of tokens) {\n      tokensToEncoded(buf, token, encoders, options)\n    }\n  } else {\n    encoders[tokens.type.major](buf, tokens, options)\n  }\n}\n\n/**\n * @param {any} data\n * @param {TokenTypeEncoder[]} encoders\n * @param {EncodeOptions} options\n * @returns {Uint8Array}\n */\nfunction encodeCustom (data, encoders, options) {\n  const tokens = objectToTokens(data, options)\n  if (!Array.isArray(tokens) && options.quickEncodeToken) {\n    const quickBytes = options.quickEncodeToken(tokens)\n    if (quickBytes) {\n      return quickBytes\n    }\n    const encoder = encoders[tokens.type.major]\n    if (encoder.encodedSize) {\n      const size = encoder.encodedSize(tokens, options)\n      const buf = new _bl_js__WEBPACK_IMPORTED_MODULE_2__.Bl(size)\n      encoder(buf, tokens, options)\n      /* c8 ignore next 4 */\n      // this would be a problem with encodedSize() functions\n      if (buf.chunks.length !== 1) {\n        throw new Error(`Unexpected error: pre-calculated length for ${tokens} was wrong`)\n      }\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_5__.asU8A)(buf.chunks[0])\n    }\n  }\n  buf.reset()\n  tokensToEncoded(buf, tokens, encoders, options)\n  return buf.toBytes(true)\n}\n\n/**\n * @param {any} data\n * @param {EncodeOptions} [options]\n * @returns {Uint8Array}\n */\nfunction encode (data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options)\n  return encodeCustom(data, cborEncoders, options)\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/cborg/lib/encode.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/cborg/lib/is.js":
/*!***************************************!*\
  !*** ../node_modules/cborg/lib/is.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   is: () => (/* binding */ is)\n/* harmony export */ });\n// This is an unfortunate replacement for @sindresorhus/is that we need to\n// re-implement for performance purposes. In particular the is.observable()\n// check is expensive, and unnecessary for our purposes. The values returned\n// are compatible with @sindresorhus/is, however.\n\nconst typeofs = [\n  'string',\n  'number',\n  'bigint',\n  'symbol'\n]\n\nconst objectTypeNames = [\n  'Function',\n  'Generator',\n  'AsyncGenerator',\n  'GeneratorFunction',\n  'AsyncGeneratorFunction',\n  'AsyncFunction',\n  'Observable',\n  'Array',\n  'Buffer',\n  'Object',\n  'RegExp',\n  'Date',\n  'Error',\n  'Map',\n  'Set',\n  'WeakMap',\n  'WeakSet',\n  'ArrayBuffer',\n  'SharedArrayBuffer',\n  'DataView',\n  'Promise',\n  'URL',\n  'HTMLElement',\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array'\n]\n\n/**\n * @param {any} value\n * @returns {string}\n */\nfunction is (value) {\n  if (value === null) {\n    return 'null'\n  }\n  if (value === undefined) {\n    return 'undefined'\n  }\n  if (value === true || value === false) {\n    return 'boolean'\n  }\n  const typeOf = typeof value\n  if (typeofs.includes(typeOf)) {\n    return typeOf\n  }\n  /* c8 ignore next 4 */\n  // not going to bother testing this, it's not going to be valid anyway\n  if (typeOf === 'function') {\n    return 'Function'\n  }\n  if (Array.isArray(value)) {\n    return 'Array'\n  }\n  if (isBuffer(value)) {\n    return 'Buffer'\n  }\n  const objectType = getObjectType(value)\n  if (objectType) {\n    return objectType\n  }\n  /* c8 ignore next */\n  return 'Object'\n}\n\n/**\n * @param {any} value\n * @returns {boolean}\n */\nfunction isBuffer (value) {\n  return value && value.constructor && value.constructor.isBuffer && value.constructor.isBuffer.call(null, value)\n}\n\n/**\n * @param {any} value\n * @returns {string|undefined}\n */\nfunction getObjectType (value) {\n  const objectTypeName = Object.prototype.toString.call(value).slice(8, -1)\n  if (objectTypeNames.includes(objectTypeName)) {\n    return objectTypeName\n  }\n  /* c8 ignore next */\n  return undefined\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9pcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsS0FBSztBQUNoQixhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxLQUFLO0FBQ2hCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsS0FBSztBQUNoQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJEOlxcRnVuZFJhaXNlclxcbm9kZV9tb2R1bGVzXFxjYm9yZ1xcbGliXFxpcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGlzIGFuIHVuZm9ydHVuYXRlIHJlcGxhY2VtZW50IGZvciBAc2luZHJlc29yaHVzL2lzIHRoYXQgd2UgbmVlZCB0b1xuLy8gcmUtaW1wbGVtZW50IGZvciBwZXJmb3JtYW5jZSBwdXJwb3Nlcy4gSW4gcGFydGljdWxhciB0aGUgaXMub2JzZXJ2YWJsZSgpXG4vLyBjaGVjayBpcyBleHBlbnNpdmUsIGFuZCB1bm5lY2Vzc2FyeSBmb3Igb3VyIHB1cnBvc2VzLiBUaGUgdmFsdWVzIHJldHVybmVkXG4vLyBhcmUgY29tcGF0aWJsZSB3aXRoIEBzaW5kcmVzb3JodXMvaXMsIGhvd2V2ZXIuXG5cbmNvbnN0IHR5cGVvZnMgPSBbXG4gICdzdHJpbmcnLFxuICAnbnVtYmVyJyxcbiAgJ2JpZ2ludCcsXG4gICdzeW1ib2wnXG5dXG5cbmNvbnN0IG9iamVjdFR5cGVOYW1lcyA9IFtcbiAgJ0Z1bmN0aW9uJyxcbiAgJ0dlbmVyYXRvcicsXG4gICdBc3luY0dlbmVyYXRvcicsXG4gICdHZW5lcmF0b3JGdW5jdGlvbicsXG4gICdBc3luY0dlbmVyYXRvckZ1bmN0aW9uJyxcbiAgJ0FzeW5jRnVuY3Rpb24nLFxuICAnT2JzZXJ2YWJsZScsXG4gICdBcnJheScsXG4gICdCdWZmZXInLFxuICAnT2JqZWN0JyxcbiAgJ1JlZ0V4cCcsXG4gICdEYXRlJyxcbiAgJ0Vycm9yJyxcbiAgJ01hcCcsXG4gICdTZXQnLFxuICAnV2Vha01hcCcsXG4gICdXZWFrU2V0JyxcbiAgJ0FycmF5QnVmZmVyJyxcbiAgJ1NoYXJlZEFycmF5QnVmZmVyJyxcbiAgJ0RhdGFWaWV3JyxcbiAgJ1Byb21pc2UnLFxuICAnVVJMJyxcbiAgJ0hUTUxFbGVtZW50JyxcbiAgJ0ludDhBcnJheScsXG4gICdVaW50OEFycmF5JyxcbiAgJ1VpbnQ4Q2xhbXBlZEFycmF5JyxcbiAgJ0ludDE2QXJyYXknLFxuICAnVWludDE2QXJyYXknLFxuICAnSW50MzJBcnJheScsXG4gICdVaW50MzJBcnJheScsXG4gICdGbG9hdDMyQXJyYXknLFxuICAnRmxvYXQ2NEFycmF5JyxcbiAgJ0JpZ0ludDY0QXJyYXknLFxuICAnQmlnVWludDY0QXJyYXknXG5dXG5cbi8qKlxuICogQHBhcmFtIHthbnl9IHZhbHVlXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxuICovXG5leHBvcnQgZnVuY3Rpb24gaXMgKHZhbHVlKSB7XG4gIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiAnbnVsbCdcbiAgfVxuICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybiAndW5kZWZpbmVkJ1xuICB9XG4gIGlmICh2YWx1ZSA9PT0gdHJ1ZSB8fCB2YWx1ZSA9PT0gZmFsc2UpIHtcbiAgICByZXR1cm4gJ2Jvb2xlYW4nXG4gIH1cbiAgY29uc3QgdHlwZU9mID0gdHlwZW9mIHZhbHVlXG4gIGlmICh0eXBlb2ZzLmluY2x1ZGVzKHR5cGVPZikpIHtcbiAgICByZXR1cm4gdHlwZU9mXG4gIH1cbiAgLyogYzggaWdub3JlIG5leHQgNCAqL1xuICAvLyBub3QgZ29pbmcgdG8gYm90aGVyIHRlc3RpbmcgdGhpcywgaXQncyBub3QgZ29pbmcgdG8gYmUgdmFsaWQgYW55d2F5XG4gIGlmICh0eXBlT2YgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gJ0Z1bmN0aW9uJ1xuICB9XG4gIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgIHJldHVybiAnQXJyYXknXG4gIH1cbiAgaWYgKGlzQnVmZmVyKHZhbHVlKSkge1xuICAgIHJldHVybiAnQnVmZmVyJ1xuICB9XG4gIGNvbnN0IG9iamVjdFR5cGUgPSBnZXRPYmplY3RUeXBlKHZhbHVlKVxuICBpZiAob2JqZWN0VHlwZSkge1xuICAgIHJldHVybiBvYmplY3RUeXBlXG4gIH1cbiAgLyogYzggaWdub3JlIG5leHQgKi9cbiAgcmV0dXJuICdPYmplY3QnXG59XG5cbi8qKlxuICogQHBhcmFtIHthbnl9IHZhbHVlXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAqL1xuZnVuY3Rpb24gaXNCdWZmZXIgKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSAmJiB2YWx1ZS5jb25zdHJ1Y3RvciAmJiB2YWx1ZS5jb25zdHJ1Y3Rvci5pc0J1ZmZlciAmJiB2YWx1ZS5jb25zdHJ1Y3Rvci5pc0J1ZmZlci5jYWxsKG51bGwsIHZhbHVlKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7YW55fSB2YWx1ZVxuICogQHJldHVybnMge3N0cmluZ3x1bmRlZmluZWR9XG4gKi9cbmZ1bmN0aW9uIGdldE9iamVjdFR5cGUgKHZhbHVlKSB7XG4gIGNvbnN0IG9iamVjdFR5cGVOYW1lID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhbHVlKS5zbGljZSg4LCAtMSlcbiAgaWYgKG9iamVjdFR5cGVOYW1lcy5pbmNsdWRlcyhvYmplY3RUeXBlTmFtZSkpIHtcbiAgICByZXR1cm4gb2JqZWN0VHlwZU5hbWVcbiAgfVxuICAvKiBjOCBpZ25vcmUgbmV4dCAqL1xuICByZXR1cm4gdW5kZWZpbmVkXG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/cborg/lib/is.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/cborg/lib/json/decode.js":
/*!************************************************!*\
  !*** ../node_modules/cborg/lib/json/decode.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Tokenizer: () => (/* binding */ Tokenizer),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   decodeFirst: () => (/* binding */ decodeFirst)\n/* harmony export */ });\n/* harmony import */ var _decode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../decode.js */ \"(ssr)/../node_modules/cborg/lib/decode.js\");\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../token.js */ \"(ssr)/../node_modules/cborg/lib/token.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../byte-utils.js */ \"(ssr)/../node_modules/cborg/lib/byte-utils.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common.js */ \"(ssr)/../node_modules/cborg/lib/common.js\");\n\n\n\n\n\n/**\n * @typedef {import('../../interface').DecodeOptions} DecodeOptions\n * @typedef {import('../../interface').DecodeTokenizer} DecodeTokenizer\n */\n\n/**\n * @implements {DecodeTokenizer}\n */\nclass Tokenizer {\n  /**\n   * @param {Uint8Array} data\n   * @param {DecodeOptions} options\n   */\n  constructor (data, options = {}) {\n    this._pos = 0\n    this.data = data\n    this.options = options\n    /** @type {string[]} */\n    this.modeStack = ['value']\n    this.lastToken = ''\n  }\n\n  pos () {\n    return this._pos\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  done () {\n    return this._pos >= this.data.length\n  }\n\n  /**\n   * @returns {number}\n   */\n  ch () {\n    return this.data[this._pos]\n  }\n\n  /**\n   * @returns {string}\n   */\n  currentMode () {\n    return this.modeStack[this.modeStack.length - 1]\n  }\n\n  skipWhitespace () {\n    let c = this.ch()\n    // @ts-ignore\n    while (c === 32 /* ' ' */ || c === 9 /* '\\t' */ || c === 13 /* '\\r' */ || c === 10 /* '\\n' */) {\n      c = this.data[++this._pos]\n    }\n  }\n\n  /**\n   * @param {number[]} str\n   */\n  expect (str) {\n    if (this.data.length - this._pos < str.length) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected end of input at position ${this._pos}`)\n    }\n    for (let i = 0; i < str.length; i++) {\n      if (this.data[this._pos++] !== str[i]) {\n        throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected token at position ${this._pos}, expected to find '${String.fromCharCode(...str)}'`)\n      }\n    }\n  }\n\n  parseNumber () {\n    const startPos = this._pos\n    let negative = false\n    let float = false\n\n    /**\n     * @param {number[]} chars\n     */\n    const swallow = (chars) => {\n      while (!this.done()) {\n        const ch = this.ch()\n        if (chars.includes(ch)) {\n          this._pos++\n        } else {\n          break\n        }\n      }\n    }\n\n    // lead\n    if (this.ch() === 45) { // '-'\n      negative = true\n      this._pos++\n    }\n    if (this.ch() === 48) { // '0'\n      this._pos++\n      if (this.ch() === 46) { // '.'\n        this._pos++\n        float = true\n      } else {\n        return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.uint, 0, this._pos - startPos)\n      }\n    }\n    swallow([48, 49, 50, 51, 52, 53, 54, 55, 56, 57]) // DIGIT\n    if (negative && this._pos === startPos + 1) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected token at position ${this._pos}`)\n    }\n    if (!this.done() && this.ch() === 46) { // '.'\n      if (float) {\n        throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected token at position ${this._pos}`)\n      }\n      float = true\n      this._pos++\n      swallow([48, 49, 50, 51, 52, 53, 54, 55, 56, 57]) // DIGIT\n    }\n    if (!this.done() && (this.ch() === 101 || this.ch() === 69)) { // '[eE]'\n      float = true\n      this._pos++\n      if (!this.done() && (this.ch() === 43 || this.ch() === 45)) { // '+', '-'\n        this._pos++\n      }\n      swallow([48, 49, 50, 51, 52, 53, 54, 55, 56, 57]) // DIGIT\n    }\n    // @ts-ignore\n    const numStr = String.fromCharCode.apply(null, this.data.subarray(startPos, this._pos))\n    const num = parseFloat(numStr)\n    if (float) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.float, num, this._pos - startPos)\n    }\n    if (this.options.allowBigInt !== true || Number.isSafeInteger(num)) {\n      return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(num >= 0 ? _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.uint : _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.negint, num, this._pos - startPos)\n    }\n    return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(num >= 0 ? _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.uint : _token_js__WEBPACK_IMPORTED_MODULE_1__.Type.negint, BigInt(numStr), this._pos - startPos)\n  }\n\n  /**\n   * @returns {Token}\n   */\n  parseString () {\n    /* c8 ignore next 4 */\n    if (this.ch() !== 34) { // '\"'\n      // this would be a programming error\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected character at position ${this._pos}; this shouldn't happen`)\n    }\n    this._pos++\n\n    // check for simple fast-path, all printable ascii, no escapes\n    // >0x10000 elements may fail fn.apply() (http://stackoverflow.com/a/22747272/680742)\n    for (let i = this._pos, l = 0; i < this.data.length && l < 0x10000; i++, l++) {\n      const ch = this.data[i]\n      if (ch === 92 || ch < 32 || ch >= 128) { // '\\', ' ', control-chars or non-trivial\n        break\n      }\n      if (ch === 34) { // '\"'\n        // @ts-ignore\n        const str = String.fromCharCode.apply(null, this.data.subarray(this._pos, i))\n        this._pos = i + 1\n        return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.string, str, l)\n      }\n    }\n\n    const startPos = this._pos\n    const chars = []\n\n    const readu4 = () => {\n      if (this._pos + 4 >= this.data.length) {\n        throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected end of unicode escape sequence at position ${this._pos}`)\n      }\n      let u4 = 0\n      for (let i = 0; i < 4; i++) {\n        let ch = this.ch()\n        if (ch >= 48 && ch <= 57) { // '0' && '9'\n          ch -= 48\n        } else if (ch >= 97 && ch <= 102) { // 'a' && 'f'\n          ch = ch - 97 + 10\n        } else if (ch >= 65 && ch <= 70) { // 'A' && 'F'\n          ch = ch - 65 + 10\n        } else {\n          throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected unicode escape character at position ${this._pos}`)\n        }\n        u4 = u4 * 16 + ch\n        this._pos++\n      }\n      return u4\n    }\n\n    // mostly taken from feross/buffer and adjusted to fit\n    const readUtf8Char = () => {\n      const firstByte = this.ch()\n      let codePoint = null\n      /* c8 ignore next 1 */\n      let bytesPerSequence = (firstByte > 0xef) ? 4 : (firstByte > 0xdf) ? 3 : (firstByte > 0xbf) ? 2 : 1\n\n      if (this._pos + bytesPerSequence > this.data.length) {\n        throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected unicode sequence at position ${this._pos}`)\n      }\n\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        /* c8 ignore next 6 */\n        // this case is dealt with by the caller function\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = this.data[this._pos + 1]\n          if ((secondByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1f) << 0x6 | (secondByte & 0x3f)\n            if (tempCodePoint > 0x7f) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = this.data[this._pos + 1]\n          thirdByte = this.data[this._pos + 2]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0xc | (secondByte & 0x3f) << 0x6 | (thirdByte & 0x3f)\n            /* c8 ignore next 3 */\n            if (tempCodePoint > 0x7ff && (tempCodePoint < 0xd800 || tempCodePoint > 0xdfff)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = this.data[this._pos + 1]\n          thirdByte = this.data[this._pos + 2]\n          fourthByte = this.data[this._pos + 3]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80 && (fourthByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0x12 | (secondByte & 0x3f) << 0xc | (thirdByte & 0x3f) << 0x6 | (fourthByte & 0x3f)\n            if (tempCodePoint > 0xffff && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n\n      /* c8 ignore next 5 */\n      if (codePoint === null) {\n        // we did not generate a valid codePoint so insert a\n        // replacement char (U+FFFD) and advance only 1 byte\n        codePoint = 0xfffd\n        bytesPerSequence = 1\n      } else if (codePoint > 0xffff) {\n        // encode to utf16 (surrogate pair dance)\n        codePoint -= 0x10000\n        chars.push(codePoint >>> 10 & 0x3ff | 0xd800)\n        codePoint = 0xdc00 | codePoint & 0x3ff\n      }\n\n      chars.push(codePoint)\n      this._pos += bytesPerSequence\n    }\n\n    // TODO: could take the approach of a quick first scan for special chars like encoding/json/decode.go#unquoteBytes\n    // and converting all of the ascii chars from the base array in bulk\n    while (!this.done()) {\n      const ch = this.ch()\n      let ch1\n      switch (ch) {\n        case 92: // '\\'\n          this._pos++\n          if (this.done()) {\n            throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected string termination at position ${this._pos}`)\n          }\n          ch1 = this.ch()\n          this._pos++\n          switch (ch1) {\n            case 34: // '\"'\n            case 39: // '\\''\n            case 92: // '\\'\n            case 47: // '/'\n              chars.push(ch1)\n              break\n            case 98: // 'b'\n              chars.push(8)\n              break\n            case 116: // 't'\n              chars.push(9)\n              break\n            case 110: // 'n'\n              chars.push(10)\n              break\n            case 102: // 'f'\n              chars.push(12)\n              break\n            case 114: // 'r'\n              chars.push(13)\n              break\n            case 117: // 'u'\n              chars.push(readu4())\n              break\n            default:\n              throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected string escape character at position ${this._pos}`)\n          }\n          break\n        case 34: // '\"'\n          this._pos++\n          return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.string, (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_2__.decodeCodePointsArray)(chars), this._pos - startPos)\n        default:\n          if (ch < 32) { // ' '\n            throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} invalid control character at position ${this._pos}`)\n          } else if (ch < 0x80) {\n            chars.push(ch)\n            this._pos++\n          } else {\n            readUtf8Char()\n          }\n      }\n    }\n\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected end of string at position ${this._pos}`)\n  }\n\n  /**\n   * @returns {Token}\n   */\n  parseValue () {\n    switch (this.ch()) {\n      case 123: // '{'\n        this.modeStack.push('obj-start')\n        this._pos++\n        return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.map, Infinity, 1)\n      case 91: // '['\n        this.modeStack.push('array-start')\n        this._pos++\n        return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.array, Infinity, 1)\n      case 34: { // '\"'\n        return this.parseString()\n      }\n      case 110: // 'n' / null\n        this.expect([110, 117, 108, 108]) // 'null'\n        return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.null, null, 4)\n      case 102: // 'f' / // false\n        this.expect([102, 97, 108, 115, 101]) // 'false'\n        return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.false, false, 5)\n      case 116: // 't' / // true\n        this.expect([116, 114, 117, 101]) // 'true'\n        return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.true, true, 4)\n      case 45: // '-'\n      case 48: // '0'\n      case 49: // '1'\n      case 50: // '2'\n      case 51: // '3'\n      case 52: // '4'\n      case 53: // '5'\n      case 54: // '6'\n      case 55: // '7'\n      case 56: // '8'\n      case 57: // '9'\n        return this.parseNumber()\n      default:\n        throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected character at position ${this._pos}`)\n    }\n  }\n\n  /**\n   * @returns {Token}\n   */\n  next () {\n    this.skipWhitespace()\n    switch (this.currentMode()) {\n      case 'value':\n        this.modeStack.pop()\n        return this.parseValue()\n      case 'array-value': {\n        this.modeStack.pop()\n        if (this.ch() === 93) { // ']'\n          this._pos++\n          this.skipWhitespace()\n          return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break, undefined, 1)\n        }\n        if (this.ch() !== 44) { // ','\n          throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected character at position ${this._pos}, was expecting array delimiter but found '${String.fromCharCode(this.ch())}'`)\n        }\n        this._pos++\n        this.modeStack.push('array-value')\n        this.skipWhitespace()\n        return this.parseValue()\n      }\n      case 'array-start': {\n        this.modeStack.pop()\n        if (this.ch() === 93) { // ']'\n          this._pos++\n          this.skipWhitespace()\n          return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break, undefined, 1)\n        }\n        this.modeStack.push('array-value')\n        this.skipWhitespace()\n        return this.parseValue()\n      }\n      // @ts-ignore\n      case 'obj-key':\n        if (this.ch() === 125) { // '}'\n          this.modeStack.pop()\n          this._pos++\n          this.skipWhitespace()\n          return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break, undefined, 1)\n        }\n        if (this.ch() !== 44) { // ','\n          throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected character at position ${this._pos}, was expecting object delimiter but found '${String.fromCharCode(this.ch())}'`)\n        }\n        this._pos++\n        this.skipWhitespace()\n      case 'obj-start': { // eslint-disable-line no-fallthrough\n        this.modeStack.pop()\n        if (this.ch() === 125) { // '}'\n          this._pos++\n          this.skipWhitespace()\n          return new _token_js__WEBPACK_IMPORTED_MODULE_1__.Token(_token_js__WEBPACK_IMPORTED_MODULE_1__.Type.break, undefined, 1)\n        }\n        const token = this.parseString()\n        this.skipWhitespace()\n        if (this.ch() !== 58) { // ':'\n          throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected character at position ${this._pos}, was expecting key/value delimiter ':' but found '${String.fromCharCode(this.ch())}'`)\n        }\n        this._pos++\n        this.modeStack.push('obj-value')\n        return token\n      }\n      case 'obj-value': {\n        this.modeStack.pop()\n        this.modeStack.push('obj-key')\n        this.skipWhitespace()\n        return this.parseValue()\n      }\n      /* c8 ignore next 2 */\n      default:\n        throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_3__.decodeErrPrefix} unexpected parse state at position ${this._pos}; this shouldn't happen`)\n    }\n  }\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {any}\n */\nfunction decode (data, options) {\n  options = Object.assign({ tokenizer: new Tokenizer(data, options) }, options)\n  return (0,_decode_js__WEBPACK_IMPORTED_MODULE_0__.decode)(data, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {[any, Uint8Array]}\n */\nfunction decodeFirst (data, options) {\n  options = Object.assign({ tokenizer: new Tokenizer(data, options) }, options)\n  return (0,_decode_js__WEBPACK_IMPORTED_MODULE_0__.decodeFirst)(data, options)\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/cborg/lib/json/decode.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/cborg/lib/json/encode.js":
/*!************************************************!*\
  !*** ../node_modules/cborg/lib/json/encode.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../token.js */ \"(ssr)/../node_modules/cborg/lib/token.js\");\n/* harmony import */ var _encode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../encode.js */ \"(ssr)/../node_modules/cborg/lib/encode.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common.js */ \"(ssr)/../node_modules/cborg/lib/common.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../byte-utils.js */ \"(ssr)/../node_modules/cborg/lib/byte-utils.js\");\n\n\n\n\n\n/**\n * @typedef {import('../../interface').EncodeOptions} EncodeOptions\n * @typedef {import('../token').Token} Token\n * @typedef {import('../bl').Bl} Bl\n */\n\nclass JSONEncoder extends Array {\n  constructor () {\n    super()\n    /** @type {{type:Type,elements:number}[]} */\n    this.inRecursive = []\n  }\n\n  /**\n   * @param {Bl} buf\n   */\n  prefix (buf) {\n    const recurs = this.inRecursive[this.inRecursive.length - 1]\n    if (recurs) {\n      if (recurs.type === _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array) {\n        recurs.elements++\n        if (recurs.elements !== 1) { // >first\n          buf.push([44]) // ','\n        }\n      }\n      if (recurs.type === _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map) {\n        recurs.elements++\n        if (recurs.elements !== 1) { // >first\n          if (recurs.elements % 2 === 1) { // key\n            buf.push([44]) // ','\n          } else {\n            buf.push([58]) // ':'\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Bl} buf\n   * @param {Token} token\n   */\n  [_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint.major] (buf, token) {\n    this.prefix(buf)\n    const is = String(token.value)\n    const isa = []\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i)\n    }\n    buf.push(isa)\n  }\n\n  /**\n   * @param {Bl} buf\n   * @param {Token} token\n   */\n  [_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint.major] (buf, token) {\n    // @ts-ignore hack\n    this[_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint.major](buf, token)\n  }\n\n  /**\n   * @param {Bl} _buf\n   * @param {Token} _token\n   */\n  [_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.bytes.major] (_buf, _token) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.encodeErrPrefix} unsupported type: Uint8Array`)\n  }\n\n  /**\n   * @param {Bl} buf\n   * @param {Token} token\n   */\n  [_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string.major] (buf, token) {\n    this.prefix(buf)\n    // buf.push(34) // '\"'\n    // encodeUtf8(token.value, byts)\n    // buf.push(34) // '\"'\n    const byts = (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_3__.fromString)(JSON.stringify(token.value))\n    buf.push(byts.length > 32 ? (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_3__.asU8A)(byts) : byts)\n  }\n\n  /**\n   * @param {Bl} buf\n   * @param {Token} _token\n   */\n  [_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array.major] (buf, _token) {\n    this.prefix(buf)\n    this.inRecursive.push({ type: _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array, elements: 0 })\n    buf.push([91]) // '['\n  }\n\n  /**\n   * @param {Bl} buf\n   * @param {Token} _token\n   */\n  [_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map.major] (buf, _token) {\n    this.prefix(buf)\n    this.inRecursive.push({ type: _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map, elements: 0 })\n    buf.push([123]) // '{'\n  }\n\n  /**\n   * @param {Bl} _buf\n   * @param {Token} _token\n   */\n  [_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.tag.major] (_buf, _token) {}\n\n  /**\n   * @param {Bl} buf\n   * @param {Token} token\n   */\n  [_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.float.major] (buf, token) {\n    if (token.type.name === 'break') {\n      const recurs = this.inRecursive.pop()\n      if (recurs) {\n        if (recurs.type === _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array) {\n          buf.push([93]) // ']'\n        } else if (recurs.type === _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map) {\n          buf.push([125]) // '}'\n        /* c8 ignore next 3 */\n        } else {\n          throw new Error('Unexpected recursive type; this should not happen!')\n        }\n        return\n      }\n      /* c8 ignore next 2 */\n      throw new Error('Unexpected break; this should not happen!')\n    }\n    if (token.value === undefined) {\n      throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.encodeErrPrefix} unsupported type: undefined`)\n    }\n\n    this.prefix(buf)\n    if (token.type.name === 'true') {\n      buf.push([116, 114, 117, 101]) // 'true'\n      return\n    } else if (token.type.name === 'false') {\n      buf.push([102, 97, 108, 115, 101]) // 'false'\n      return\n    } else if (token.type.name === 'null') {\n      buf.push([110, 117, 108, 108]) // 'null'\n      return\n    }\n\n    // number\n    const is = String(token.value)\n    const isa = []\n    let dp = false\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i)\n      if (!dp && (isa[i] === 46 || isa[i] === 101 || isa[i] === 69)) { // '[.eE]'\n        dp = true\n      }\n    }\n    if (!dp) { // need a decimal point for floats\n      isa.push(46) // '.'\n      isa.push(48) // '0'\n    }\n    buf.push(isa)\n  }\n}\n\n// The below code is mostly taken and modified from https://github.com/feross/buffer\n// Licensed MIT. Copyright (c) Feross Aboukhadijeh\n// function encodeUtf8 (string, byts) {\n//   let codePoint\n//   const length = string.length\n//   let leadSurrogate = null\n\n//   for (let i = 0; i < length; ++i) {\n//     codePoint = string.charCodeAt(i)\n\n//     // is surrogate component\n//     if (codePoint > 0xd7ff && codePoint < 0xe000) {\n//       // last char was a lead\n//       if (!leadSurrogate) {\n//         // no lead yet\n//         /* c8 ignore next 9 */\n//         if (codePoint > 0xdbff) {\n//           // unexpected trail\n//           byts.push(0xef, 0xbf, 0xbd)\n//           continue\n//         } else if (i + 1 === length) {\n//           // unpaired lead\n//           byts.push(0xef, 0xbf, 0xbd)\n//           continue\n//         }\n\n//         // valid lead\n//         leadSurrogate = codePoint\n\n//         continue\n//       }\n\n//       // 2 leads in a row\n//       /* c8 ignore next 5 */\n//       if (codePoint < 0xdc00) {\n//         byts.push(0xef, 0xbf, 0xbd)\n//         leadSurrogate = codePoint\n//         continue\n//       }\n\n//       // valid surrogate pair\n//       codePoint = (leadSurrogate - 0xd800 << 10 | codePoint - 0xdc00) + 0x10000\n//     /* c8 ignore next 4 */\n//     } else if (leadSurrogate) {\n//       // valid bmp char, but last char was a lead\n//       byts.push(0xef, 0xbf, 0xbd)\n//     }\n\n//     leadSurrogate = null\n\n//     // encode utf8\n//     if (codePoint < 0x80) {\n//       // special JSON escapes\n//       switch (codePoint) {\n//         case 8: // '\\b'\n//           byts.push(92, 98) // '\\\\b'\n//           continue\n//         case 9: // '\\t'\n//           byts.push(92, 116) // '\\\\t'\n//           continue\n//         case 10: // '\\n'\n//           byts.push(92, 110) // '\\\\n'\n//           continue\n//         case 12: // '\\f'\n//           byts.push(92, 102) // '\\\\f'\n//           continue\n//         case 13: // '\\r'\n//           byts.push(92, 114) // '\\\\r'\n//           continue\n//         case 34: // '\"'\n//           byts.push(92, 34) // '\\\\\"'\n//           continue\n//         case 92: // '\\\\'\n//           byts.push(92, 92) // '\\\\\\\\'\n//           continue\n//       }\n\n//       byts.push(codePoint)\n//     } else if (codePoint < 0x800) {\n//       /* c8 ignore next 1 */\n//       byts.push(\n//         codePoint >> 0x6 | 0xc0,\n//         codePoint & 0x3f | 0x80\n//       )\n//     } else if (codePoint < 0x10000) {\n//       /* c8 ignore next 1 */\n//       byts.push(\n//         codePoint >> 0xc | 0xe0,\n//         codePoint >> 0x6 & 0x3f | 0x80,\n//         codePoint & 0x3f | 0x80\n//       )\n//     /* c8 ignore next 9 */\n//     } else if (codePoint < 0x110000) {\n//       byts.push(\n//         codePoint >> 0x12 | 0xf0,\n//         codePoint >> 0xc & 0x3f | 0x80,\n//         codePoint >> 0x6 & 0x3f | 0x80,\n//         codePoint & 0x3f | 0x80\n//       )\n//     } else {\n//       /* c8 ignore next 2 */\n//       throw new Error('Invalid code point')\n//     }\n//   }\n// }\n\n/**\n * @param {(Token|Token[])[]} e1\n * @param {(Token|Token[])[]} e2\n * @returns {number}\n */\nfunction mapSorter (e1, e2) {\n  if (Array.isArray(e1[0]) || Array.isArray(e2[0])) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.encodeErrPrefix} complex map keys are not supported`)\n  }\n  const keyToken1 = e1[0]\n  const keyToken2 = e2[0]\n  if (keyToken1.type !== _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string || keyToken2.type !== _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string) {\n    throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.encodeErrPrefix} non-string map keys are not supported`)\n  }\n  if (keyToken1 < keyToken2) {\n    return -1\n  }\n  if (keyToken1 > keyToken2) {\n    return 1\n  }\n  /* c8 ignore next 1 */\n  throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_2__.encodeErrPrefix} unexpected duplicate map keys, this is not supported`)\n}\n\nconst defaultEncodeOptions = { addBreakTokens: true, mapSorter }\n\n/**\n * @param {any} data\n * @param {EncodeOptions} [options]\n * @returns {Uint8Array}\n */\nfunction encode (data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options)\n  // @ts-ignore TokenTypeEncoder[] requires compareTokens() on each encoder, we don't use them here\n  return (0,_encode_js__WEBPACK_IMPORTED_MODULE_1__.encodeCustom)(data, new JSONEncoder(), options)\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/cborg/lib/json/encode.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/cborg/lib/json/json.js":
/*!**********************************************!*\
  !*** ../node_modules/cborg/lib/json/json.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Tokenizer: () => (/* reexport safe */ _decode_js__WEBPACK_IMPORTED_MODULE_1__.Tokenizer),\n/* harmony export */   decode: () => (/* reexport safe */ _decode_js__WEBPACK_IMPORTED_MODULE_1__.decode),\n/* harmony export */   decodeFirst: () => (/* reexport safe */ _decode_js__WEBPACK_IMPORTED_MODULE_1__.decodeFirst),\n/* harmony export */   encode: () => (/* reexport safe */ _encode_js__WEBPACK_IMPORTED_MODULE_0__.encode)\n/* harmony export */ });\n/* harmony import */ var _encode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./encode.js */ \"(ssr)/../node_modules/cborg/lib/json/encode.js\");\n/* harmony import */ var _decode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./decode.js */ \"(ssr)/../node_modules/cborg/lib/json/decode.js\");\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi9qc29uL2pzb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQW9DO0FBQ3dCOztBQUVYIiwic291cmNlcyI6WyJEOlxcRnVuZFJhaXNlclxcbm9kZV9tb2R1bGVzXFxjYm9yZ1xcbGliXFxqc29uXFxqc29uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGVuY29kZSB9IGZyb20gJy4vZW5jb2RlLmpzJ1xuaW1wb3J0IHsgZGVjb2RlLCBkZWNvZGVGaXJzdCwgVG9rZW5pemVyIH0gZnJvbSAnLi9kZWNvZGUuanMnXG5cbmV4cG9ydCB7IGVuY29kZSwgZGVjb2RlLCBkZWNvZGVGaXJzdCwgVG9rZW5pemVyIH1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/cborg/lib/json/json.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/cborg/lib/jump.js":
/*!*****************************************!*\
  !*** ../node_modules/cborg/lib/jump.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   jump: () => (/* binding */ jump),\n/* harmony export */   quick: () => (/* binding */ quick),\n/* harmony export */   quickEncodeToken: () => (/* binding */ quickEncodeToken)\n/* harmony export */ });\n/* harmony import */ var _token_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./token.js */ \"(ssr)/../node_modules/cborg/lib/token.js\");\n/* harmony import */ var _0uint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./0uint.js */ \"(ssr)/../node_modules/cborg/lib/0uint.js\");\n/* harmony import */ var _1negint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./1negint.js */ \"(ssr)/../node_modules/cborg/lib/1negint.js\");\n/* harmony import */ var _2bytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./2bytes.js */ \"(ssr)/../node_modules/cborg/lib/2bytes.js\");\n/* harmony import */ var _3string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./3string.js */ \"(ssr)/../node_modules/cborg/lib/3string.js\");\n/* harmony import */ var _4array_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./4array.js */ \"(ssr)/../node_modules/cborg/lib/4array.js\");\n/* harmony import */ var _5map_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./5map.js */ \"(ssr)/../node_modules/cborg/lib/5map.js\");\n/* harmony import */ var _6tag_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./6tag.js */ \"(ssr)/../node_modules/cborg/lib/6tag.js\");\n/* harmony import */ var _7float_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./7float.js */ \"(ssr)/../node_modules/cborg/lib/7float.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./common.js */ \"(ssr)/../node_modules/cborg/lib/common.js\");\n/* harmony import */ var _byte_utils_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./byte-utils.js */ \"(ssr)/../node_modules/cborg/lib/byte-utils.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n */\nfunction invalidMinor (data, pos, minor) {\n  throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_9__.decodeErrPrefix} encountered invalid minor (${minor}) for major ${data[pos] >>> 5}`)\n}\n\n/**\n * @param {string} msg\n * @returns {()=>any}\n */\nfunction errorer (msg) {\n  return () => { throw new Error(`${_common_js__WEBPACK_IMPORTED_MODULE_9__.decodeErrPrefix} ${msg}`) }\n}\n\n/** @type {((data:Uint8Array, pos:number, minor:number, options?:DecodeOptions) => any)[]} */\nconst jump = []\n\n// unsigned integer, 0x00..0x17 (0..23)\nfor (let i = 0; i <= 0x17; i++) {\n  jump[i] = invalidMinor // uint.decodeUintCompact, handled by quick[]\n}\njump[0x18] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint8 // unsigned integer, one-byte uint8_t follows\njump[0x19] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint16 // unsigned integer, two-byte uint16_t follows\njump[0x1a] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint32 // unsigned integer, four-byte uint32_t follows\njump[0x1b] = _0uint_js__WEBPACK_IMPORTED_MODULE_1__.decodeUint64 // unsigned integer, eight-byte uint64_t follows\njump[0x1c] = invalidMinor\njump[0x1d] = invalidMinor\njump[0x1e] = invalidMinor\njump[0x1f] = invalidMinor\n// negative integer, -1-0x00..-1-0x17 (-1..-24)\nfor (let i = 0x20; i <= 0x37; i++) {\n  jump[i] = invalidMinor // negintDecode, handled by quick[]\n}\njump[0x38] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint8 // negative integer, -1-n one-byte uint8_t for n follows\njump[0x39] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint16 // negative integer, -1-n two-byte uint16_t for n follows\njump[0x3a] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint32 // negative integer, -1-n four-byte uint32_t for follows\njump[0x3b] = _1negint_js__WEBPACK_IMPORTED_MODULE_2__.decodeNegint64 // negative integer, -1-n eight-byte uint64_t for follows\njump[0x3c] = invalidMinor\njump[0x3d] = invalidMinor\njump[0x3e] = invalidMinor\njump[0x3f] = invalidMinor\n// byte string, 0x00..0x17 bytes follow\nfor (let i = 0x40; i <= 0x57; i++) {\n  jump[i] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytesCompact\n}\njump[0x58] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes8 // byte string, one-byte uint8_t for n, and then n bytes follow\njump[0x59] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes16 // byte string, two-byte uint16_t for n, and then n bytes follow\njump[0x5a] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes32 // byte string, four-byte uint32_t for n, and then n bytes follow\njump[0x5b] = _2bytes_js__WEBPACK_IMPORTED_MODULE_3__.decodeBytes64 // byte string, eight-byte uint64_t for n, and then n bytes follow\njump[0x5c] = invalidMinor\njump[0x5d] = invalidMinor\njump[0x5e] = invalidMinor\njump[0x5f] = errorer('indefinite length bytes/strings are not supported') // byte string, byte strings follow, terminated by \"break\"\n// UTF-8 string 0x00..0x17 bytes follow\nfor (let i = 0x60; i <= 0x77; i++) {\n  jump[i] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeStringCompact\n}\njump[0x78] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString8 // UTF-8 string, one-byte uint8_t for n, and then n bytes follow\njump[0x79] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString16 // UTF-8 string, two-byte uint16_t for n, and then n bytes follow\njump[0x7a] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString32 // UTF-8 string, four-byte uint32_t for n, and then n bytes follow\njump[0x7b] = _3string_js__WEBPACK_IMPORTED_MODULE_4__.decodeString64 // UTF-8 string, eight-byte uint64_t for n, and then n bytes follow\njump[0x7c] = invalidMinor\njump[0x7d] = invalidMinor\njump[0x7e] = invalidMinor\njump[0x7f] = errorer('indefinite length bytes/strings are not supported') // UTF-8 strings follow, terminated by \"break\"\n// array, 0x00..0x17 data items follow\nfor (let i = 0x80; i <= 0x97; i++) {\n  jump[i] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArrayCompact\n}\njump[0x98] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray8 // array, one-byte uint8_t for n, and then n data items follow\njump[0x99] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray16 // array, two-byte uint16_t for n, and then n data items follow\njump[0x9a] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray32 // array, four-byte uint32_t for n, and then n data items follow\njump[0x9b] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArray64 // array, eight-byte uint64_t for n, and then n data items follow\njump[0x9c] = invalidMinor\njump[0x9d] = invalidMinor\njump[0x9e] = invalidMinor\njump[0x9f] = _4array_js__WEBPACK_IMPORTED_MODULE_5__.decodeArrayIndefinite // array, data items follow, terminated by \"break\"\n// map, 0x00..0x17 pairs of data items follow\nfor (let i = 0xa0; i <= 0xb7; i++) {\n  jump[i] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMapCompact\n}\njump[0xb8] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap8 // map, one-byte uint8_t for n, and then n pairs of data items follow\njump[0xb9] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap16 // map, two-byte uint16_t for n, and then n pairs of data items follow\njump[0xba] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap32 // map, four-byte uint32_t for n, and then n pairs of data items follow\njump[0xbb] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMap64 // map, eight-byte uint64_t for n, and then n pairs of data items follow\njump[0xbc] = invalidMinor\njump[0xbd] = invalidMinor\njump[0xbe] = invalidMinor\njump[0xbf] = _5map_js__WEBPACK_IMPORTED_MODULE_6__.decodeMapIndefinite // map, pairs of data items follow, terminated by \"break\"\n// tags\nfor (let i = 0xc0; i <= 0xd7; i++) {\n  jump[i] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTagCompact\n}\njump[0xd8] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag8\njump[0xd9] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag16\njump[0xda] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag32\njump[0xdb] = _6tag_js__WEBPACK_IMPORTED_MODULE_7__.decodeTag64\njump[0xdc] = invalidMinor\njump[0xdd] = invalidMinor\njump[0xde] = invalidMinor\njump[0xdf] = invalidMinor\n// 0xe0..0xf3 simple values, unsupported\nfor (let i = 0xe0; i <= 0xf3; i++) {\n  jump[i] = errorer('simple values are not supported')\n}\njump[0xf4] = invalidMinor // false, handled by quick[]\njump[0xf5] = invalidMinor // true, handled by quick[]\njump[0xf6] = invalidMinor // null, handled by quick[]\njump[0xf7] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeUndefined // undefined\njump[0xf8] = errorer('simple values are not supported') // simple value, one byte follows, unsupported\njump[0xf9] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeFloat16 // half-precision float (two-byte IEEE 754)\njump[0xfa] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeFloat32 // single-precision float (four-byte IEEE 754)\njump[0xfb] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeFloat64 // double-precision float (eight-byte IEEE 754)\njump[0xfc] = invalidMinor\njump[0xfd] = invalidMinor\njump[0xfe] = invalidMinor\njump[0xff] = _7float_js__WEBPACK_IMPORTED_MODULE_8__.decodeBreak // \"break\" stop code\n\n/** @type {Token[]} */\nconst quick = []\n// ints <24\nfor (let i = 0; i < 24; i++) {\n  quick[i] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint, i, 1)\n}\n// negints >= -24\nfor (let i = -1; i >= -24; i--) {\n  quick[31 - i] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint, i, 1)\n}\n// empty bytes\nquick[0x40] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.bytes, new Uint8Array(0), 1)\n// empty string\nquick[0x60] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string, '', 1)\n// empty list\nquick[0x80] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array, 0, 1)\n// empty map\nquick[0xa0] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map, 0, 1)\n// false\nquick[0xf4] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.false, false, 1)\n// true\nquick[0xf5] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.true, true, 1)\n// null\nquick[0xf6] = new _token_js__WEBPACK_IMPORTED_MODULE_0__.Token(_token_js__WEBPACK_IMPORTED_MODULE_0__.Type.null, null, 1)\n\n/**\n * @param {Token} token\n * @returns {Uint8Array|undefined}\n */\nfunction quickEncodeToken (token) {\n  switch (token.type) {\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.false:\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xf4])\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.true:\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xf5])\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.null:\n      return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xf6])\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.bytes:\n      if (!token.value.length) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0x40])\n      }\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.string:\n      if (token.value === '') {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0x60])\n      }\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.array:\n      if (token.value === 0) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0x80])\n      }\n      /* c8 ignore next 2 */\n      // shouldn't be possible if this were called when there was only one token\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.map:\n      if (token.value === 0) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([0xa0])\n      }\n      /* c8 ignore next 2 */\n      // shouldn't be possible if this were called when there was only one token\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.uint:\n      if (token.value < 24) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([Number(token.value)])\n      }\n      return\n    case _token_js__WEBPACK_IMPORTED_MODULE_0__.Type.negint:\n      if (token.value >= -24) {\n        return (0,_byte_utils_js__WEBPACK_IMPORTED_MODULE_10__.fromArray)([31 - Number(token.value)])\n      }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/cborg/lib/jump.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/cborg/lib/token.js":
/*!******************************************!*\
  !*** ../node_modules/cborg/lib/token.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Token: () => (/* binding */ Token),\n/* harmony export */   Type: () => (/* binding */ Type)\n/* harmony export */ });\nclass Type {\n  /**\n   * @param {number} major\n   * @param {string} name\n   * @param {boolean} terminal\n   */\n  constructor (major, name, terminal) {\n    this.major = major\n    this.majorEncoded = major << 5\n    this.name = name\n    this.terminal = terminal\n  }\n\n  /* c8 ignore next 3 */\n  toString () {\n    return `Type[${this.major}].${this.name}`\n  }\n\n  /**\n   * @param {Type} typ\n   * @returns {number}\n   */\n  compare (typ) {\n    /* c8 ignore next 1 */\n    return this.major < typ.major ? -1 : this.major > typ.major ? 1 : 0\n  }\n}\n\n// convert to static fields when better supported\nType.uint = new Type(0, 'uint', true)\nType.negint = new Type(1, 'negint', true)\nType.bytes = new Type(2, 'bytes', true)\nType.string = new Type(3, 'string', true)\nType.array = new Type(4, 'array', false)\nType.map = new Type(5, 'map', false)\nType.tag = new Type(6, 'tag', false) // terminal?\nType.float = new Type(7, 'float', true)\nType.false = new Type(7, 'false', true)\nType.true = new Type(7, 'true', true)\nType.null = new Type(7, 'null', true)\nType.undefined = new Type(7, 'undefined', true)\nType.break = new Type(7, 'break', true)\n// Type.indefiniteLength = new Type(0, 'indefiniteLength', true)\n\nclass Token {\n  /**\n   * @param {Type} type\n   * @param {any} [value]\n   * @param {number} [encodedLength]\n   */\n  constructor (type, value, encodedLength) {\n    this.type = type\n    this.value = value\n    this.encodedLength = encodedLength\n    /** @type {Uint8Array|undefined} */\n    this.encodedBytes = undefined\n    /** @type {Uint8Array|undefined} */\n    this.byteValue = undefined\n  }\n\n  /* c8 ignore next 3 */\n  toString () {\n    return `Token[${this.type}].${this.value}`\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL2Nib3JnL2xpYi90b2tlbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsbUJBQW1CLFdBQVcsSUFBSSxVQUFVO0FBQzVDOztBQUVBO0FBQ0EsYUFBYSxNQUFNO0FBQ25CLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxhQUFhLE1BQU07QUFDbkIsYUFBYSxLQUFLO0FBQ2xCLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxzQkFBc0I7QUFDckM7QUFDQSxlQUFlLHNCQUFzQjtBQUNyQztBQUNBOztBQUVBO0FBQ0E7QUFDQSxvQkFBb0IsVUFBVSxJQUFJLFdBQVc7QUFDN0M7QUFDQTs7QUFFc0IiLCJzb3VyY2VzIjpbIkQ6XFxGdW5kUmFpc2VyXFxub2RlX21vZHVsZXNcXGNib3JnXFxsaWJcXHRva2VuLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIFR5cGUge1xuICAvKipcbiAgICogQHBhcmFtIHtudW1iZXJ9IG1ham9yXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gdGVybWluYWxcbiAgICovXG4gIGNvbnN0cnVjdG9yIChtYWpvciwgbmFtZSwgdGVybWluYWwpIHtcbiAgICB0aGlzLm1ham9yID0gbWFqb3JcbiAgICB0aGlzLm1ham9yRW5jb2RlZCA9IG1ham9yIDw8IDVcbiAgICB0aGlzLm5hbWUgPSBuYW1lXG4gICAgdGhpcy50ZXJtaW5hbCA9IHRlcm1pbmFsXG4gIH1cblxuICAvKiBjOCBpZ25vcmUgbmV4dCAzICovXG4gIHRvU3RyaW5nICgpIHtcbiAgICByZXR1cm4gYFR5cGVbJHt0aGlzLm1ham9yfV0uJHt0aGlzLm5hbWV9YFxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7VHlwZX0gdHlwXG4gICAqIEByZXR1cm5zIHtudW1iZXJ9XG4gICAqL1xuICBjb21wYXJlICh0eXApIHtcbiAgICAvKiBjOCBpZ25vcmUgbmV4dCAxICovXG4gICAgcmV0dXJuIHRoaXMubWFqb3IgPCB0eXAubWFqb3IgPyAtMSA6IHRoaXMubWFqb3IgPiB0eXAubWFqb3IgPyAxIDogMFxuICB9XG59XG5cbi8vIGNvbnZlcnQgdG8gc3RhdGljIGZpZWxkcyB3aGVuIGJldHRlciBzdXBwb3J0ZWRcblR5cGUudWludCA9IG5ldyBUeXBlKDAsICd1aW50JywgdHJ1ZSlcblR5cGUubmVnaW50ID0gbmV3IFR5cGUoMSwgJ25lZ2ludCcsIHRydWUpXG5UeXBlLmJ5dGVzID0gbmV3IFR5cGUoMiwgJ2J5dGVzJywgdHJ1ZSlcblR5cGUuc3RyaW5nID0gbmV3IFR5cGUoMywgJ3N0cmluZycsIHRydWUpXG5UeXBlLmFycmF5ID0gbmV3IFR5cGUoNCwgJ2FycmF5JywgZmFsc2UpXG5UeXBlLm1hcCA9IG5ldyBUeXBlKDUsICdtYXAnLCBmYWxzZSlcblR5cGUudGFnID0gbmV3IFR5cGUoNiwgJ3RhZycsIGZhbHNlKSAvLyB0ZXJtaW5hbD9cblR5cGUuZmxvYXQgPSBuZXcgVHlwZSg3LCAnZmxvYXQnLCB0cnVlKVxuVHlwZS5mYWxzZSA9IG5ldyBUeXBlKDcsICdmYWxzZScsIHRydWUpXG5UeXBlLnRydWUgPSBuZXcgVHlwZSg3LCAndHJ1ZScsIHRydWUpXG5UeXBlLm51bGwgPSBuZXcgVHlwZSg3LCAnbnVsbCcsIHRydWUpXG5UeXBlLnVuZGVmaW5lZCA9IG5ldyBUeXBlKDcsICd1bmRlZmluZWQnLCB0cnVlKVxuVHlwZS5icmVhayA9IG5ldyBUeXBlKDcsICdicmVhaycsIHRydWUpXG4vLyBUeXBlLmluZGVmaW5pdGVMZW5ndGggPSBuZXcgVHlwZSgwLCAnaW5kZWZpbml0ZUxlbmd0aCcsIHRydWUpXG5cbmNsYXNzIFRva2VuIHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7VHlwZX0gdHlwZVxuICAgKiBAcGFyYW0ge2FueX0gW3ZhbHVlXVxuICAgKiBAcGFyYW0ge251bWJlcn0gW2VuY29kZWRMZW5ndGhdXG4gICAqL1xuICBjb25zdHJ1Y3RvciAodHlwZSwgdmFsdWUsIGVuY29kZWRMZW5ndGgpIHtcbiAgICB0aGlzLnR5cGUgPSB0eXBlXG4gICAgdGhpcy52YWx1ZSA9IHZhbHVlXG4gICAgdGhpcy5lbmNvZGVkTGVuZ3RoID0gZW5jb2RlZExlbmd0aFxuICAgIC8qKiBAdHlwZSB7VWludDhBcnJheXx1bmRlZmluZWR9ICovXG4gICAgdGhpcy5lbmNvZGVkQnl0ZXMgPSB1bmRlZmluZWRcbiAgICAvKiogQHR5cGUge1VpbnQ4QXJyYXl8dW5kZWZpbmVkfSAqL1xuICAgIHRoaXMuYnl0ZVZhbHVlID0gdW5kZWZpbmVkXG4gIH1cblxuICAvKiBjOCBpZ25vcmUgbmV4dCAzICovXG4gIHRvU3RyaW5nICgpIHtcbiAgICByZXR1cm4gYFRva2VuWyR7dGhpcy50eXBlfV0uJHt0aGlzLnZhbHVlfWBcbiAgfVxufVxuXG5leHBvcnQgeyBUeXBlLCBUb2tlbiB9XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/cborg/lib/token.js\n");

/***/ })

};
;