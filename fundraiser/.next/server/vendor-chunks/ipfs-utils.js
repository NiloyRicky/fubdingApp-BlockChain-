"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/ipfs-utils";
exports.ids = ["vendor-chunks/ipfs-utils"];
exports.modules = {

/***/ "(ssr)/../node_modules/ipfs-utils/node_modules/browser-readablestream-to-it/index.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/ipfs-utils/node_modules/browser-readablestream-to-it/index.js ***!
  \*************************************************************************************/
/***/ ((module) => {

eval("\n\n/**\n * Turns a browser readable stream into an async iterable. Async iteration over\n * returned iterable will lock give stream, preventing any other consumer from\n * acquiring a reader. The lock will be released if iteration loop is broken. To\n * prevent stream cancelling optional `{ preventCancel: true }` could be passed\n * as a second argument.\n * @template T\n * @param {ReadableStream<T>} stream\n * @param {Object} [options]\n * @param {boolean} [options.preventCancel=boolean]\n * @returns {AsyncIterable<T>}\n */\nasync function * browserReadableStreamToIt (stream, options = {}) {\n  const reader = stream.getReader()\n\n  try {\n    while (true) {\n      const result = await reader.read()\n\n      if (result.done) {\n        return\n      }\n\n      yield result.value\n    }\n  } finally {\n    if (options.preventCancel !== true) {\n      reader.cancel()\n    }\n\n    reader.releaseLock()\n  }\n}\n\nmodule.exports = browserReadableStreamToIt\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL2lwZnMtdXRpbHMvbm9kZV9tb2R1bGVzL2Jyb3dzZXItcmVhZGFibGVzdHJlYW0tdG8taXQvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVo7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMscUJBQXFCO0FBQzlEO0FBQ0E7QUFDQSxXQUFXLG1CQUFtQjtBQUM5QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxTQUFTO0FBQ3BCLGFBQWE7QUFDYjtBQUNBLGdFQUFnRTtBQUNoRTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsiRDpcXEZ1bmRSYWlzZXJcXG5vZGVfbW9kdWxlc1xcaXBmcy11dGlsc1xcbm9kZV9tb2R1bGVzXFxicm93c2VyLXJlYWRhYmxlc3RyZWFtLXRvLWl0XFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuLyoqXG4gKiBUdXJucyBhIGJyb3dzZXIgcmVhZGFibGUgc3RyZWFtIGludG8gYW4gYXN5bmMgaXRlcmFibGUuIEFzeW5jIGl0ZXJhdGlvbiBvdmVyXG4gKiByZXR1cm5lZCBpdGVyYWJsZSB3aWxsIGxvY2sgZ2l2ZSBzdHJlYW0sIHByZXZlbnRpbmcgYW55IG90aGVyIGNvbnN1bWVyIGZyb21cbiAqIGFjcXVpcmluZyBhIHJlYWRlci4gVGhlIGxvY2sgd2lsbCBiZSByZWxlYXNlZCBpZiBpdGVyYXRpb24gbG9vcCBpcyBicm9rZW4uIFRvXG4gKiBwcmV2ZW50IHN0cmVhbSBjYW5jZWxsaW5nIG9wdGlvbmFsIGB7IHByZXZlbnRDYW5jZWw6IHRydWUgfWAgY291bGQgYmUgcGFzc2VkXG4gKiBhcyBhIHNlY29uZCBhcmd1bWVudC5cbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge1JlYWRhYmxlU3RyZWFtPFQ+fSBzdHJlYW1cbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW29wdGlvbnMucHJldmVudENhbmNlbD1ib29sZWFuXVxuICogQHJldHVybnMge0FzeW5jSXRlcmFibGU8VD59XG4gKi9cbmFzeW5jIGZ1bmN0aW9uICogYnJvd3NlclJlYWRhYmxlU3RyZWFtVG9JdCAoc3RyZWFtLCBvcHRpb25zID0ge30pIHtcbiAgY29uc3QgcmVhZGVyID0gc3RyZWFtLmdldFJlYWRlcigpXG5cbiAgdHJ5IHtcbiAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVhZGVyLnJlYWQoKVxuXG4gICAgICBpZiAocmVzdWx0LmRvbmUpIHtcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG5cbiAgICAgIHlpZWxkIHJlc3VsdC52YWx1ZVxuICAgIH1cbiAgfSBmaW5hbGx5IHtcbiAgICBpZiAob3B0aW9ucy5wcmV2ZW50Q2FuY2VsICE9PSB0cnVlKSB7XG4gICAgICByZWFkZXIuY2FuY2VsKClcbiAgICB9XG5cbiAgICByZWFkZXIucmVsZWFzZUxvY2soKVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYnJvd3NlclJlYWRhYmxlU3RyZWFtVG9JdFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/ipfs-utils/node_modules/browser-readablestream-to-it/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/ipfs-utils/node_modules/it-all/index.js":
/*!***************************************************************!*\
  !*** ../node_modules/ipfs-utils/node_modules/it-all/index.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("\n\n/**\n * Collects all values from an (async) iterable into an array and returns it.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst all = async (source) => {\n  const arr = []\n\n  for await (const entry of source) {\n    arr.push(entry)\n  }\n\n  return arr\n}\n\nmodule.exports = all\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL2lwZnMtdXRpbHMvbm9kZV9tb2R1bGVzL2l0LWFsbC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBWTs7QUFFWjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsOEJBQThCO0FBQ3pDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsiRDpcXEZ1bmRSYWlzZXJcXG5vZGVfbW9kdWxlc1xcaXBmcy11dGlsc1xcbm9kZV9tb2R1bGVzXFxpdC1hbGxcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG4vKipcbiAqIENvbGxlY3RzIGFsbCB2YWx1ZXMgZnJvbSBhbiAoYXN5bmMpIGl0ZXJhYmxlIGludG8gYW4gYXJyYXkgYW5kIHJldHVybnMgaXQuXG4gKlxuICogQHRlbXBsYXRlIFRcbiAqIEBwYXJhbSB7QXN5bmNJdGVyYWJsZTxUPnxJdGVyYWJsZTxUPn0gc291cmNlXG4gKi9cbmNvbnN0IGFsbCA9IGFzeW5jIChzb3VyY2UpID0+IHtcbiAgY29uc3QgYXJyID0gW11cblxuICBmb3IgYXdhaXQgKGNvbnN0IGVudHJ5IG9mIHNvdXJjZSkge1xuICAgIGFyci5wdXNoKGVudHJ5KVxuICB9XG5cbiAgcmV0dXJuIGFyclxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGFsbFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/ipfs-utils/node_modules/it-all/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/ipfs-utils/src/env.js":
/*!*********************************************!*\
  !*** ../node_modules/ipfs-utils/src/env.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst isElectron = __webpack_require__(/*! is-electron */ \"(ssr)/../node_modules/is-electron/index.js\")\n\nconst IS_ENV_WITH_DOM = typeof window === 'object' && typeof document === 'object' && document.nodeType === 9\n// @ts-ignore\nconst IS_ELECTRON = isElectron()\nconst IS_BROWSER = IS_ENV_WITH_DOM && !IS_ELECTRON\nconst IS_ELECTRON_MAIN = IS_ELECTRON && !IS_ENV_WITH_DOM\nconst IS_ELECTRON_RENDERER = IS_ELECTRON && IS_ENV_WITH_DOM\nconst IS_NODE =  true && typeof process !== 'undefined' && typeof process.release !== 'undefined' && process.release.name === 'node' && !IS_ELECTRON\n// @ts-ignore - we either ignore worker scope or dom scope\nconst IS_WEBWORKER = typeof importScripts === 'function' && typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope\nconst IS_TEST = typeof process !== 'undefined' && typeof process.env !== 'undefined' && \"development\" === 'test'\nconst IS_REACT_NATIVE = typeof navigator !== 'undefined' && navigator.product === 'ReactNative'\n\nmodule.exports = {\n  isTest: IS_TEST,\n  isElectron: IS_ELECTRON,\n  isElectronMain: IS_ELECTRON_MAIN,\n  isElectronRenderer: IS_ELECTRON_RENDERER,\n  isNode: IS_NODE,\n  /**\n   * Detects browser main thread  **NOT** web worker or service worker\n   */\n  isBrowser: IS_BROWSER,\n  isWebWorker: IS_WEBWORKER,\n  isEnvWithDom: IS_ENV_WITH_DOM,\n  isReactNative: IS_REACT_NATIVE\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL2lwZnMtdXRpbHMvc3JjL2Vudi5qcyIsIm1hcHBpbmdzIjoiQUFBWTtBQUNaLG1CQUFtQixtQkFBTyxDQUFDLCtEQUFhOztBQUV4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsS0FBNkI7QUFDN0M7QUFDQTtBQUNBLHdGQUF3RixhQUFvQjtBQUM1Rzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJEOlxcRnVuZFJhaXNlclxcbm9kZV9tb2R1bGVzXFxpcGZzLXV0aWxzXFxzcmNcXGVudi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcbmNvbnN0IGlzRWxlY3Ryb24gPSByZXF1aXJlKCdpcy1lbGVjdHJvbicpXG5cbmNvbnN0IElTX0VOVl9XSVRIX0RPTSA9IHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnICYmIHR5cGVvZiBkb2N1bWVudCA9PT0gJ29iamVjdCcgJiYgZG9jdW1lbnQubm9kZVR5cGUgPT09IDlcbi8vIEB0cy1pZ25vcmVcbmNvbnN0IElTX0VMRUNUUk9OID0gaXNFbGVjdHJvbigpXG5jb25zdCBJU19CUk9XU0VSID0gSVNfRU5WX1dJVEhfRE9NICYmICFJU19FTEVDVFJPTlxuY29uc3QgSVNfRUxFQ1RST05fTUFJTiA9IElTX0VMRUNUUk9OICYmICFJU19FTlZfV0lUSF9ET01cbmNvbnN0IElTX0VMRUNUUk9OX1JFTkRFUkVSID0gSVNfRUxFQ1RST04gJiYgSVNfRU5WX1dJVEhfRE9NXG5jb25zdCBJU19OT0RFID0gdHlwZW9mIHJlcXVpcmUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIHByb2Nlc3MgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBwcm9jZXNzLnJlbGVhc2UgIT09ICd1bmRlZmluZWQnICYmIHByb2Nlc3MucmVsZWFzZS5uYW1lID09PSAnbm9kZScgJiYgIUlTX0VMRUNUUk9OXG4vLyBAdHMtaWdub3JlIC0gd2UgZWl0aGVyIGlnbm9yZSB3b3JrZXIgc2NvcGUgb3IgZG9tIHNjb3BlXG5jb25zdCBJU19XRUJXT1JLRVIgPSB0eXBlb2YgaW1wb3J0U2NyaXB0cyA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIFdvcmtlckdsb2JhbFNjb3BlICE9PSAndW5kZWZpbmVkJyAmJiBzZWxmIGluc3RhbmNlb2YgV29ya2VyR2xvYmFsU2NvcGVcbmNvbnN0IElTX1RFU1QgPSB0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHByb2Nlc3MuZW52ICE9PSAndW5kZWZpbmVkJyAmJiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Rlc3QnXG5jb25zdCBJU19SRUFDVF9OQVRJVkUgPSB0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyAmJiBuYXZpZ2F0b3IucHJvZHVjdCA9PT0gJ1JlYWN0TmF0aXZlJ1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgaXNUZXN0OiBJU19URVNULFxuICBpc0VsZWN0cm9uOiBJU19FTEVDVFJPTixcbiAgaXNFbGVjdHJvbk1haW46IElTX0VMRUNUUk9OX01BSU4sXG4gIGlzRWxlY3Ryb25SZW5kZXJlcjogSVNfRUxFQ1RST05fUkVOREVSRVIsXG4gIGlzTm9kZTogSVNfTk9ERSxcbiAgLyoqXG4gICAqIERldGVjdHMgYnJvd3NlciBtYWluIHRocmVhZCAgKipOT1QqKiB3ZWIgd29ya2VyIG9yIHNlcnZpY2Ugd29ya2VyXG4gICAqL1xuICBpc0Jyb3dzZXI6IElTX0JST1dTRVIsXG4gIGlzV2ViV29ya2VyOiBJU19XRUJXT1JLRVIsXG4gIGlzRW52V2l0aERvbTogSVNfRU5WX1dJVEhfRE9NLFxuICBpc1JlYWN0TmF0aXZlOiBJU19SRUFDVF9OQVRJVkVcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/ipfs-utils/src/env.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/ipfs-utils/src/files/glob-source.js":
/*!***********************************************************!*\
  !*** ../node_modules/ipfs-utils/src/files/glob-source.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst fsp = (__webpack_require__(/*! fs */ \"fs\").promises)\nconst fs = __webpack_require__(/*! fs */ \"fs\")\nconst glob = __webpack_require__(/*! it-glob */ \"(ssr)/../node_modules/it-glob/index.js\")\nconst Path = __webpack_require__(/*! path */ \"path\")\nconst errCode = __webpack_require__(/*! err-code */ \"(ssr)/../node_modules/err-code/index.js\")\n\n/**\n * Create an async iterator that yields paths that match requested glob pattern\n *\n * @param {string} cwd - The directory to start matching the pattern in\n * @param {string} pattern - Glob pattern to match\n * @param {import('../types').GlobSourceOptions} [options] - Optional options\n * @returns {AsyncGenerator<import('../types').GlobSourceResult, void, unknown>} File objects that match glob\n */\nmodule.exports = async function * globSource (cwd, pattern, options) {\n  options = options || {}\n\n  if (typeof pattern !== 'string') {\n    throw errCode(\n      new Error('Pattern must be a string'),\n      'ERR_INVALID_PATH',\n      { pattern }\n    )\n  }\n\n  if (!Path.isAbsolute(cwd)) {\n    cwd = Path.resolve(process.cwd(), cwd)\n  }\n\n  const globOptions = Object.assign({}, {\n    nodir: false,\n    realpath: false,\n    absolute: true,\n    dot: Boolean(options.hidden),\n    follow: options.followSymlinks != null ? options.followSymlinks : true\n  })\n\n  for await (const p of glob(cwd, pattern, globOptions)) {\n    const stat = await fsp.stat(p)\n\n    let mode = options.mode\n\n    if (options.preserveMode) {\n      mode = stat.mode\n    }\n\n    let mtime = options.mtime\n\n    if (options.preserveMtime) {\n      mtime = stat.mtime\n    }\n\n    yield {\n      path: toPosix(p.replace(cwd, '')),\n      content: stat.isFile() ? fs.createReadStream(p) : undefined,\n      mode,\n      mtime\n    }\n  }\n}\n\n/**\n * @param {string} path\n */\nconst toPosix = path => path.replace(/\\\\/g, '/')\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL2lwZnMtdXRpbHMvc3JjL2ZpbGVzL2dsb2Itc291cmNlLmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaLFlBQVksOENBQXNCO0FBQ2xDLFdBQVcsbUJBQU8sQ0FBQyxjQUFJO0FBQ3ZCLGFBQWEsbUJBQU8sQ0FBQyx1REFBUztBQUM5QixhQUFhLG1CQUFPLENBQUMsa0JBQU07QUFDM0IsZ0JBQWdCLG1CQUFPLENBQUMseURBQVU7O0FBRWxDO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxzQ0FBc0M7QUFDakQsYUFBYSxvRUFBb0U7QUFDakY7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBIiwic291cmNlcyI6WyJEOlxcRnVuZFJhaXNlclxcbm9kZV9tb2R1bGVzXFxpcGZzLXV0aWxzXFxzcmNcXGZpbGVzXFxnbG9iLXNvdXJjZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuY29uc3QgZnNwID0gcmVxdWlyZSgnZnMnKS5wcm9taXNlc1xuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpXG5jb25zdCBnbG9iID0gcmVxdWlyZSgnaXQtZ2xvYicpXG5jb25zdCBQYXRoID0gcmVxdWlyZSgncGF0aCcpXG5jb25zdCBlcnJDb2RlID0gcmVxdWlyZSgnZXJyLWNvZGUnKVxuXG4vKipcbiAqIENyZWF0ZSBhbiBhc3luYyBpdGVyYXRvciB0aGF0IHlpZWxkcyBwYXRocyB0aGF0IG1hdGNoIHJlcXVlc3RlZCBnbG9iIHBhdHRlcm5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gY3dkIC0gVGhlIGRpcmVjdG9yeSB0byBzdGFydCBtYXRjaGluZyB0aGUgcGF0dGVybiBpblxuICogQHBhcmFtIHtzdHJpbmd9IHBhdHRlcm4gLSBHbG9iIHBhdHRlcm4gdG8gbWF0Y2hcbiAqIEBwYXJhbSB7aW1wb3J0KCcuLi90eXBlcycpLkdsb2JTb3VyY2VPcHRpb25zfSBbb3B0aW9uc10gLSBPcHRpb25hbCBvcHRpb25zXG4gKiBAcmV0dXJucyB7QXN5bmNHZW5lcmF0b3I8aW1wb3J0KCcuLi90eXBlcycpLkdsb2JTb3VyY2VSZXN1bHQsIHZvaWQsIHVua25vd24+fSBGaWxlIG9iamVjdHMgdGhhdCBtYXRjaCBnbG9iXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gYXN5bmMgZnVuY3Rpb24gKiBnbG9iU291cmNlIChjd2QsIHBhdHRlcm4sIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge31cblxuICBpZiAodHlwZW9mIHBhdHRlcm4gIT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgZXJyQ29kZShcbiAgICAgIG5ldyBFcnJvcignUGF0dGVybiBtdXN0IGJlIGEgc3RyaW5nJyksXG4gICAgICAnRVJSX0lOVkFMSURfUEFUSCcsXG4gICAgICB7IHBhdHRlcm4gfVxuICAgIClcbiAgfVxuXG4gIGlmICghUGF0aC5pc0Fic29sdXRlKGN3ZCkpIHtcbiAgICBjd2QgPSBQYXRoLnJlc29sdmUocHJvY2Vzcy5jd2QoKSwgY3dkKVxuICB9XG5cbiAgY29uc3QgZ2xvYk9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHt9LCB7XG4gICAgbm9kaXI6IGZhbHNlLFxuICAgIHJlYWxwYXRoOiBmYWxzZSxcbiAgICBhYnNvbHV0ZTogdHJ1ZSxcbiAgICBkb3Q6IEJvb2xlYW4ob3B0aW9ucy5oaWRkZW4pLFxuICAgIGZvbGxvdzogb3B0aW9ucy5mb2xsb3dTeW1saW5rcyAhPSBudWxsID8gb3B0aW9ucy5mb2xsb3dTeW1saW5rcyA6IHRydWVcbiAgfSlcblxuICBmb3IgYXdhaXQgKGNvbnN0IHAgb2YgZ2xvYihjd2QsIHBhdHRlcm4sIGdsb2JPcHRpb25zKSkge1xuICAgIGNvbnN0IHN0YXQgPSBhd2FpdCBmc3Auc3RhdChwKVxuXG4gICAgbGV0IG1vZGUgPSBvcHRpb25zLm1vZGVcblxuICAgIGlmIChvcHRpb25zLnByZXNlcnZlTW9kZSkge1xuICAgICAgbW9kZSA9IHN0YXQubW9kZVxuICAgIH1cblxuICAgIGxldCBtdGltZSA9IG9wdGlvbnMubXRpbWVcblxuICAgIGlmIChvcHRpb25zLnByZXNlcnZlTXRpbWUpIHtcbiAgICAgIG10aW1lID0gc3RhdC5tdGltZVxuICAgIH1cblxuICAgIHlpZWxkIHtcbiAgICAgIHBhdGg6IHRvUG9zaXgocC5yZXBsYWNlKGN3ZCwgJycpKSxcbiAgICAgIGNvbnRlbnQ6IHN0YXQuaXNGaWxlKCkgPyBmcy5jcmVhdGVSZWFkU3RyZWFtKHApIDogdW5kZWZpbmVkLFxuICAgICAgbW9kZSxcbiAgICAgIG10aW1lXG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IHBhdGhcbiAqL1xuY29uc3QgdG9Qb3NpeCA9IHBhdGggPT4gcGF0aC5yZXBsYWNlKC9cXFxcL2csICcvJylcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/ipfs-utils/src/files/glob-source.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/ipfs-utils/src/files/url-source.js":
/*!**********************************************************!*\
  !*** ../node_modules/ipfs-utils/src/files/url-source.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst HTTP = __webpack_require__(/*! ../http */ \"(ssr)/../node_modules/ipfs-utils/src/http.js\")\n\n/**\n *\n * @param {string} url\n * @param {import(\"../types\").HTTPOptions} [options]\n * @returns {{ path: string; content?: AsyncIterable<Uint8Array> }}\n */\nconst urlSource = (url, options) => {\n  return {\n    path: decodeURIComponent(new URL(url).pathname.split('/').pop() || ''),\n    content: readURLContent(url, options)\n  }\n}\n\n/**\n *\n * @param {string} url\n * @param {import(\"../types\").HTTPOptions} [options]\n * @returns {AsyncIterable<Uint8Array>}\n */\nasync function * readURLContent (url, options) {\n  const http = new HTTP()\n  const response = await http.get(url, options)\n\n  yield * response.iterator()\n}\n\nmodule.exports = urlSource\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL2lwZnMtdXRpbHMvc3JjL2ZpbGVzL3VybC1zb3VyY2UuanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVosYUFBYSxtQkFBTyxDQUFDLDZEQUFTOztBQUU5QjtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZ0NBQWdDO0FBQzNDLGVBQWUsY0FBYztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsZ0NBQWdDO0FBQzNDLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJEOlxcRnVuZFJhaXNlclxcbm9kZV9tb2R1bGVzXFxpcGZzLXV0aWxzXFxzcmNcXGZpbGVzXFx1cmwtc291cmNlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5jb25zdCBIVFRQID0gcmVxdWlyZSgnLi4vaHR0cCcpXG5cbi8qKlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmxcbiAqIEBwYXJhbSB7aW1wb3J0KFwiLi4vdHlwZXNcIikuSFRUUE9wdGlvbnN9IFtvcHRpb25zXVxuICogQHJldHVybnMge3sgcGF0aDogc3RyaW5nOyBjb250ZW50PzogQXN5bmNJdGVyYWJsZTxVaW50OEFycmF5PiB9fVxuICovXG5jb25zdCB1cmxTb3VyY2UgPSAodXJsLCBvcHRpb25zKSA9PiB7XG4gIHJldHVybiB7XG4gICAgcGF0aDogZGVjb2RlVVJJQ29tcG9uZW50KG5ldyBVUkwodXJsKS5wYXRobmFtZS5zcGxpdCgnLycpLnBvcCgpIHx8ICcnKSxcbiAgICBjb250ZW50OiByZWFkVVJMQ29udGVudCh1cmwsIG9wdGlvbnMpXG4gIH1cbn1cblxuLyoqXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHVybFxuICogQHBhcmFtIHtpbXBvcnQoXCIuLi90eXBlc1wiKS5IVFRQT3B0aW9uc30gW29wdGlvbnNdXG4gKiBAcmV0dXJucyB7QXN5bmNJdGVyYWJsZTxVaW50OEFycmF5Pn1cbiAqL1xuYXN5bmMgZnVuY3Rpb24gKiByZWFkVVJMQ29udGVudCAodXJsLCBvcHRpb25zKSB7XG4gIGNvbnN0IGh0dHAgPSBuZXcgSFRUUCgpXG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgaHR0cC5nZXQodXJsLCBvcHRpb25zKVxuXG4gIHlpZWxkICogcmVzcG9uc2UuaXRlcmF0b3IoKVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHVybFNvdXJjZVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/ipfs-utils/src/files/url-source.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/ipfs-utils/src/http.js":
/*!**********************************************!*\
  !*** ../node_modules/ipfs-utils/src/http.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* eslint-disable no-undef */\n\n\nconst { fetch, Request, Headers } = __webpack_require__(/*! ./http/fetch */ \"(ssr)/../node_modules/ipfs-utils/src/http/fetch.js\")\nconst { TimeoutError, HTTPError } = __webpack_require__(/*! ./http/error */ \"(ssr)/../node_modules/ipfs-utils/src/http/error.js\")\nconst merge = (__webpack_require__(/*! merge-options */ \"(ssr)/../node_modules/merge-options/index.js\").bind)({ ignoreUndefined: true })\nconst { URL, URLSearchParams } = __webpack_require__(/*! iso-url */ \"(ssr)/../node_modules/iso-url/index.js\")\nconst anySignal = __webpack_require__(/*! any-signal */ \"(ssr)/../node_modules/any-signal/index.js\")\nconst browserReableStreamToIt = __webpack_require__(/*! browser-readablestream-to-it */ \"(ssr)/../node_modules/ipfs-utils/node_modules/browser-readablestream-to-it/index.js\")\nconst { isBrowser, isWebWorker } = __webpack_require__(/*! ./env */ \"(ssr)/../node_modules/ipfs-utils/src/env.js\")\nconst all = __webpack_require__(/*! it-all */ \"(ssr)/../node_modules/ipfs-utils/node_modules/it-all/index.js\")\n\n/**\n * @typedef {import('stream').Readable} NodeReadableStream\n * @typedef {import('./types').HTTPOptions} HTTPOptions\n * @typedef {import('./types').ExtendedResponse} ExtendedResponse\n */\n\n/**\n * @template TResponse\n * @param {Promise<TResponse>} promise\n * @param {number | undefined} ms\n * @param {AbortController} abortController\n * @returns {Promise<TResponse>}\n */\nconst timeout = (promise, ms, abortController) => {\n  if (ms === undefined) {\n    return promise\n  }\n\n  const start = Date.now()\n\n  const timedOut = () => {\n    const time = Date.now() - start\n\n    return time >= ms\n  }\n\n  return new Promise((resolve, reject) => {\n    const timeoutID = setTimeout(() => {\n      if (timedOut()) {\n        reject(new TimeoutError())\n        abortController.abort()\n      }\n    }, ms)\n\n    /**\n     * @param {(value: any) => void } next\n     */\n    const after = (next) => {\n      /**\n       * @param {any} res\n       */\n      const fn = (res) => {\n        clearTimeout(timeoutID)\n\n        if (timedOut()) {\n          reject(new TimeoutError())\n          return\n        }\n\n        next(res)\n      }\n      return fn\n    }\n\n    promise\n      .then(after(resolve), after(reject))\n  })\n}\n\nconst defaults = {\n  throwHttpErrors: true,\n  credentials: 'same-origin'\n}\n\nclass HTTP {\n  /**\n   *\n   * @param {HTTPOptions} options\n   */\n  constructor (options = {}) {\n    /** @type {HTTPOptions} */\n    this.opts = merge(defaults, options)\n  }\n\n  /**\n   * Fetch\n   *\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   * @returns {Promise<ExtendedResponse>}\n   */\n  async fetch (resource, options = {}) {\n    /** @type {HTTPOptions} */\n    const opts = merge(this.opts, options)\n    // @ts-expect-error\n    const headers = new Headers(opts.headers)\n\n    // validate resource type\n    // @ts-expect-error\n    if (typeof resource !== 'string' && !(resource instanceof URL || resource instanceof Request)) {\n      throw new TypeError('`resource` must be a string, URL, or Request')\n    }\n\n    const url = new URL(resource.toString(), opts.base)\n\n    const {\n      searchParams,\n      transformSearchParams,\n      json\n    } = opts\n\n    if (searchParams) {\n      if (typeof transformSearchParams === 'function') {\n        // @ts-ignore\n        url.search = transformSearchParams(new URLSearchParams(opts.searchParams))\n      } else {\n        // @ts-ignore\n        url.search = new URLSearchParams(opts.searchParams)\n      }\n    }\n\n    if (json) {\n      opts.body = JSON.stringify(opts.json)\n      headers.set('content-type', 'application/json')\n    }\n\n    const abortController = new AbortController()\n    // @ts-ignore\n    const signal = anySignal([abortController.signal, opts.signal])\n\n    if (globalThis.ReadableStream != null && opts.body instanceof globalThis.ReadableStream && (isBrowser || isWebWorker)) {\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=1387483\n      opts.body = new Blob(await all(browserReableStreamToIt(opts.body)))\n    }\n\n    /** @type {ExtendedResponse} */\n    // @ts-expect-error additional fields are assigned below\n    const response = await timeout(\n      fetch(\n        url.toString(),\n        {\n          ...opts,\n          signal,\n          // @ts-expect-error non-browser fetch implementations may take extra options\n          timeout: undefined,\n          headers,\n\n          // https://fetch.spec.whatwg.org/#dom-requestinit-duplex\n          // https://github.com/whatwg/fetch/issues/1254\n          duplex: 'half'\n        }\n      ),\n      opts.timeout,\n      abortController\n    )\n\n    if (!response.ok && opts.throwHttpErrors) {\n      if (opts.handleError) {\n        await opts.handleError(response)\n      }\n      throw new HTTPError(response)\n    }\n\n    response.iterator = async function * () {\n      yield * fromStream(response.body)\n    }\n\n    response.ndjson = async function * () {\n      for await (const chunk of ndjson(response.iterator())) {\n        if (options.transform) {\n          yield options.transform(chunk)\n        } else {\n          yield chunk\n        }\n      }\n    }\n\n    return response\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  post (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'POST' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  get (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'GET' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  put (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'PUT' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  delete (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'DELETE' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  options (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'OPTIONS' })\n  }\n}\n\n/**\n * Parses NDJSON chunks from an iterator\n *\n * @param {AsyncIterable<Uint8Array>} source\n * @returns {AsyncIterable<any>}\n */\nconst ndjson = async function * (source) {\n  const decoder = new TextDecoder()\n  let buf = ''\n\n  for await (const chunk of source) {\n    buf += decoder.decode(chunk, { stream: true })\n    const lines = buf.split(/\\r?\\n/)\n\n    for (let i = 0; i < lines.length - 1; i++) {\n      const l = lines[i].trim()\n      if (l.length > 0) {\n        yield JSON.parse(l)\n      }\n    }\n    buf = lines[lines.length - 1]\n  }\n  buf += decoder.decode()\n  buf = buf.trim()\n  if (buf.length !== 0) {\n    yield JSON.parse(buf)\n  }\n}\n\n/**\n * Stream to AsyncIterable\n *\n * @template TChunk\n * @param {ReadableStream<TChunk> | NodeReadableStream | null} source\n * @returns {AsyncIterable<TChunk>}\n */\nconst fromStream = (source) => {\n  if (isAsyncIterable(source)) {\n    return source\n  }\n\n  // Workaround for https://github.com/node-fetch/node-fetch/issues/766\n  if (isNodeReadableStream(source)) {\n    const iter = source[Symbol.asyncIterator]()\n    return {\n      [Symbol.asyncIterator] () {\n        return {\n          next: iter.next.bind(iter),\n          return (value) {\n            source.destroy()\n            if (typeof iter.return === 'function') {\n              return iter.return()\n            }\n            return Promise.resolve({ done: true, value })\n          }\n        }\n      }\n    }\n  }\n\n  if (isWebReadableStream(source)) {\n    const reader = source.getReader()\n    return (async function * () {\n      try {\n        while (true) {\n          // Read from the stream\n          const { done, value } = await reader.read()\n          // Exit if we're done\n          if (done) return\n          // Else yield the chunk\n          if (value) {\n            yield value\n          }\n        }\n      } finally {\n        reader.releaseLock()\n      }\n    })()\n  }\n\n  throw new TypeError('Body can\\'t be converted to AsyncIterable')\n}\n\n/**\n * Check if it's an AsyncIterable\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|AsyncIterable<TChunk>} value\n * @returns {value is AsyncIterable<TChunk>}\n */\nconst isAsyncIterable = (value) => {\n  return typeof value === 'object' &&\n  value !== null &&\n  typeof /** @type {any} */(value)[Symbol.asyncIterator] === 'function'\n}\n\n/**\n * Check for web readable stream\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|ReadableStream<TChunk>} value\n * @returns {value is ReadableStream<TChunk>}\n */\nconst isWebReadableStream = (value) => {\n  return value && typeof /** @type {any} */(value).getReader === 'function'\n}\n\n/**\n * @param {any} value\n * @returns {value is NodeReadableStream}\n */\nconst isNodeReadableStream = (value) =>\n  Object.prototype.hasOwnProperty.call(value, 'readable') &&\n  Object.prototype.hasOwnProperty.call(value, 'writable')\n\nHTTP.HTTPError = HTTPError\nHTTP.TimeoutError = TimeoutError\nHTTP.streamToAsyncIterator = fromStream\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.post = (resource, options) => new HTTP(options).post(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.get = (resource, options) => new HTTP(options).get(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.put = (resource, options) => new HTTP(options).put(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.delete = (resource, options) => new HTTP(options).delete(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.options = (resource, options) => new HTTP(options).options(resource, options)\n\nmodule.exports = HTTP\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/ipfs-utils/src/http.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/ipfs-utils/src/http/error.js":
/*!****************************************************!*\
  !*** ../node_modules/ipfs-utils/src/http/error.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nclass TimeoutError extends Error {\n  constructor (message = 'Request timed out') {\n    super(message)\n    this.name = 'TimeoutError'\n  }\n}\nexports.TimeoutError = TimeoutError\n\nclass AbortError extends Error {\n  constructor (message = 'The operation was aborted.') {\n    super(message)\n    this.name = 'AbortError'\n  }\n}\nexports.AbortError = AbortError\n\nclass HTTPError extends Error {\n  /**\n   * @param {Response} response\n   */\n  constructor (response) {\n    super(response.statusText)\n    this.name = 'HTTPError'\n    this.response = response\n  }\n}\nexports.HTTPError = HTTPError\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL2lwZnMtdXRpbHMvc3JjL2h0dHAvZXJyb3IuanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9COztBQUVwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7O0FBRWxCO0FBQ0E7QUFDQSxhQUFhLFVBQVU7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIiLCJzb3VyY2VzIjpbIkQ6XFxGdW5kUmFpc2VyXFxub2RlX21vZHVsZXNcXGlwZnMtdXRpbHNcXHNyY1xcaHR0cFxcZXJyb3IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbmNsYXNzIFRpbWVvdXRFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgY29uc3RydWN0b3IgKG1lc3NhZ2UgPSAnUmVxdWVzdCB0aW1lZCBvdXQnKSB7XG4gICAgc3VwZXIobWVzc2FnZSlcbiAgICB0aGlzLm5hbWUgPSAnVGltZW91dEVycm9yJ1xuICB9XG59XG5leHBvcnRzLlRpbWVvdXRFcnJvciA9IFRpbWVvdXRFcnJvclxuXG5jbGFzcyBBYm9ydEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBjb25zdHJ1Y3RvciAobWVzc2FnZSA9ICdUaGUgb3BlcmF0aW9uIHdhcyBhYm9ydGVkLicpIHtcbiAgICBzdXBlcihtZXNzYWdlKVxuICAgIHRoaXMubmFtZSA9ICdBYm9ydEVycm9yJ1xuICB9XG59XG5leHBvcnRzLkFib3J0RXJyb3IgPSBBYm9ydEVycm9yXG5cbmNsYXNzIEhUVFBFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7UmVzcG9uc2V9IHJlc3BvbnNlXG4gICAqL1xuICBjb25zdHJ1Y3RvciAocmVzcG9uc2UpIHtcbiAgICBzdXBlcihyZXNwb25zZS5zdGF0dXNUZXh0KVxuICAgIHRoaXMubmFtZSA9ICdIVFRQRXJyb3InXG4gICAgdGhpcy5yZXNwb25zZSA9IHJlc3BvbnNlXG4gIH1cbn1cbmV4cG9ydHMuSFRUUEVycm9yID0gSFRUUEVycm9yXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/ipfs-utils/src/http/error.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/ipfs-utils/src/http/fetch.js":
/*!****************************************************!*\
  !*** ../node_modules/ipfs-utils/src/http/fetch.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/**\n * @typedef {object} fetchImpl\n * @property {globalThis.fetch} fetchImpl.fetch\n * @property {globalThis.Request} fetchImpl.Request\n * @property {globalThis.Response} fetchImpl.Response\n * @property {globalThis.Headers} fetchImpl.Headers\n */\n\nlet implName = './fetch.node'\n\nif (typeof XMLHttpRequest === 'function') {\n  // Electron has `XMLHttpRequest` and should get the browser implementation\n  // instead of node.\n  implName = './fetch.browser'\n}\n\n/** @type {fetchImpl} */\nconst fetch = __webpack_require__(\"(ssr)/../node_modules/ipfs-utils/src/http sync recursive\")(implName)\n\nmodule.exports = fetch\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL2lwZnMtdXRpbHMvc3JjL2h0dHAvZmV0Y2guanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVo7QUFDQSxhQUFhLFFBQVE7QUFDckIsY0FBYyxrQkFBa0I7QUFDaEMsY0FBYyxvQkFBb0I7QUFDbEMsY0FBYyxxQkFBcUI7QUFDbkMsY0FBYyxvQkFBb0I7QUFDbEM7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxXQUFXLFdBQVc7QUFDdEIsY0FBYyxnRkFBUSxRQUFRLENBQUM7O0FBRS9CIiwic291cmNlcyI6WyJEOlxcRnVuZFJhaXNlclxcbm9kZV9tb2R1bGVzXFxpcGZzLXV0aWxzXFxzcmNcXGh0dHBcXGZldGNoLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG4vKipcbiAqIEB0eXBlZGVmIHtvYmplY3R9IGZldGNoSW1wbFxuICogQHByb3BlcnR5IHtnbG9iYWxUaGlzLmZldGNofSBmZXRjaEltcGwuZmV0Y2hcbiAqIEBwcm9wZXJ0eSB7Z2xvYmFsVGhpcy5SZXF1ZXN0fSBmZXRjaEltcGwuUmVxdWVzdFxuICogQHByb3BlcnR5IHtnbG9iYWxUaGlzLlJlc3BvbnNlfSBmZXRjaEltcGwuUmVzcG9uc2VcbiAqIEBwcm9wZXJ0eSB7Z2xvYmFsVGhpcy5IZWFkZXJzfSBmZXRjaEltcGwuSGVhZGVyc1xuICovXG5cbmxldCBpbXBsTmFtZSA9ICcuL2ZldGNoLm5vZGUnXG5cbmlmICh0eXBlb2YgWE1MSHR0cFJlcXVlc3QgPT09ICdmdW5jdGlvbicpIHtcbiAgLy8gRWxlY3Ryb24gaGFzIGBYTUxIdHRwUmVxdWVzdGAgYW5kIHNob3VsZCBnZXQgdGhlIGJyb3dzZXIgaW1wbGVtZW50YXRpb25cbiAgLy8gaW5zdGVhZCBvZiBub2RlLlxuICBpbXBsTmFtZSA9ICcuL2ZldGNoLmJyb3dzZXInXG59XG5cbi8qKiBAdHlwZSB7ZmV0Y2hJbXBsfSAqL1xuY29uc3QgZmV0Y2ggPSByZXF1aXJlKGltcGxOYW1lKVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZldGNoXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/ipfs-utils/src/http/fetch.js\n");

/***/ })

};
;